umi_tools extract --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};
umi_tools extract --3prime --extract-method=string --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};


--bc-pattern='.+(?P<discard_1>AACTGTAGGCACCATCAAT){s<=2}(?P<umi_1>.{4})(?P<discard_2>.+)'

R1 5' : NNNN-ACAGGTTCAGAGTTCTACAGTCCGAC
R1 3' : GTTCAGAGTTCTACAGTCCGACGATC-NNNN

R2 3' : CAAGTCTCAAGATGTCAGGCTGCTAG-MMMM
R2 5' : MMMM-ACCTTAAGAGCCCACGGTTC


```
umi_tools extract --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};

umi_tools extract --3prime --extract-method=string --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq} --log=${filename/.fastq/.txt};
```
This doesn't take into account the file names correctly but here the top line is what we were using to remove the sequence from the 5' end originally. I adapted the code to be ran again after the 5' end is removed, go back to the modified transcript and remove the sequence from the 3' end. So just to confirm, with this being run we don't want to remove the adapter from the 3' end first.

cutadapt -m 1 --overlap 7  -a  N{4}TGGAATTCTCGGGTGCCAAG -A N{4}GATCGTCGGACTGTAGAACT -o ck03_r1.fastq -p ck03_r2.fastq ck03_R1_UMI.fastq ck03_R2_UMI.fastq

#FOR RC
cutadapt -m 1 --overlap 7  -a  N{4}ACCTTAAGAGCCCACGGTTC -A N{4}CTAGCAGCCTGACATCTTGA -o ck03_r1.fastq -p ck03_r2.fastq ck03_R1_UMI.fastq ck03_R2_UMI.fastq

cutadapt -m 1 --overlap 7  -g  CTTGGCACCCGAGAATTCCAN{4} \
  -G AGTTCTACAGTCCGACGATCN{4} -o ck03_r1.fastq -p ck03_r2.fastq \
   ck03_R1_UMI.fastq ck03_R2_UMI.fastq


umi_tools extract --stdin=ck03_R1.fastq --read2-in=ck03_R2.fastq --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=ck03_R1_UMI.fastq --read2-out=ck03_R2_UMI.fastq;

UMI_TOOLS must be run first otherwise there will be trimmed reads too short for UMI-tools to handle

hisat2 -q --phred33 --max-intronlen 4000 --known-splicesite-infile --no-unal /bgfs/ckaplan/Anand_seq/Genomes/INDEX_HISAT2/spo_sce_index/spo_sce_splicesites.txt -x /bgfs/ckaplan/Anand_seq/Genomes/INDEX_HISAT2/spo_sce_index/ht2_spo_sce_index -1 ck03_r1.fastq -2 ck03_r2.fastq -S ck03.sam --rna-strandness RF --secondary --no-mixed --summary-file ck03_hisat.txt;

samtools view -F 16 ck03_unique_sorted.bam -o ck03_plus.bam
samtools view -f 16 ck03_unique_sorted.bam -o ck03_minus.bam

bamCoverage -b ck03_plus_sorted.bam -o ck03_plus.bw -of bigwig &
bamCoverage -b ck03_minus_sorted.bam -o ck03_minus.bw -of bigwig &

computeMatrix reference-point --referencePoint TSS -S WT_plus_.bw -R introns_plus_a.bed -b 100 -a 900  --sortRegions keep --binSize 1 --missingDataAsZero --outFileNameMatrix WT_plus.tab -o WT_plus.gzip &
computeMatrix reference-point --referencePoint TSS -S WT_minus_.bw -R introns_minus_a.bed -b 100 -a 900  --sortRegions keep --binSize 1 --missingDataAsZero --outFileNameMatrix WT_minus.tab -o WT_minus.gzip &
computeMatrix reference-point --referencePoint TSS -S WT.bw -R introns.bed -b 100 -a 900  --sortRegions keep --binSize 1 --missingDataAsZero --outFileNameMatrix WT.tab -o WT.gzip &



bioawk -cfastx 'length($seq) > 1 {print "@"$name"\n"$seq"\n+\n"$qual}'

tagcagcccaatccattggtgaacca
gtggccaaaaacatgaaaacccctt
#TRIGGER LOOP
gctacacaaatgactcttaacaccttccacttcgctggtgttgcttccaaaaaggttacctctggtgtcccacgtttaaaggaaattttgaat



computeMatrix reference-point --referencePoint TSS -S ck03_S2_L003_R1_001_unique_SKIPS_sce_3p_minus_sorted_rs_sorted.bw -R introns_minus_rank.bed  -b 100 -a 1000 --sortRegions keep --binSize 1 --missingDataAsZero --outFileNameMatrix test_rs_minus.tab -o test_rs_minus.matrix
