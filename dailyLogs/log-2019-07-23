Script started on Tue 23 Jul 2019 07:55:55 AM EDT
]0;amv69@login0b:~[?1034h(base) [amv69@login0b ~]$ ls
[0m[01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ wget http://hgdownload.soe.ucsc.edu/goldenPath/sacCer3/chromosomes/chrII.fa.gz
--2019-07-23 08:44:18--  http://hgdownload.soe.ucsc.edu/goldenPath/sacCer3/chromosomes/chrII.fa.gz
Resolving hgdownload.soe.ucsc.edu (hgdownload.soe.ucsc.edu)... 128.114.119.163
Connecting to hgdownload.soe.ucsc.edu (hgdownload.soe.ucsc.edu)|128.114.119.163|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 256424 (250K) [application/x-gzip]
Saving to: â€˜chrII.fa.gzâ€™

 0% [                                                                                    ] 0           --.-K/s              31% [=========================>                                                          ] 80,210       299KB/s             64% [=====================================================>                              ] 166,138      336KB/s             100%[===================================================================================>] 256,424      399KB/s   in 0.6s   

2019-07-23 08:44:19 (399 KB/s) - â€˜chrII.fa.gzâ€™ saved [256424/256424]

]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls
[0m[01;31mchrII.fa.gz[0m  [01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ wget http://hgdownload.soe.ucsc.edu/goldenPath/sacCer3/database/chrII_est.txt.gz
--2019-07-23 08:44:57--  http://hgdownload.soe.ucsc.edu/goldenPath/sacCer3/database/chrII_est.txt.gz
Resolving hgdownload.soe.ucsc.edu (hgdownload.soe.ucsc.edu)... 128.114.119.163
Connecting to hgdownload.soe.ucsc.edu (hgdownload.soe.ucsc.edu)|128.114.119.163|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 72331 (71K) [application/x-gzip]
Saving to: â€˜chrII_est.txt.gzâ€™

 0% [                                                                                    ] 0           --.-K/s              100%[===================================================================================>] 72,331       359KB/s   in 0.2s   

2019-07-23 08:44:58 (359 KB/s) - â€˜chrII_est.txt.gzâ€™ saved [72331/72331]

]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls
[0m[01;31mchrII_est.txt.gz[0m  [01;31mchrII.fa.gz[0m  [01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ gzip chr[K[K[K[K[K[K[Kz chrII_est.txt.gz 
bash: gz: command not found
]0;amv69@login0b:~(base) [amv69@login0b ~]$ gunzip chrII_est.txt.gz 
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls
chrII_est.txt  [0m[01;31mchrII.fa.gz[0m  [01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ gun[K[K[Kgunzip chrII.fa.gz 
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls
chrII_est.txt  chrII.fa  [0m[01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls l[K-lha
total 2.8M
drwxr-xr-x 18 amv69 ckaplan  879 Jul 23 08:45 [0m[01;34m.[0m
drwxr-xr-x  9 root  root     162 Jul 17 09:25 [01;34m..[0m
-rw-------  1 amv69 ckaplan  23K Jul 22 16:34 .bash_history
-rw-r--r--  1 amv69 ckaplan   18 Sep  6  2018 .bash_logout
-rw-r--r--  1 amv69 ckaplan  193 Sep  6  2018 .bash_profile
-rw-r--r--  1 amv69 ckaplan  803 Jul 22 12:10 .bashrc
drwxr-xr-x  5 amv69 ckaplan   78 Feb 18 13:36 [01;34m.cache[0m
-rw-r--r--  1 amv69 ckaplan 243K May 28  2012 chrII_est.txt
-rw-r--r--  1 amv69 ckaplan 811K Sep  2  2011 chrII.fa
drwxrwsr-x  2 amv69 ckaplan   34 Jul 17 12:35 [01;34m.conda[0m
-rw-r--r--  1 amv69 ckaplan   64 Jul 17 12:58 .condarc
drwxr-xr-x  5 amv69 ckaplan   82 Jul 17 14:14 [01;34m.config[0m
-rw-r--r--  1 amv69 ckaplan  334 Sep  6  2018 .emacs
drwx------  2 amv69 ckaplan    0 Jul 17 14:04 [01;34m.emacs.d[0m
drwxr-xr-x  2 amv69 ckaplan   84 Jul 19 09:07 [01;34mfasta[0m
-rw-r--r--  1 amv69 ckaplan   54 Jul 17 14:03 .gitconfig
drwxr-xr-x  6 amv69 ckaplan  128 Jul 19 17:09 [01;34mGithub[0m
drwxr-xr-x  3 amv69 ckaplan   23 Jul 18 10:56 [01;34m.java[0m
-rw-r--r--  1 amv69 ckaplan  172 Sep  6  2018 .kshrc
drwxr-xr-x  3 amv69 ckaplan   23 Feb 18 13:36 [01;34m.local[0m
drwxrwxrwx  2 amv69 ckaplan  795 Jul 22 15:34 [34;42mLys2[0m
drwxr-xr-x 17 amv69 ckaplan  406 Jul 17 12:35 [01;34mminiconda3[0m
drwxr-xr-x  4 amv69 ckaplan   53 Sep  6  2018 [01;34m.mozilla[0m
-rw-r--r--  1 amv69 ckaplan  12K Sep 17  2018 .nn.py.swp
drwxr-----  3 amv69 ckaplan   23 Jul 18 16:19 [01;34m.pki[0m
drwxr-xr-x  3 amv69 ckaplan 1.2K Jul 22 08:49 [01;34mreads[0m
-rw-r--r--  1 amv69 ckaplan 6.3K Jul 22 08:05 rnaSeq.py
drwx------  2 amv69 ckaplan   81 Jul 17 14:20 [01;34m.ssh[0m
-rw-r--r--  1 amv69 ckaplan  53K Jul 22 14:12 [01;35mtest.png[0m
drwxr-xr-x  3 amv69 ckaplan  205 Jul 22 15:00 [01;34m.tmux[0m
lrwxrwxrwx  1 amv69 ckaplan   16 Jul 22 14:58 [01;36m.tmux.conf[0m -> .tmux/.tmux.conf
-rw-r--r--  1 amv69 ckaplan  11K Jul 22 14:58 .tmux.conf.local
drwxr-xr-x  2 amv69 ckaplan   28 Jul 22 14:54 [01;34m.vim[0m
-rw-------  1 amv69 ckaplan 5.0K Jul 22 16:00 .viminfo
-rw-------  1 amv69 ckaplan 1.2K Jul 18 20:42 .Xauthority
-rw-r--r--  1 amv69 ckaplan  658 Sep  6  2018 .zshrc
]0;amv69@login0b:~(base) [amv69@login0b ~]$ -l[K[Kls -lh
total 2.0M
-rw-r--r--  1 amv69 ckaplan 243K May 28  2012 chrII_est.txt
-rw-r--r--  1 amv69 ckaplan 811K Sep  2  2011 chrII.fa
drwxr-xr-x  2 amv69 ckaplan   84 Jul 19 09:07 [0m[01;34mfasta[0m
drwxr-xr-x  6 amv69 ckaplan  128 Jul 19 17:09 [01;34mGithub[0m
drwxrwxrwx  2 amv69 ckaplan  795 Jul 22 15:34 [34;42mLys2[0m
drwxr-xr-x 17 amv69 ckaplan  406 Jul 17 12:35 [01;34mminiconda3[0m
drwxr-xr-x  3 amv69 ckaplan 1.2K Jul 22 08:49 [01;34mreads[0m
-rw-r--r--  1 amv69 ckaplan 6.3K Jul 22 08:05 rnaSeq.py
-rw-r--r--  1 amv69 ckaplan  53K Jul 22 14:12 [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ mv chrII* Lys2/
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls
[0m[01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls Lys2
[0m[01;32malignment.sh[0m                         [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII_est.txt                        [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa                             [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
[01;32mfragment_lengths.sh[0m                  [01;32mlys2-173R2_ME015_S15_raw.bw[0m           [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
[01;32mfragmentSizes_input.png[0m              [01;32mlys2-173R2_ME015_S15.sorted.bam[0m       [01;32mreadme.txt[0m
[01;32minput_adjusted_reads_per_million.sh[0m  [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
[01;32mlys2-128delta_ME013_S13_raw.bw[0m       [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ head ch[K[KC[KLys2/chrII_est.txt 
587	450	0	0	0	0	0	0	0	-	AA417529	450	0	450	chrII	813184	315422	315872	1	450,	0,	315422,
587	347	1	0	0	1	2	1	1	-	AA417450	350	0	350	chrII	813184	382322	382671	2	46,302,	0,48,	382322,382369,
588	54	0	0	0	0	0	0	0	+	AA417466	54	0	54	chrII	813184	492467	492521	1	54,	0,	492467,
590	77	0	0	0	0	0	0	0	-	AA417449	77	0	77	chrII	813184	731444	731521	1	77,	0,	731444,
590	325	1	0	2	2	2	0	0	+	AA417475	336	0	330	chrII	813184	768593	768921	3	298,10,20,	0,299,310,	768593,768891,768901,
586	631	3	0	0	0	0	1	2	-	DB657493	634	0	634	chrII	813184	221211	221847	2	79,555,	0,79,	221211,221292,
586	594	0	0	0	0	0	1	2	-	DB657695	594	0	594	chrII	813184	221206	221802	2	84,510,	0,84,	221206,221292,
586	597	0	0	0	0	0	1	2	-	DB659732	597	0	597	chrII	813184	221200	221799	2	90,507,	0,90,	221200,221292,
586	658	0	0	0	0	0	1	2	-	DB664651	658	0	658	chrII	813184	221187	221847	2	103,555,	0,103,	221187,221292,
73	465	1	0	0	0	0	1	250485	-	DB663537	466	0	466	chrII	813184	9233	260184	2	189,277,	0,189,	9233,259907,
]0;amv69@login0b:~(base) [amv69@login0b ~]$ tail [K[K[K[K[Kwc -l Lys2/chrII_est.txt 
2445 Lys2/chrII_est.txt
]0;amv69@login0b:~(base) [amv69@login0b ~]$ [K(base) [amv69@login0b ~]$ [K(base) [amv69@login0b ~]$ [K(base) [amv69@login0b ~]$ [K(base) [amv69@login0b ~]$ [K(base) [amv69@login0b ~]$ git clone --recursive https://github.com/hall-lab/speedseq
Cloning into 'speedseq'...
remote: Enumerating objects: 3302, done.[K
Receiving objects:   0% (1/3302)   Receiving objects:   1% (34/3302)   Receiving objects:   2% (67/3302)   Receiving objects:   3% (100/3302)   Receiving objects:   4% (133/3302)   Receiving objects:   5% (166/3302)   Receiving objects:   6% (199/3302)   Receiving objects:   7% (232/3302)   Receiving objects:   8% (265/3302)   Receiving objects:   9% (298/3302)   Receiving objects:  10% (331/3302)   Receiving objects:  11% (364/3302)   Receiving objects:  12% (397/3302)   Receiving objects:  13% (430/3302)   Receiving objects:  14% (463/3302)   Receiving objects:  15% (496/3302)   Receiving objects:  16% (529/3302)   Receiving objects:  17% (562/3302)   Receiving objects:  18% (595/3302)   Receiving objects:  19% (628/3302)   Receiving objects:  20% (661/3302)   Receiving objects:  21% (694/3302)   Receiving objects:  22% (727/3302)   Receiving objects:  23% (760/3302)   Receiving objects:  24% (793/3302)   Receiving objects:  25% (826/3302)   Receiving objects:  26% (859/3302)   Receiving objects:  27% (892/3302)   Receiving objects:  28% (925/3302)   Receiving objects:  29% (958/3302)   Receiving objects:  30% (991/3302)   Receiving objects:  31% (1024/3302)   Receiving objects:  32% (1057/3302)   Receiving objects:  33% (1090/3302)   Receiving objects:  34% (1123/3302)   Receiving objects:  35% (1156/3302)   Receiving objects:  36% (1189/3302)   Receiving objects:  37% (1222/3302)   Receiving objects:  38% (1255/3302)   Receiving objects:  39% (1288/3302)   Receiving objects:  40% (1321/3302)   Receiving objects:  41% (1354/3302)   Receiving objects:  42% (1387/3302)   Receiving objects:  43% (1420/3302)   Receiving objects:  44% (1453/3302)   Receiving objects:  45% (1486/3302)   Receiving objects:  46% (1519/3302)   Receiving objects:  47% (1552/3302)   Receiving objects:  48% (1585/3302)   Receiving objects:  49% (1618/3302)   Receiving objects:  50% (1651/3302)   Receiving objects:  51% (1685/3302)   Receiving objects:  52% (1718/3302)   Receiving objects:  53% (1751/3302)   Receiving objects:  54% (1784/3302)   Receiving objects:  55% (1817/3302)   Receiving objects:  56% (1850/3302)   Receiving objects:  57% (1883/3302)   Receiving objects:  58% (1916/3302)   Receiving objects:  59% (1949/3302)   Receiving objects:  60% (1982/3302)   Receiving objects:  61% (2015/3302)   Receiving objects:  62% (2048/3302)   Receiving objects:  63% (2081/3302)   Receiving objects:  64% (2114/3302)   Receiving objects:  65% (2147/3302)   Receiving objects:  66% (2180/3302)   Receiving objects:  67% (2213/3302)   Receiving objects:  68% (2246/3302)   Receiving objects:  69% (2279/3302)   Receiving objects:  70% (2312/3302)   Receiving objects:  71% (2345/3302)   Receiving objects:  72% (2378/3302)   Receiving objects:  73% (2411/3302)   Receiving objects:  74% (2444/3302)   Receiving objects:  75% (2477/3302)   Receiving objects:  76% (2510/3302)   Receiving objects:  77% (2543/3302)   Receiving objects:  78% (2576/3302)   Receiving objects:  79% (2609/3302)   Receiving objects:  80% (2642/3302)   Receiving objects:  81% (2675/3302)   Receiving objects:  82% (2708/3302)   Receiving objects:  83% (2741/3302)   remote: Total 3302 (delta 0), reused 0 (delta 0), pack-reused 3302[K
Receiving objects:  84% (2774/3302)   Receiving objects:  85% (2807/3302)   Receiving objects:  86% (2840/3302)   Receiving objects:  87% (2873/3302)   Receiving objects:  88% (2906/3302)   Receiving objects:  89% (2939/3302)   Receiving objects:  90% (2972/3302)   Receiving objects:  91% (3005/3302)   Receiving objects:  92% (3038/3302)   Receiving objects:  93% (3071/3302)   Receiving objects:  94% (3104/3302)   Receiving objects:  95% (3137/3302)   Receiving objects:  96% (3170/3302)   Receiving objects:  97% (3203/3302)   Receiving objects:  98% (3236/3302)   Receiving objects:  99% (3269/3302)   Receiving objects: 100% (3302/3302)   Receiving objects: 100% (3302/3302), 14.81 MiB | 0 bytes/s, done.
Resolving deltas:   0% (0/1531)   Resolving deltas:   1% (19/1531)   Resolving deltas:   3% (49/1531)   Resolving deltas:   4% (65/1531)   Resolving deltas:   6% (104/1531)   Resolving deltas:   8% (128/1531)   Resolving deltas:   9% (138/1531)   Resolving deltas:  10% (157/1531)   Resolving deltas:  11% (169/1531)   Resolving deltas:  12% (184/1531)   Resolving deltas:  13% (203/1531)   Resolving deltas:  14% (215/1531)   Resolving deltas:  15% (230/1531)   Resolving deltas:  16% (245/1531)   Resolving deltas:  17% (264/1531)   Resolving deltas:  18% (276/1531)   Resolving deltas:  20% (317/1531)   Resolving deltas:  21% (327/1531)   Resolving deltas:  22% (337/1531)   Resolving deltas:  24% (378/1531)   Resolving deltas:  25% (390/1531)   Resolving deltas:  26% (404/1531)   Resolving deltas:  31% (485/1531)   Resolving deltas:  33% (508/1531)   Resolving deltas:  34% (524/1531)   Resolving deltas:  36% (564/1531)   Resolving deltas:  37% (567/1531)   Resolving deltas:  39% (610/1531)   Resolving deltas:  56% (858/1531)   Resolving deltas:  57% (885/1531)   Resolving deltas:  60% (931/1531)   Resolving deltas:  61% (949/1531)   Resolving deltas:  62% (961/1531)   Resolving deltas:  65% (998/1531)   Resolving deltas:  66% (1023/1531)   Resolving deltas:  67% (1026/1531)   Resolving deltas:  69% (1063/1531)   Resolving deltas:  70% (1075/1531)   Resolving deltas:  71% (1097/1531)   Resolving deltas:  77% (1191/1531)   Resolving deltas:  80% (1235/1531)   Resolving deltas:  81% (1246/1531)   Resolving deltas:  82% (1264/1531)   Resolving deltas:  83% (1276/1531)   Resolving deltas:  84% (1287/1531)   Resolving deltas:  86% (1325/1531)   Resolving deltas:  87% (1334/1531)   Resolving deltas:  89% (1364/1531)   Resolving deltas:  90% (1378/1531)   Resolving deltas:  91% (1398/1531)   Resolving deltas:  92% (1413/1531)   Resolving deltas:  93% (1424/1531)   Resolving deltas:  97% (1486/1531)   Resolving deltas:  99% (1529/1531)   Resolving deltas: 100% (1531/1531)   Resolving deltas: 100% (1531/1531), done.
Checking out files:  39% (243/618)   Checking out files:  40% (248/618)   Checking out files:  41% (254/618)   Checking out files:  42% (260/618)   Checking out files:  43% (266/618)   Checking out files:  44% (272/618)   Checking out files:  45% (279/618)   Checking out files:  46% (285/618)   Checking out files:  47% (291/618)   Checking out files:  48% (297/618)   Checking out files:  49% (303/618)   Checking out files:  50% (309/618)   Checking out files:  51% (316/618)   Checking out files:  52% (322/618)   Checking out files:  53% (328/618)   Checking out files:  54% (334/618)   Checking out files:  55% (340/618)   Checking out files:  56% (347/618)   Checking out files:  57% (353/618)   Checking out files:  58% (359/618)   Checking out files:  59% (365/618)   Checking out files:  60% (371/618)   Checking out files:  61% (377/618)   Checking out files:  62% (384/618)   Checking out files:  63% (390/618)   Checking out files:  64% (396/618)   Checking out files:  65% (402/618)   Checking out files:  66% (408/618)   Checking out files:  67% (415/618)   Checking out files:  68% (421/618)   Checking out files:  69% (427/618)   Checking out files:  70% (433/618)   Checking out files:  71% (439/618)   Checking out files:  72% (445/618)   Checking out files:  73% (452/618)   Checking out files:  74% (458/618)   Checking out files:  75% (464/618)   Checking out files:  76% (470/618)   Checking out files:  77% (476/618)   Checking out files:  78% (483/618)   Checking out files:  79% (489/618)   Checking out files:  80% (495/618)   Checking out files:  81% (501/618)   Checking out files:  82% (507/618)   Checking out files:  83% (513/618)   Checking out files:  84% (520/618)   Checking out files:  85% (526/618)   Checking out files:  86% (532/618)   Checking out files:  86% (534/618)   Checking out files:  87% (538/618)   Checking out files:  88% (544/618)   Checking out files:  89% (551/618)   Checking out files:  90% (557/618)   Checking out files:  91% (563/618)   Checking out files:  92% (569/618)   Checking out files:  93% (575/618)   Checking out files:  94% (581/618)   Checking out files:  95% (588/618)   Checking out files:  96% (594/618)   Checking out files:  97% (600/618)   Checking out files:  98% (606/618)   Checking out files:  99% (612/618)   Checking out files: 100% (618/618)   Checking out files: 100% (618/618), done.
Submodule 'src/CNVnator' (https://github.com/abyzovlab/CNVnator) registered for path 'src/CNVnator'
Submodule 'src/bamkit' (https://github.com/cc2qe/bamkit.git) registered for path 'src/bamkit'
Submodule 'src/bwa' (https://github.com/lh3/bwa.git) registered for path 'src/bwa'
Submodule 'src/freebayes' (https://github.com/ekg/freebayes.git) registered for path 'src/freebayes'
Submodule 'src/lumpy-sv' (https://github.com/hall-lab/lumpy-sv.git) registered for path 'src/lumpy-sv'
Submodule 'src/parallel' (http://git.savannah.gnu.org/r/parallel.git) registered for path 'src/parallel'
Submodule 'src/samblaster' (https://github.com/GregoryFaust/samblaster.git) registered for path 'src/samblaster'
Submodule 'src/svtyper' (https://github.com/hall-lab/svtyper.git) registered for path 'src/svtyper'
Submodule 'src/tabix' (https://github.com/samtools/tabix.git) registered for path 'src/tabix'
Submodule 'src/vawk' (https://github.com/cc2qe/vawk.git) registered for path 'src/vawk'
Cloning into 'src/CNVnator'...
remote: Enumerating objects: 110, done.[K
remote: Counting objects:   0% (1/110)   [Kremote: Counting objects:   1% (2/110)   [Kremote: Counting objects:   2% (3/110)   [Kremote: Counting objects:   3% (4/110)   [Kremote: Counting objects:   4% (5/110)   [Kremote: Counting objects:   5% (6/110)   [Kremote: Counting objects:   6% (7/110)   [Kremote: Counting objects:   7% (8/110)   [Kremote: Counting objects:   8% (9/110)   [Kremote: Counting objects:   9% (10/110)   [Kremote: Counting objects:  10% (11/110)   [Kremote: Counting objects:  11% (13/110)   [Kremote: Counting objects:  12% (14/110)   [Kremote: Counting objects:  13% (15/110)   [Kremote: Counting objects:  14% (16/110)   [Kremote: Counting objects:  15% (17/110)   [Kremote: Counting objects:  16% (18/110)   [Kremote: Counting objects:  17% (19/110)   [Kremote: Counting objects:  18% (20/110)   [Kremote: Counting objects:  19% (21/110)   [Kremote: Counting objects:  20% (22/110)   [Kremote: Counting objects:  21% (24/110)   [Kremote: Counting objects:  22% (25/110)   [Kremote: Counting objects:  23% (26/110)   [Kremote: Counting objects:  24% (27/110)   [Kremote: Counting objects:  25% (28/110)   [Kremote: Counting objects:  26% (29/110)   [Kremote: Counting objects:  27% (30/110)   [Kremote: Counting objects:  28% (31/110)   [Kremote: Counting objects:  29% (32/110)   [Kremote: Counting objects:  30% (33/110)   [Kremote: Counting objects:  31% (35/110)   [Kremote: Counting objects:  32% (36/110)   [Kremote: Counting objects:  33% (37/110)   [Kremote: Counting objects:  34% (38/110)   [Kremote: Counting objects:  35% (39/110)   [Kremote: Counting objects:  36% (40/110)   [Kremote: Counting objects:  37% (41/110)   [Kremote: Counting objects:  38% (42/110)   [Kremote: Counting objects:  39% (43/110)   [Kremote: Counting objects:  40% (44/110)   [Kremote: Counting objects:  41% (46/110)   [Kremote: Counting objects:  42% (47/110)   [Kremote: Counting objects:  43% (48/110)   [Kremote: Counting objects:  44% (49/110)   [Kremote: Counting objects:  45% (50/110)   [Kremote: Counting objects:  46% (51/110)   [Kremote: Counting objects:  47% (52/110)   [Kremote: Counting objects:  48% (53/110)   [Kremote: Counting objects:  49% (54/110)   [Kremote: Counting objects:  50% (55/110)   [Kremote: Counting objects:  51% (57/110)   [Kremote: Counting objects:  52% (58/110)   [Kremote: Counting objects:  53% (59/110)   [Kremote: Counting objects:  54% (60/110)   [Kremote: Counting objects:  55% (61/110)   [Kremote: Counting objects:  56% (62/110)   [Kremote: Counting objects:  57% (63/110)   [Kremote: Counting objects:  58% (64/110)   [Kremote: Counting objects:  59% (65/110)   [Kremote: Counting objects:  60% (66/110)   [Kremote: Counting objects:  61% (68/110)   [Kremote: Counting objects:  62% (69/110)   [Kremote: Counting objects:  63% (70/110)   [Kremote: Counting objects:  64% (71/110)   [Kremote: Counting objects:  65% (72/110)   [Kremote: Counting objects:  66% (73/110)   [Kremote: Counting objects:  67% (74/110)   [Kremote: Counting objects:  68% (75/110)   [Kremote: Counting objects:  69% (76/110)   [Kremote: Counting objects:  70% (77/110)   [Kremote: Counting objects:  71% (79/110)   [Kremote: Counting objects:  72% (80/110)   [Kremote: Counting objects:  73% (81/110)   [Kremote: Counting objects:  74% (82/110)   [Kremote: Counting objects:  75% (83/110)   [Kremote: Counting objects:  76% (84/110)   [Kremote: Counting objects:  77% (85/110)   [Kremote: Counting objects:  78% (86/110)   [Kremote: Counting objects:  79% (87/110)   [Kremote: Counting objects:  80% (88/110)   [Kremote: Counting objects:  81% (90/110)   [Kremote: Counting objects:  82% (91/110)   [Kremote: Counting objects:  83% (92/110)   [Kremote: Counting objects:  84% (93/110)   [Kremote: Counting objects:  85% (94/110)   [Kremote: Counting objects:  86% (95/110)   [Kremote: Counting objects:  87% (96/110)   [Kremote: Counting objects:  88% (97/110)   [Kremote: Counting objects:  89% (98/110)   [Kremote: Counting objects:  90% (99/110)   [Kremote: Counting objects:  91% (101/110)   [Kremote: Counting objects:  92% (102/110)   [Kremote: Counting objects:  93% (103/110)   [Kremote: Counting objects:  94% (104/110)   [Kremote: Counting objects:  95% (105/110)   [Kremote: Counting objects:  96% (106/110)   [Kremote: Counting objects:  97% (107/110)   [Kremote: Counting objects:  98% (108/110)   [Kremote: Counting objects:  99% (109/110)   [Kremote: Counting objects: 100% (110/110)   [Kremote: Counting objects: 100% (110/110), done.[K
remote: Compressing objects:   1% (1/77)   [Kremote: Compressing objects:   2% (2/77)   [Kremote: Compressing objects:   3% (3/77)   [Kremote: Compressing objects:   5% (4/77)   [Kremote: Compressing objects:   6% (5/77)   [Kremote: Compressing objects:   7% (6/77)   [Kremote: Compressing objects:   9% (7/77)   [Kremote: Compressing objects:  10% (8/77)   [Kremote: Compressing objects:  11% (9/77)   [Kremote: Compressing objects:  12% (10/77)   [Kremote: Compressing objects:  14% (11/77)   [Kremote: Compressing objects:  15% (12/77)   [Kremote: Compressing objects:  16% (13/77)   [Kremote: Compressing objects:  18% (14/77)   [Kremote: Compressing objects:  19% (15/77)   [Kremote: Compressing objects:  20% (16/77)   [Kremote: Compressing objects:  22% (17/77)   [Kremote: Compressing objects:  23% (18/77)   [Kremote: Compressing objects:  24% (19/77)   [Kremote: Compressing objects:  25% (20/77)   [Kremote: Compressing objects:  27% (21/77)   [Kremote: Compressing objects:  28% (22/77)   [Kremote: Compressing objects:  29% (23/77)   [Kremote: Compressing objects:  31% (24/77)   [Kremote: Compressing objects:  32% (25/77)   [Kremote: Compressing objects:  33% (26/77)   [Kremote: Compressing objects:  35% (27/77)   [Kremote: Compressing objects:  36% (28/77)   [Kremote: Compressing objects:  37% (29/77)   [Kremote: Compressing objects:  38% (30/77)   [Kremote: Compressing objects:  40% (31/77)   [Kremote: Compressing objects:  41% (32/77)   [Kremote: Compressing objects:  42% (33/77)   [Kremote: Compressing objects:  44% (34/77)   [Kremote: Compressing objects:  45% (35/77)   [Kremote: Compressing objects:  46% (36/77)   [Kremote: Compressing objects:  48% (37/77)   [Kremote: Compressing objects:  49% (38/77)   [Kremote: Compressing objects:  50% (39/77)   [Kremote: Compressing objects:  51% (40/77)   [Kremote: Compressing objects:  53% (41/77)   [Kremote: Compressing objects:  54% (42/77)   [Kremote: Compressing objects:  55% (43/77)   [Kremote: Compressing objects:  57% (44/77)   [Kremote: Compressing objects:  58% (45/77)   [Kremote: Compressing objects:  59% (46/77)   [Kremote: Compressing objects:  61% (47/77)   [Kremote: Compressing objects:  62% (48/77)   [Kremote: Compressing objects:  63% (49/77)   [Kremote: Compressing objects:  64% (50/77)   [Kremote: Compressing objects:  66% (51/77)   [Kremote: Compressing objects:  67% (52/77)   [Kremote: Compressing objects:  68% (53/77)   [Kremote: Compressing objects:  70% (54/77)   [Kremote: Compressing objects:  71% (55/77)   [Kremote: Compressing objects:  72% (56/77)   [Kremote: Compressing objects:  74% (57/77)   [Kremote: Compressing objects:  75% (58/77)   [Kremote: Compressing objects:  76% (59/77)   [Kremote: Compressing objects:  77% (60/77)   [Kremote: Compressing objects:  79% (61/77)   [Kremote: Compressing objects:  80% (62/77)   [Kremote: Compressing objects:  81% (63/77)   [Kremote: Compressing objects:  83% (64/77)   [Kremote: Compressing objects:  84% (65/77)   [Kremote: Compressing objects:  85% (66/77)   [Kremote: Compressing objects:  87% (67/77)   [Kremote: Compressing objects:  88% (68/77)   [Kremote: Compressing objects:  89% (69/77)   [Kremote: Compressing objects:  90% (70/77)   [Kremote: Compressing objects:  92% (71/77)   [Kremote: Compressing objects:  93% (72/77)   [Kremote: Compressing objects:  94% (73/77)   [Kremote: Compressing objects:  96% (74/77)   [Kremote: Compressing objects:  97% (75/77)   [Kremote: Compressing objects:  98% (76/77)   [Kremote: Compressing objects: 100% (77/77)   [Kremote: Compressing objects: 100% (77/77), done.[K
Receiving objects:   0% (1/416)   Receiving objects:   1% (5/416)   Receiving objects:   2% (9/416)   Receiving objects:   3% (13/416)   Receiving objects:   4% (17/416)   Receiving objects:   5% (21/416)   Receiving objects:   6% (25/416)   Receiving objects:   7% (30/416)   Receiving objects:   8% (34/416)   Receiving objects:   9% (38/416)   Receiving objects:  10% (42/416)   Receiving objects:  11% (46/416)   Receiving objects:  12% (50/416)   Receiving objects:  13% (55/416)   Receiving objects:  14% (59/416)   Receiving objects:  15% (63/416)   Receiving objects:  16% (67/416)   Receiving objects:  17% (71/416)   Receiving objects:  18% (75/416)   Receiving objects:  19% (80/416)   Receiving objects:  20% (84/416)   Receiving objects:  21% (88/416)   Receiving objects:  22% (92/416)   Receiving objects:  23% (96/416)   Receiving objects:  24% (100/416)   Receiving objects:  25% (104/416)   Receiving objects:  26% (109/416)   Receiving objects:  27% (113/416)   Receiving objects:  28% (117/416)   Receiving objects:  29% (121/416)   Receiving objects:  30% (125/416)   Receiving objects:  31% (129/416)   Receiving objects:  32% (134/416)   Receiving objects:  33% (138/416)   Receiving objects:  34% (142/416)   Receiving objects:  35% (146/416)   Receiving objects:  36% (150/416)   Receiving objects:  37% (154/416)   Receiving objects:  38% (159/416)   Receiving objects:  39% (163/416)   Receiving objects:  40% (167/416)   Receiving objects:  41% (171/416)   Receiving objects:  42% (175/416)   Receiving objects:  43% (179/416)   Receiving objects:  44% (184/416)   Receiving objects:  45% (188/416)   Receiving objects:  46% (192/416)   Receiving objects:  47% (196/416)   Receiving objects:  48% (200/416)   Receiving objects:  49% (204/416)   Receiving objects:  50% (208/416)   Receiving objects:  51% (213/416)   Receiving objects:  52% (217/416)   Receiving objects:  53% (221/416)   Receiving objects:  54% (225/416)   Receiving objects:  55% (229/416)   Receiving objects:  56% (233/416)   Receiving objects:  57% (238/416)   Receiving objects:  58% (242/416)   Receiving objects:  59% (246/416)   Receiving objects:  60% (250/416)   Receiving objects:  61% (254/416)   Receiving objects:  62% (258/416)   Receiving objects:  63% (263/416)   Receiving objects:  64% (267/416)   Receiving objects:  65% (271/416)   Receiving objects:  66% (275/416)   Receiving objects:  67% (279/416)   Receiving objects:  68% (283/416)   Receiving objects:  69% (288/416)   Receiving objects:  70% (292/416)   Receiving objects:  71% (296/416)   Receiving objects:  72% (300/416)   Receiving objects:  73% (304/416)   Receiving objects:  74% (308/416)   Receiving objects:  75% (312/416)   Receiving objects:  76% (317/416)   Receiving objects:  77% (321/416)   Receiving objects:  78% (325/416)   Receiving objects:  79% (329/416)   Receiving objects:  80% (333/416)   Receiving objects:  81% (337/416)   Receiving objects:  82% (342/416)   Receiving objects:  83% (346/416)   Receiving objects:  84% (350/416)   Receiving objects:  85% (354/416)   Receiving objects:  86% (358/416)   Receiving objects:  87% (362/416)   Receiving objects:  88% (367/416)   Receiving objects:  89% (371/416)   Receiving objects:  90% (375/416), 26.65 MiB | 53.18 MiB/s   remote: Total 416 (delta 57), reused 78 (delta 28), pack-reused 306[K
Receiving objects:  91% (379/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  92% (383/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  93% (387/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  94% (392/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  95% (396/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  96% (400/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  97% (404/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  98% (408/416), 26.65 MiB | 53.18 MiB/s   Receiving objects:  99% (412/416), 26.65 MiB | 53.18 MiB/s   Receiving objects: 100% (416/416), 26.65 MiB | 53.18 MiB/s   Receiving objects: 100% (416/416), 38.17 MiB | 53.18 MiB/s, done.
Resolving deltas:   0% (0/243)   Resolving deltas:   1% (3/243)   Resolving deltas:   2% (5/243)   Resolving deltas:   3% (9/243)   Resolving deltas:   4% (11/243)   Resolving deltas:   5% (13/243)   Resolving deltas:   8% (20/243)   Resolving deltas:   9% (24/243)   Resolving deltas:  11% (28/243)   Resolving deltas:  15% (38/243)   Resolving deltas:  27% (66/243)   Resolving deltas:  37% (91/243)   Resolving deltas:  40% (98/243)   Resolving deltas:  41% (101/243)   Resolving deltas:  51% (124/243)   Resolving deltas:  60% (148/243)   Resolving deltas:  61% (150/243)   Resolving deltas:  62% (151/243)   Resolving deltas:  79% (194/243)   Resolving deltas:  80% (195/243)   Resolving deltas:  84% (206/243)   Resolving deltas:  85% (207/243)   Resolving deltas:  86% (210/243)   Resolving deltas:  90% (219/243)   Resolving deltas:  91% (223/243)   Resolving deltas:  93% (228/243)   Resolving deltas:  95% (232/243)   Resolving deltas:  97% (238/243)   Resolving deltas:  98% (239/243)   Resolving deltas: 100% (243/243)   Resolving deltas: 100% (243/243), done.
Submodule path 'src/CNVnator': checked out '9d3a92b01ce4f554227b566e4c9b8ba8af42d0af'
Cloning into 'src/bamkit'...
remote: Enumerating objects: 66, done.[K
remote: Total 66 (delta 0), reused 0 (delta 0), pack-reused 66[K
Unpacking objects:   1% (1/66)   Unpacking objects:   3% (2/66)   Unpacking objects:   4% (3/66)   Unpacking objects:   6% (4/66)   Unpacking objects:   7% (5/66)   Unpacking objects:   9% (6/66)   Unpacking objects:  10% (7/66)   Unpacking objects:  12% (8/66)   Unpacking objects:  13% (9/66)   Unpacking objects:  15% (10/66)   Unpacking objects:  16% (11/66)   Unpacking objects:  18% (12/66)   Unpacking objects:  19% (13/66)   Unpacking objects:  21% (14/66)   Unpacking objects:  22% (15/66)   Unpacking objects:  24% (16/66)   Unpacking objects:  25% (17/66)   Unpacking objects:  27% (18/66)   Unpacking objects:  28% (19/66)   Unpacking objects:  30% (20/66)   Unpacking objects:  31% (21/66)   Unpacking objects:  33% (22/66)   Unpacking objects:  34% (23/66)   Unpacking objects:  36% (24/66)   Unpacking objects:  37% (25/66)   Unpacking objects:  39% (26/66)   Unpacking objects:  40% (27/66)   Unpacking objects:  42% (28/66)   Unpacking objects:  43% (29/66)   Unpacking objects:  45% (30/66)   Unpacking objects:  46% (31/66)   Unpacking objects:  48% (32/66)   Unpacking objects:  50% (33/66)   Unpacking objects:  51% (34/66)   Unpacking objects:  53% (35/66)   Unpacking objects:  54% (36/66)   Unpacking objects:  56% (37/66)   Unpacking objects:  57% (38/66)   Unpacking objects:  59% (39/66)   Unpacking objects:  60% (40/66)   Unpacking objects:  62% (41/66)   Unpacking objects:  63% (42/66)   Unpacking objects:  65% (43/66)   Unpacking objects:  66% (44/66)   Unpacking objects:  68% (45/66)   Unpacking objects:  69% (46/66)   Unpacking objects:  71% (47/66)   Unpacking objects:  72% (48/66)   Unpacking objects:  74% (49/66)   Unpacking objects:  75% (50/66)   Unpacking objects:  77% (51/66)   Unpacking objects:  78% (52/66)   Unpacking objects:  80% (53/66)   Unpacking objects:  81% (54/66)   Unpacking objects:  83% (55/66)   Unpacking objects:  84% (56/66)   Unpacking objects:  86% (57/66)   Unpacking objects:  87% (58/66)   Unpacking objects:  89% (59/66)   Unpacking objects:  90% (60/66)   Unpacking objects:  92% (61/66)   Unpacking objects:  93% (62/66)   Unpacking objects:  95% (63/66)   Unpacking objects:  96% (64/66)   Unpacking objects:  98% (65/66)   Unpacking objects: 100% (66/66)   Unpacking objects: 100% (66/66), done.
Submodule path 'src/bamkit': checked out 'b5ddbc560491d2e18f071951e55dddc75915922e'
Cloning into 'src/bwa'...
remote: Enumerating objects: 6, done.[K
remote: Counting objects:  16% (1/6)   [Kremote: Counting objects:  33% (2/6)   [Kremote: Counting objects:  50% (3/6)   [Kremote: Counting objects:  66% (4/6)   [Kremote: Counting objects:  83% (5/6)   [Kremote: Counting objects: 100% (6/6)   [Kremote: Counting objects: 100% (6/6), done.[K
remote: Compressing objects:  25% (1/4)   [Kremote: Compressing objects:  50% (2/4)   [Kremote: Compressing objects:  75% (3/4)   [Kremote: Compressing objects: 100% (4/4)   [Kremote: Compressing objects: 100% (4/4), done.[K
Receiving objects:   0% (1/4271)   Receiving objects:   1% (43/4271)   Receiving objects:   2% (86/4271)   Receiving objects:   3% (129/4271)   Receiving objects:   4% (171/4271)   Receiving objects:   5% (214/4271)   Receiving objects:   6% (257/4271)   Receiving objects:   7% (299/4271)   Receiving objects:   8% (342/4271)   Receiving objects:   9% (385/4271)   Receiving objects:  10% (428/4271)   Receiving objects:  11% (470/4271)   Receiving objects:  12% (513/4271)   Receiving objects:  13% (556/4271)   Receiving objects:  14% (598/4271)   Receiving objects:  15% (641/4271)   Receiving objects:  16% (684/4271)   Receiving objects:  17% (727/4271)   Receiving objects:  18% (769/4271)   Receiving objects:  19% (812/4271)   Receiving objects:  20% (855/4271)   Receiving objects:  21% (897/4271)   Receiving objects:  22% (940/4271)   Receiving objects:  23% (983/4271)   Receiving objects:  24% (1026/4271)   Receiving objects:  25% (1068/4271)   Receiving objects:  26% (1111/4271)   Receiving objects:  27% (1154/4271)   Receiving objects:  28% (1196/4271)   Receiving objects:  29% (1239/4271)   Receiving objects:  30% (1282/4271)   Receiving objects:  31% (1325/4271)   Receiving objects:  32% (1367/4271)   Receiving objects:  33% (1410/4271)   Receiving objects:  34% (1453/4271)   Receiving objects:  35% (1495/4271)   Receiving objects:  36% (1538/4271)   Receiving objects:  37% (1581/4271)   Receiving objects:  38% (1623/4271)   Receiving objects:  39% (1666/4271)   Receiving objects:  40% (1709/4271)   Receiving objects:  41% (1752/4271)   Receiving objects:  42% (1794/4271)   Receiving objects:  43% (1837/4271)   Receiving objects:  44% (1880/4271)   Receiving objects:  45% (1922/4271)   Receiving objects:  46% (1965/4271)   Receiving objects:  47% (2008/4271)   Receiving objects:  48% (2051/4271)   Receiving objects:  49% (2093/4271)   Receiving objects:  50% (2136/4271)   Receiving objects:  51% (2179/4271)   Receiving objects:  52% (2221/4271)   Receiving objects:  53% (2264/4271)   Receiving objects:  54% (2307/4271)   Receiving objects:  55% (2350/4271)   Receiving objects:  56% (2392/4271)   Receiving objects:  57% (2435/4271)   Receiving objects:  58% (2478/4271)   Receiving objects:  59% (2520/4271)   Receiving objects:  60% (2563/4271)   Receiving objects:  61% (2606/4271)   Receiving objects:  62% (2649/4271)   Receiving objects:  63% (2691/4271)   Receiving objects:  64% (2734/4271)   Receiving objects:  65% (2777/4271)   Receiving objects:  66% (2819/4271)   Receiving objects:  67% (2862/4271)   Receiving objects:  68% (2905/4271)   Receiving objects:  69% (2947/4271)   Receiving objects:  70% (2990/4271)   Receiving objects:  71% (3033/4271)   Receiving objects:  72% (3076/4271)   Receiving objects:  73% (3118/4271)   Receiving objects:  74% (3161/4271)   Receiving objects:  75% (3204/4271)   Receiving objects:  76% (3246/4271)   Receiving objects:  77% (3289/4271)   Receiving objects:  78% (3332/4271)   Receiving objects:  79% (3375/4271)   Receiving objects:  80% (3417/4271)   Receiving objects:  81% (3460/4271)   Receiving objects:  82% (3503/4271)   Receiving objects:  83% (3545/4271)   Receiving objects:  84% (3588/4271)   Receiving objects:  85% (3631/4271)   Receiving objects:  86% (3674/4271)   Receiving objects:  87% (3716/4271)   remote: Total 4271 (delta 2), reused 6 (delta 2), pack-reused 4265[K
Receiving objects:  88% (3759/4271)   Receiving objects:  89% (3802/4271)   Receiving objects:  90% (3844/4271)   Receiving objects:  91% (3887/4271)   Receiving objects:  92% (3930/4271)   Receiving objects:  93% (3973/4271)   Receiving objects:  94% (4015/4271)   Receiving objects:  95% (4058/4271)   Receiving objects:  96% (4101/4271)   Receiving objects:  97% (4143/4271)   Receiving objects:  98% (4186/4271)   Receiving objects:  99% (4229/4271)   Receiving objects: 100% (4271/4271)   Receiving objects: 100% (4271/4271), 1.63 MiB | 0 bytes/s, done.
Resolving deltas:   0% (0/3055)   Resolving deltas:   1% (47/3055)   Resolving deltas:   2% (78/3055)   Resolving deltas:   3% (96/3055)   Resolving deltas:   4% (124/3055)   Resolving deltas:   5% (165/3055)   Resolving deltas:   6% (184/3055)   Resolving deltas:   7% (214/3055)   Resolving deltas:   8% (245/3055)   Resolving deltas:  10% (324/3055)   Resolving deltas:  11% (340/3055)   Resolving deltas:  12% (371/3055)   Resolving deltas:  13% (404/3055)   Resolving deltas:  14% (428/3055)   Resolving deltas:  15% (468/3055)   Resolving deltas:  16% (495/3055)   Resolving deltas:  17% (521/3055)   Resolving deltas:  18% (557/3055)   Resolving deltas:  19% (590/3055)   Resolving deltas:  20% (623/3055)   Resolving deltas:  21% (643/3055)   Resolving deltas:  22% (673/3055)   Resolving deltas:  23% (708/3055)   Resolving deltas:  24% (752/3055)   Resolving deltas:  27% (839/3055)   Resolving deltas:  33% (1032/3055)   Resolving deltas:  34% (1039/3055)   Resolving deltas:  37% (1149/3055)   Resolving deltas:  38% (1191/3055)   Resolving deltas:  40% (1249/3055)   Resolving deltas:  41% (1257/3055)   Resolving deltas:  42% (1292/3055)   Resolving deltas:  43% (1331/3055)   Resolving deltas:  45% (1396/3055)   Resolving deltas:  52% (1599/3055)   Resolving deltas:  55% (1688/3055)   Resolving deltas:  56% (1732/3055)   Resolving deltas:  58% (1801/3055)   Resolving deltas:  59% (1819/3055)   Resolving deltas:  60% (1836/3055)   Resolving deltas:  61% (1866/3055)   Resolving deltas:  62% (1900/3055)   Resolving deltas:  63% (1954/3055)   Resolving deltas:  64% (1963/3055)   Resolving deltas:  74% (2266/3055)   Resolving deltas:  75% (2293/3055)   Resolving deltas:  76% (2328/3055)   Resolving deltas:  77% (2358/3055)   Resolving deltas:  83% (2553/3055)   Resolving deltas:  84% (2568/3055)   Resolving deltas:  85% (2614/3055)   Resolving deltas:  89% (2725/3055)   Resolving deltas:  90% (2780/3055)   Resolving deltas:  92% (2815/3055)   Resolving deltas:  94% (2874/3055)   Resolving deltas:  95% (2913/3055)   Resolving deltas:  97% (2974/3055)   Resolving deltas:  98% (2994/3055)   Resolving deltas:  99% (3025/3055)   Resolving deltas: 100% (3055/3055)   Resolving deltas: 100% (3055/3055), done.
Submodule path 'src/bwa': checked out '705aa538947a0681de575f0f0d5c65593f80cf14'
Cloning into 'src/freebayes'...
remote: Enumerating objects: 14, done.[K
remote: Counting objects:   7% (1/14)   [Kremote: Counting objects:  14% (2/14)   [Kremote: Counting objects:  21% (3/14)   [Kremote: Counting objects:  28% (4/14)   [Kremote: Counting objects:  35% (5/14)   [Kremote: Counting objects:  42% (6/14)   [Kremote: Counting objects:  50% (7/14)   [Kremote: Counting objects:  57% (8/14)   [Kremote: Counting objects:  64% (9/14)   [Kremote: Counting objects:  71% (10/14)   [Kremote: Counting objects:  78% (11/14)   [Kremote: Counting objects:  85% (12/14)   [Kremote: Counting objects:  92% (13/14)   [Kremote: Counting objects: 100% (14/14)   [Kremote: Counting objects: 100% (14/14), done.[K
remote: Compressing objects:   9% (1/11)   [Kremote: Compressing objects:  18% (2/11)   [Kremote: Compressing objects:  27% (3/11)   [Kremote: Compressing objects:  36% (4/11)   [Kremote: Compressing objects:  45% (5/11)   [Kremote: Compressing objects:  54% (6/11)   [Kremote: Compressing objects:  63% (7/11)   [Kremote: Compressing objects:  72% (8/11)   [Kremote: Compressing objects:  81% (9/11)   [Kremote: Compressing objects:  90% (10/11)   [Kremote: Compressing objects: 100% (11/11)   [Kremote: Compressing objects: 100% (11/11), done.[K
Receiving objects:   0% (1/5431)   Receiving objects:   1% (55/5431)   Receiving objects:   2% (109/5431)   Receiving objects:   3% (163/5431)   Receiving objects:   4% (218/5431)   Receiving objects:   5% (272/5431)   Receiving objects:   6% (326/5431)   Receiving objects:   7% (381/5431)   Receiving objects:   8% (435/5431)   Receiving objects:   9% (489/5431)   Receiving objects:  10% (544/5431)   Receiving objects:  11% (598/5431)   Receiving objects:  12% (652/5431)   Receiving objects:  13% (707/5431)   Receiving objects:  14% (761/5431)   Receiving objects:  15% (815/5431)   Receiving objects:  16% (869/5431)   Receiving objects:  17% (924/5431)   Receiving objects:  18% (978/5431)   Receiving objects:  19% (1032/5431)   Receiving objects:  20% (1087/5431)   Receiving objects:  21% (1141/5431)   Receiving objects:  22% (1195/5431)   Receiving objects:  23% (1250/5431)   Receiving objects:  24% (1304/5431)   Receiving objects:  25% (1358/5431)   Receiving objects:  26% (1413/5431)   Receiving objects:  27% (1467/5431)   Receiving objects:  28% (1521/5431)   Receiving objects:  29% (1575/5431)   Receiving objects:  30% (1630/5431)   Receiving objects:  31% (1684/5431)   Receiving objects:  32% (1738/5431)   Receiving objects:  33% (1793/5431)   Receiving objects:  34% (1847/5431)   Receiving objects:  35% (1901/5431)   Receiving objects:  36% (1956/5431)   Receiving objects:  37% (2010/5431)   Receiving objects:  38% (2064/5431)   Receiving objects:  39% (2119/5431)   Receiving objects:  40% (2173/5431)   Receiving objects:  41% (2227/5431)   Receiving objects:  42% (2282/5431)   Receiving objects:  43% (2336/5431)   Receiving objects:  44% (2390/5431)   Receiving objects:  45% (2444/5431)   Receiving objects:  46% (2499/5431)   Receiving objects:  47% (2553/5431)   Receiving objects:  48% (2607/5431)   Receiving objects:  49% (2662/5431)   Receiving objects:  50% (2716/5431)   Receiving objects:  51% (2770/5431)   Receiving objects:  52% (2825/5431)   Receiving objects:  53% (2879/5431)   Receiving objects:  54% (2933/5431)   Receiving objects:  55% (2988/5431)   Receiving objects:  56% (3042/5431)   Receiving objects:  57% (3096/5431)   Receiving objects:  58% (3150/5431)   Receiving objects:  59% (3205/5431)   Receiving objects:  60% (3259/5431)   Receiving objects:  61% (3313/5431)   Receiving objects:  62% (3368/5431)   Receiving objects:  63% (3422/5431)   Receiving objects:  64% (3476/5431)   Receiving objects:  65% (3531/5431)   Receiving objects:  66% (3585/5431)   Receiving objects:  67% (3639/5431)   Receiving objects:  68% (3694/5431)   Receiving objects:  69% (3748/5431)   Receiving objects:  70% (3802/5431)   Receiving objects:  71% (3857/5431)   Receiving objects:  72% (3911/5431)   Receiving objects:  73% (3965/5431)   Receiving objects:  74% (4019/5431)   Receiving objects:  75% (4074/5431)   Receiving objects:  76% (4128/5431)   Receiving objects:  77% (4182/5431)   Receiving objects:  78% (4237/5431)   Receiving objects:  79% (4291/5431)   Receiving objects:  80% (4345/5431)   Receiving objects:  81% (4400/5431)   Receiving objects:  82% (4454/5431)   Receiving objects:  83% (4508/5431)   Receiving objects:  84% (4563/5431)   Receiving objects:  85% (4617/5431)   Receiving objects:  86% (4671/5431)   Receiving objects:  87% (4725/5431)   Receiving objects:  88% (4780/5431)   Receiving objects:  89% (4834/5431)   Receiving objects:  90% (4888/5431)   Receiving objects:  91% (4943/5431)   Receiving objects:  92% (4997/5431)   Receiving objects:  93% (5051/5431)   Receiving objects:  94% (5106/5431)   Receiving objects:  95% (5160/5431)   Receiving objects:  96% (5214/5431)   Receiving objects:  97% (5269/5431)   Receiving objects:  98% (5323/5431)   Receiving objects:  99% (5377/5431)   remote: Total 5431 (delta 7), reused 9 (delta 3), pack-reused 5417[K
Receiving objects: 100% (5431/5431)   Receiving objects: 100% (5431/5431), 6.17 MiB | 0 bytes/s, done.
Resolving deltas:   0% (0/3633)   Resolving deltas:   1% (37/3633)   Resolving deltas:   2% (76/3633)   Resolving deltas:   3% (116/3633)   Resolving deltas:   4% (146/3633)   Resolving deltas:   5% (192/3633)   Resolving deltas:   6% (218/3633)   Resolving deltas:   7% (257/3633)   Resolving deltas:   8% (296/3633)   Resolving deltas:  10% (369/3633)   Resolving deltas:  11% (400/3633)   Resolving deltas:  12% (462/3633)   Resolving deltas:  13% (488/3633)   Resolving deltas:  14% (511/3633)   Resolving deltas:  17% (627/3633)   Resolving deltas:  19% (722/3633)   Resolving deltas:  20% (728/3633)   Resolving deltas:  24% (885/3633)   Resolving deltas:  25% (909/3633)   Resolving deltas:  26% (948/3633)   Resolving deltas:  27% (1013/3633)   Resolving deltas:  28% (1025/3633)   Resolving deltas:  29% (1080/3633)   Resolving deltas:  31% (1161/3633)   Resolving deltas:  32% (1165/3633)   Resolving deltas:  33% (1204/3633)   Resolving deltas:  34% (1238/3633)   Resolving deltas:  35% (1298/3633)   Resolving deltas:  36% (1311/3633)   Resolving deltas:  37% (1345/3633)   Resolving deltas:  38% (1394/3633)   Resolving deltas:  42% (1531/3633)   Resolving deltas:  43% (1568/3633)   Resolving deltas:  44% (1623/3633)   Resolving deltas:  45% (1636/3633)   Resolving deltas:  46% (1673/3633)   Resolving deltas:  47% (1708/3633)   Resolving deltas:  48% (1745/3633)   Resolving deltas:  49% (1786/3633)   Resolving deltas:  50% (1821/3633)   Resolving deltas:  52% (1897/3633)   Resolving deltas:  53% (1947/3633)   Resolving deltas:  55% (2007/3633)   Resolving deltas:  56% (2035/3633)   Resolving deltas:  59% (2177/3633)   Resolving deltas:  61% (2231/3633)   Resolving deltas:  62% (2262/3633)   Resolving deltas:  63% (2292/3633)   Resolving deltas:  64% (2329/3633)   Resolving deltas:  65% (2382/3633)   Resolving deltas:  66% (2412/3633)   Resolving deltas:  67% (2451/3633)   Resolving deltas:  68% (2483/3633)   Resolving deltas:  69% (2519/3633)   Resolving deltas:  71% (2596/3633)   Resolving deltas:  72% (2621/3633)   Resolving deltas:  73% (2670/3633)   Resolving deltas:  74% (2689/3633)   Resolving deltas:  75% (2725/3633)   Resolving deltas:  76% (2765/3633)   Resolving deltas:  77% (2801/3633)   Resolving deltas:  78% (2837/3633)   Resolving deltas:  81% (2951/3633)   Resolving deltas:  82% (2982/3633)   Resolving deltas:  83% (3025/3633)   Resolving deltas:  84% (3084/3633)   Resolving deltas:  85% (3103/3633)   Resolving deltas:  86% (3136/3633)   Resolving deltas:  87% (3162/3633)   Resolving deltas:  88% (3198/3633)   Resolving deltas:  89% (3249/3633)   Resolving deltas:  90% (3273/3633)   Resolving deltas:  91% (3311/3633)   Resolving deltas:  92% (3345/3633)   Resolving deltas:  93% (3379/3633)   Resolving deltas:  94% (3419/3633)   Resolving deltas:  95% (3452/3633)   Resolving deltas: 100% (3633/3633)   Resolving deltas: 100% (3633/3633), done.
Submodule path 'src/freebayes': checked out 'c003c1e602ab1fc9a4d3389adb0582c40d65123f'
Submodule 'bamtools' (https://github.com/ekg/bamtools.git) registered for path 'bamtools'
Submodule 'intervaltree' (https://github.com/ekg/intervaltree.git) registered for path 'intervaltree'
Submodule 'bash-tap' (https://github.com/illusori/bash-tap.git) registered for path 'test/bash-tap'
Submodule 'test/test-simple-bash' (https://github.com/ingydotnet/test-simple-bash.git) registered for path 'test/test-simple-bash'
Submodule 'vcflib' (https://github.com/ekg/vcflib.git) registered for path 'vcflib'
Cloning into 'bamtools'...
remote: Enumerating objects: 4028, done.[K
Receiving objects:   0% (1/4028)   Receiving objects:   1% (41/4028)   Receiving objects:   2% (81/4028)   Receiving objects:   3% (121/4028)   Receiving objects:   4% (162/4028)   Receiving objects:   5% (202/4028)   Receiving objects:   6% (242/4028)   Receiving objects:   7% (282/4028)   Receiving objects:   8% (323/4028)   Receiving objects:   9% (363/4028)   Receiving objects:  10% (403/4028)   Receiving objects:  11% (444/4028)   Receiving objects:  12% (484/4028)   Receiving objects:  13% (524/4028)   Receiving objects:  14% (564/4028)   Receiving objects:  15% (605/4028)   Receiving objects:  16% (645/4028)   Receiving objects:  17% (685/4028)   Receiving objects:  18% (726/4028)   Receiving objects:  19% (766/4028)   Receiving objects:  20% (806/4028)   Receiving objects:  21% (846/4028)   Receiving objects:  22% (887/4028)   Receiving objects:  23% (927/4028)   Receiving objects:  24% (967/4028)   Receiving objects:  25% (1007/4028)   Receiving objects:  26% (1048/4028)   Receiving objects:  27% (1088/4028)   Receiving objects:  28% (1128/4028)   Receiving objects:  29% (1169/4028)   Receiving objects:  30% (1209/4028)   Receiving objects:  31% (1249/4028)   Receiving objects:  32% (1289/4028)   Receiving objects:  33% (1330/4028)   Receiving objects:  34% (1370/4028)   Receiving objects:  35% (1410/4028)   Receiving objects:  36% (1451/4028)   Receiving objects:  37% (1491/4028)   Receiving objects:  38% (1531/4028)   Receiving objects:  39% (1571/4028)   Receiving objects:  40% (1612/4028)   Receiving objects:  41% (1652/4028)   Receiving objects:  42% (1692/4028)   Receiving objects:  43% (1733/4028)   Receiving objects:  44% (1773/4028)   Receiving objects:  45% (1813/4028)   Receiving objects:  46% (1853/4028)   Receiving objects:  47% (1894/4028)   Receiving objects:  48% (1934/4028)   Receiving objects:  49% (1974/4028)   Receiving objects:  50% (2014/4028)   Receiving objects:  51% (2055/4028)   Receiving objects:  52% (2095/4028)   Receiving objects:  53% (2135/4028)   Receiving objects:  54% (2176/4028)   Receiving objects:  55% (2216/4028)   Receiving objects:  56% (2256/4028)   Receiving objects:  57% (2296/4028)   Receiving objects:  58% (2337/4028)   Receiving objects:  59% (2377/4028)   Receiving objects:  60% (2417/4028)   Receiving objects:  61% (2458/4028)   Receiving objects:  62% (2498/4028)   Receiving objects:  63% (2538/4028)   Receiving objects:  64% (2578/4028)   Receiving objects:  65% (2619/4028)   Receiving objects:  66% (2659/4028)   Receiving objects:  67% (2699/4028)   Receiving objects:  68% (2740/4028)   Receiving objects:  69% (2780/4028)   Receiving objects:  70% (2820/4028)   Receiving objects:  71% (2860/4028)   Receiving objects:  72% (2901/4028)   Receiving objects:  73% (2941/4028)   Receiving objects:  74% (2981/4028)   Receiving objects:  75% (3021/4028)   Receiving objects:  76% (3062/4028)   Receiving objects:  77% (3102/4028)   Receiving objects:  78% (3142/4028)   Receiving objects:  79% (3183/4028)   Receiving objects:  80% (3223/4028)   Receiving objects:  81% (3263/4028)   Receiving objects:  82% (3303/4028)   Receiving objects:  83% (3344/4028)   Receiving objects:  84% (3384/4028)   Receiving objects:  85% (3424/4028)   Receiving objects:  86% (3465/4028)   Receiving objects:  87% (3505/4028)   Receiving objects:  88% (3545/4028)   Receiving objects:  89% (3585/4028)   Receiving objects:  90% (3626/4028)   Receiving objects:  91% (3666/4028)   Receiving objects:  92% (3706/4028)   Receiving objects:  93% (3747/4028)   Receiving objects:  94% (3787/4028)   Receiving objects:  95% (3827/4028)   Receiving objects:  96% (3867/4028)   Receiving objects:  97% (3908/4028)   remote: Total 4028 (delta 0), reused 0 (delta 0), pack-reused 4028[K
Receiving objects:  98% (3948/4028)   Receiving objects:  99% (3988/4028)   Receiving objects: 100% (4028/4028)   Receiving objects: 100% (4028/4028), 2.50 MiB | 0 bytes/s, done.
Resolving deltas:   0% (0/2683)   Resolving deltas:   1% (33/2683)   Resolving deltas:   2% (58/2683)   Resolving deltas:   3% (91/2683)   Resolving deltas:   4% (118/2683)   Resolving deltas:   5% (135/2683)   Resolving deltas:   6% (164/2683)   Resolving deltas:   7% (189/2683)   Resolving deltas:   8% (223/2683)   Resolving deltas:   9% (252/2683)   Resolving deltas:  10% (272/2683)   Resolving deltas:  11% (296/2683)   Resolving deltas:  12% (322/2683)   Resolving deltas:  13% (350/2683)   Resolving deltas:  14% (379/2683)   Resolving deltas:  15% (405/2683)   Resolving deltas:  16% (433/2683)   Resolving deltas:  17% (457/2683)   Resolving deltas:  18% (495/2683)   Resolving deltas:  19% (511/2683)   Resolving deltas:  20% (550/2683)   Resolving deltas:  21% (568/2683)   Resolving deltas:  22% (592/2683)   Resolving deltas:  23% (622/2683)   Resolving deltas:  25% (682/2683)   Resolving deltas:  26% (704/2683)   Resolving deltas:  27% (728/2683)   Resolving deltas:  28% (772/2683)   Resolving deltas:  34% (937/2683)   Resolving deltas:  36% (974/2683)   Resolving deltas:  37% (1001/2683)   Resolving deltas:  38% (1029/2683)   Resolving deltas:  51% (1385/2683)   Resolving deltas:  53% (1444/2683)   Resolving deltas:  54% (1461/2683)   Resolving deltas:  55% (1477/2683)   Resolving deltas:  56% (1511/2683)   Resolving deltas:  58% (1564/2683)   Resolving deltas:  59% (1583/2683)   Resolving deltas:  60% (1611/2683)   Resolving deltas:  61% (1638/2683)   Resolving deltas:  62% (1670/2683)   Resolving deltas:  63% (1700/2683)   Resolving deltas:  64% (1718/2683)   Resolving deltas:  65% (1746/2683)   Resolving deltas:  66% (1777/2683)   Resolving deltas:  67% (1799/2683)   Resolving deltas:  68% (1825/2683)   Resolving deltas:  69% (1852/2683)   Resolving deltas:  70% (1879/2683)   Resolving deltas:  71% (1905/2683)   Resolving deltas:  72% (1935/2683)   Resolving deltas:  73% (1965/2683)   Resolving deltas:  74% (1990/2683)   Resolving deltas:  75% (2013/2683)   Resolving deltas:  76% (2041/2683)   Resolving deltas:  77% (2066/2683)   Resolving deltas:  78% (2097/2683)   Resolving deltas:  79% (2120/2683)   Resolving deltas:  80% (2149/2683)   Resolving deltas:  81% (2175/2683)   Resolving deltas:  82% (2201/2683)   Resolving deltas:  83% (2227/2683)   Resolving deltas:  84% (2268/2683)   Resolving deltas:  85% (2284/2683)   Resolving deltas:  86% (2311/2683)   Resolving deltas:  87% (2336/2683)   Resolving deltas:  88% (2366/2683)   Resolving deltas:  89% (2389/2683)   Resolving deltas:  90% (2415/2683)   Resolving deltas:  91% (2442/2683)   Resolving deltas:  92% (2473/2683)   Resolving deltas:  93% (2502/2683)   Resolving deltas:  94% (2535/2683)   Resolving deltas:  95% (2550/2683)   Resolving deltas:  96% (2576/2683)   Resolving deltas:  97% (2604/2683)   Resolving deltas:  98% (2630/2683)   Resolving deltas:  99% (2657/2683)   Resolving deltas: 100% (2683/2683)   Resolving deltas: 100% (2683/2683), done.
Submodule path 'src/freebayes/bamtools': checked out 'e77a43f5097ea7eee432ee765049c6b246d49baa'
Cloning into 'intervaltree'...
remote: Enumerating objects: 172, done.[K
Receiving objects:   0% (1/172)   Receiving objects:   1% (2/172)   Receiving objects:   2% (4/172)   Receiving objects:   3% (6/172)   Receiving objects:   4% (7/172)   Receiving objects:   5% (9/172)   Receiving objects:   6% (11/172)   Receiving objects:   7% (13/172)   Receiving objects:   8% (14/172)   Receiving objects:   9% (16/172)   Receiving objects:  10% (18/172)   Receiving objects:  11% (19/172)   Receiving objects:  12% (21/172)   Receiving objects:  13% (23/172)   Receiving objects:  14% (25/172)   Receiving objects:  15% (26/172)   Receiving objects:  16% (28/172)   Receiving objects:  17% (30/172)   Receiving objects:  18% (31/172)   Receiving objects:  19% (33/172)   Receiving objects:  20% (35/172)   Receiving objects:  21% (37/172)   Receiving objects:  22% (38/172)   Receiving objects:  23% (40/172)   Receiving objects:  24% (42/172)   Receiving objects:  25% (43/172)   Receiving objects:  26% (45/172)   Receiving objects:  27% (47/172)   Receiving objects:  28% (49/172)   Receiving objects:  29% (50/172)   Receiving objects:  30% (52/172)   Receiving objects:  31% (54/172)   Receiving objects:  32% (56/172)   Receiving objects:  33% (57/172)   Receiving objects:  34% (59/172)   Receiving objects:  35% (61/172)   Receiving objects:  36% (62/172)   Receiving objects:  37% (64/172)   Receiving objects:  38% (66/172)   Receiving objects:  39% (68/172)   remote: Total 172 (delta 0), reused 0 (delta 0), pack-reused 172[K
Receiving objects:  40% (69/172)   Receiving objects:  41% (71/172)   Receiving objects:  42% (73/172)   Receiving objects:  43% (74/172)   Receiving objects:  44% (76/172)   Receiving objects:  45% (78/172)   Receiving objects:  46% (80/172)   Receiving objects:  47% (81/172)   Receiving objects:  48% (83/172)   Receiving objects:  49% (85/172)   Receiving objects:  50% (86/172)   Receiving objects:  51% (88/172)   Receiving objects:  52% (90/172)   Receiving objects:  53% (92/172)   Receiving objects:  54% (93/172)   Receiving objects:  55% (95/172)   Receiving objects:  56% (97/172)   Receiving objects:  57% (99/172)   Receiving objects:  58% (100/172)   Receiving objects:  59% (102/172)   Receiving objects:  60% (104/172)   Receiving objects:  61% (105/172)   Receiving objects:  62% (107/172)   Receiving objects:  63% (109/172)   Receiving objects:  64% (111/172)   Receiving objects:  65% (112/172)   Receiving objects:  66% (114/172)   Receiving objects:  67% (116/172)   Receiving objects:  68% (117/172)   Receiving objects:  69% (119/172)   Receiving objects:  70% (121/172)   Receiving objects:  71% (123/172)   Receiving objects:  72% (124/172)   Receiving objects:  73% (126/172)   Receiving objects:  74% (128/172)   Receiving objects:  75% (129/172)   Receiving objects:  76% (131/172)   Receiving objects:  77% (133/172)   Receiving objects:  78% (135/172)   Receiving objects:  79% (136/172)   Receiving objects:  80% (138/172)   Receiving objects:  81% (140/172)   Receiving objects:  82% (142/172)   Receiving objects:  83% (143/172)   Receiving objects:  84% (145/172)   Receiving objects:  85% (147/172)   Receiving objects:  86% (148/172)   Receiving objects:  87% (150/172)   Receiving objects:  88% (152/172)   Receiving objects:  89% (154/172)   Receiving objects:  90% (155/172)   Receiving objects:  91% (157/172)   Receiving objects:  92% (159/172)   Receiving objects:  93% (160/172)   Receiving objects:  94% (162/172)   Receiving objects:  95% (164/172)   Receiving objects:  96% (166/172)   Receiving objects:  97% (167/172)   Receiving objects:  98% (169/172)   Receiving objects:  99% (171/172)   Receiving objects: 100% (172/172)   Receiving objects: 100% (172/172), 99.89 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/97)   Resolving deltas:   1% (1/97)   Resolving deltas:   8% (8/97)   Resolving deltas:  10% (10/97)   Resolving deltas:  14% (14/97)   Resolving deltas:  38% (37/97)   Resolving deltas:  67% (65/97)   Resolving deltas:  76% (74/97)   Resolving deltas:  78% (76/97)   Resolving deltas:  98% (96/97)   Resolving deltas: 100% (97/97)   Resolving deltas: 100% (97/97), done.
Submodule path 'src/freebayes/intervaltree': checked out 'd151b487804861dc9f932e9f1fe4f8c499673cec'
Cloning into 'test/bash-tap'...
remote: Enumerating objects: 52, done.[K
remote: Total 52 (delta 0), reused 0 (delta 0), pack-reused 52[K
Unpacking objects:   1% (1/52)   Unpacking objects:   3% (2/52)   Unpacking objects:   5% (3/52)   Unpacking objects:   7% (4/52)   Unpacking objects:   9% (5/52)   Unpacking objects:  11% (6/52)   Unpacking objects:  13% (7/52)   Unpacking objects:  15% (8/52)   Unpacking objects:  17% (9/52)   Unpacking objects:  19% (10/52)   Unpacking objects:  21% (11/52)   Unpacking objects:  23% (12/52)   Unpacking objects:  25% (13/52)   Unpacking objects:  26% (14/52)   Unpacking objects:  28% (15/52)   Unpacking objects:  30% (16/52)   Unpacking objects:  32% (17/52)   Unpacking objects:  34% (18/52)   Unpacking objects:  36% (19/52)   Unpacking objects:  38% (20/52)   Unpacking objects:  40% (21/52)   Unpacking objects:  42% (22/52)   Unpacking objects:  44% (23/52)   Unpacking objects:  46% (24/52)   Unpacking objects:  48% (25/52)   Unpacking objects:  50% (26/52)   Unpacking objects:  51% (27/52)   Unpacking objects:  53% (28/52)   Unpacking objects:  55% (29/52)   Unpacking objects:  57% (30/52)   Unpacking objects:  59% (31/52)   Unpacking objects:  61% (32/52)   Unpacking objects:  63% (33/52)   Unpacking objects:  65% (34/52)   Unpacking objects:  67% (35/52)   Unpacking objects:  69% (36/52)   Unpacking objects:  71% (37/52)   Unpacking objects:  73% (38/52)   Unpacking objects:  75% (39/52)   Unpacking objects:  76% (40/52)   Unpacking objects:  78% (41/52)   Unpacking objects:  80% (42/52)   Unpacking objects:  82% (43/52)   Unpacking objects:  84% (44/52)   Unpacking objects:  86% (45/52)   Unpacking objects:  88% (46/52)   Unpacking objects:  90% (47/52)   Unpacking objects:  92% (48/52)   Unpacking objects:  94% (49/52)   Unpacking objects:  96% (50/52)   Unpacking objects:  98% (51/52)   Unpacking objects: 100% (52/52)   Unpacking objects: 100% (52/52), done.
Submodule path 'src/freebayes/test/bash-tap': checked out 'c38fbfa401600cc81ccda66bfc0da3ea56288d03'
Cloning into 'test/test-simple-bash'...
remote: Enumerating objects: 87, done.[K
remote: Counting objects:   1% (1/87)   [Kremote: Counting objects:   2% (2/87)   [Kremote: Counting objects:   3% (3/87)   [Kremote: Counting objects:   4% (4/87)   [Kremote: Counting objects:   5% (5/87)   [Kremote: Counting objects:   6% (6/87)   [Kremote: Counting objects:   8% (7/87)   [Kremote: Counting objects:   9% (8/87)   [Kremote: Counting objects:  10% (9/87)   [Kremote: Counting objects:  11% (10/87)   [Kremote: Counting objects:  12% (11/87)   [Kremote: Counting objects:  13% (12/87)   [Kremote: Counting objects:  14% (13/87)   [Kremote: Counting objects:  16% (14/87)   [Kremote: Counting objects:  17% (15/87)   [Kremote: Counting objects:  18% (16/87)   [Kremote: Counting objects:  19% (17/87)   [Kremote: Counting objects:  20% (18/87)   [Kremote: Counting objects:  21% (19/87)   [Kremote: Counting objects:  22% (20/87)   [Kremote: Counting objects:  24% (21/87)   [Kremote: Counting objects:  25% (22/87)   [Kremote: Counting objects:  26% (23/87)   [Kremote: Counting objects:  27% (24/87)   [Kremote: Counting objects:  28% (25/87)   [Kremote: Counting objects:  29% (26/87)   [Kremote: Counting objects:  31% (27/87)   [Kremote: Counting objects:  32% (28/87)   [Kremote: Counting objects:  33% (29/87)   [Kremote: Counting objects:  34% (30/87)   [Kremote: Counting objects:  35% (31/87)   [Kremote: Counting objects:  36% (32/87)   [Kremote: Counting objects:  37% (33/87)   [Kremote: Counting objects:  39% (34/87)   [Kremote: Counting objects:  40% (35/87)   [Kremote: Counting objects:  41% (36/87)   [Kremote: Counting objects:  42% (37/87)   [Kremote: Counting objects:  43% (38/87)   [Kremote: Counting objects:  44% (39/87)   [Kremote: Counting objects:  45% (40/87)   [Kremote: Counting objects:  47% (41/87)   [Kremote: Counting objects:  48% (42/87)   [Kremote: Counting objects:  49% (43/87)   [Kremote: Counting objects:  50% (44/87)   [Kremote: Counting objects:  51% (45/87)   [Kremote: Counting objects:  52% (46/87)   [Kremote: Counting objects:  54% (47/87)   [Kremote: Counting objects:  55% (48/87)   [Kremote: Counting objects:  56% (49/87)   [Kremote: Counting objects:  57% (50/87)   [Kremote: Counting objects:  58% (51/87)   [Kremote: Counting objects:  59% (52/87)   [Kremote: Counting objects:  60% (53/87)   [Kremote: Counting objects:  62% (54/87)   [Kremote: Counting objects:  63% (55/87)   [Kremote: Counting objects:  64% (56/87)   [Kremote: Counting objects:  65% (57/87)   [Kremote: Counting objects:  66% (58/87)   [Kremote: Counting objects:  67% (59/87)   [Kremote: Counting objects:  68% (60/87)   [Kremote: Counting objects:  70% (61/87)   [Kremote: Counting objects:  71% (62/87)   [Kremote: Counting objects:  72% (63/87)   [Kremote: Counting objects:  73% (64/87)   [Kremote: Counting objects:  74% (65/87)   [Kremote: Counting objects:  75% (66/87)   [Kremote: Counting objects:  77% (67/87)   [Kremote: Counting objects:  78% (68/87)   [Kremote: Counting objects:  79% (69/87)   [Kremote: Counting objects:  80% (70/87)   [Kremote: Counting objects:  81% (71/87)   [Kremote: Counting objects:  82% (72/87)   [Kremote: Counting objects:  83% (73/87)   [Kremote: Counting objects:  85% (74/87)   [Kremote: Counting objects:  86% (75/87)   [Kremote: Counting objects:  87% (76/87)   [Kremote: Counting objects:  88% (77/87)   [Kremote: Counting objects:  89% (78/87)   [Kremote: Counting objects:  90% (79/87)   [Kremote: Counting objects:  91% (80/87)   [Kremote: Counting objects:  93% (81/87)   [Kremote: Counting objects:  94% (82/87)   [Kremote: Counting objects:  95% (83/87)   [Kremote: Counting objects:  96% (84/87)   [Kremote: Counting objects:  97% (85/87)   [Kremote: Counting objects:  98% (86/87)   [Kremote: Counting objects: 100% (87/87)   [Kremote: Counting objects: 100% (87/87), done.[K
remote: Compressing objects:   2% (1/38)   [Kremote: Compressing objects:   5% (2/38)   [Kremote: Compressing objects:   7% (3/38)   [Kremote: Compressing objects:  10% (4/38)   [Kremote: Compressing objects:  13% (5/38)   [Kremote: Compressing objects:  15% (6/38)   [Kremote: Compressing objects:  18% (7/38)   [Kremote: Compressing objects:  21% (8/38)   [Kremote: Compressing objects:  23% (9/38)   [Kremote: Compressing objects:  26% (10/38)   [Kremote: Compressing objects:  28% (11/38)   [Kremote: Compressing objects:  31% (12/38)   [Kremote: Compressing objects:  34% (13/38)   [Kremote: Compressing objects:  36% (14/38)   [Kremote: Compressing objects:  39% (15/38)   [Kremote: Compressing objects:  42% (16/38)   [Kremote: Compressing objects:  44% (17/38)   [Kremote: Compressing objects:  47% (18/38)   [Kremote: Compressing objects:  50% (19/38)   [Kremote: Compressing objects:  52% (20/38)   [Kremote: Compressing objects:  55% (21/38)   [Kremote: Compressing objects:  57% (22/38)   [Kremote: Compressing objects:  60% (23/38)   [Kremote: Compressing objects:  63% (24/38)   [Kremote: Compressing objects:  65% (25/38)   [Kremote: Compressing objects:  68% (26/38)   [Kremote: Compressing objects:  71% (27/38)   [Kremote: Compressing objects:  73% (28/38)   [Kremote: Compressing objects:  76% (29/38)   [Kremote: Compressing objects:  78% (30/38)   [Kremote: Compressing objects:  81% (31/38)   [Kremote: Compressing objects:  84% (32/38)   [Kremote: Compressing objects:  86% (33/38)   [Kremote: Compressing objects:  89% (34/38)   [Kremote: Compressing objects:  92% (35/38)   [Kremote: Compressing objects:  94% (36/38)   [Kremote: Compressing objects:  97% (37/38)   [Kremote: Compressing objects: 100% (38/38)   [Kremote: Compressing objects: 100% (38/38), done.[K
remote: Total 87 (delta 32), reused 87 (delta 32), pack-reused 0[K
Unpacking objects:   1% (1/87)   Unpacking objects:   2% (2/87)   Unpacking objects:   3% (3/87)   Unpacking objects:   4% (4/87)   Unpacking objects:   5% (5/87)   Unpacking objects:   6% (6/87)   Unpacking objects:   8% (7/87)   Unpacking objects:   9% (8/87)   Unpacking objects:  10% (9/87)   Unpacking objects:  11% (10/87)   Unpacking objects:  12% (11/87)   Unpacking objects:  13% (12/87)   Unpacking objects:  14% (13/87)   Unpacking objects:  16% (14/87)   Unpacking objects:  17% (15/87)   Unpacking objects:  18% (16/87)   Unpacking objects:  19% (17/87)   Unpacking objects:  20% (18/87)   Unpacking objects:  21% (19/87)   Unpacking objects:  22% (20/87)   Unpacking objects:  24% (21/87)   Unpacking objects:  25% (22/87)   Unpacking objects:  26% (23/87)   Unpacking objects:  27% (24/87)   Unpacking objects:  28% (25/87)   Unpacking objects:  29% (26/87)   Unpacking objects:  31% (27/87)   Unpacking objects:  32% (28/87)   Unpacking objects:  33% (29/87)   Unpacking objects:  34% (30/87)   Unpacking objects:  35% (31/87)   Unpacking objects:  36% (32/87)   Unpacking objects:  37% (33/87)   Unpacking objects:  39% (34/87)   Unpacking objects:  40% (35/87)   Unpacking objects:  41% (36/87)   Unpacking objects:  42% (37/87)   Unpacking objects:  43% (38/87)   Unpacking objects:  44% (39/87)   Unpacking objects:  45% (40/87)   Unpacking objects:  47% (41/87)   Unpacking objects:  48% (42/87)   Unpacking objects:  49% (43/87)   Unpacking objects:  50% (44/87)   Unpacking objects:  51% (45/87)   Unpacking objects:  52% (46/87)   Unpacking objects:  54% (47/87)   Unpacking objects:  55% (48/87)   Unpacking objects:  56% (49/87)   Unpacking objects:  57% (50/87)   Unpacking objects:  58% (51/87)   Unpacking objects:  59% (52/87)   Unpacking objects:  60% (53/87)   Unpacking objects:  62% (54/87)   Unpacking objects:  63% (55/87)   Unpacking objects:  64% (56/87)   Unpacking objects:  65% (57/87)   Unpacking objects:  66% (58/87)   Unpacking objects:  67% (59/87)   Unpacking objects:  68% (60/87)   Unpacking objects:  70% (61/87)   Unpacking objects:  71% (62/87)   Unpacking objects:  72% (63/87)   Unpacking objects:  73% (64/87)   Unpacking objects:  74% (65/87)   Unpacking objects:  75% (66/87)   Unpacking objects:  77% (67/87)   Unpacking objects:  78% (68/87)   Unpacking objects:  79% (69/87)   Unpacking objects:  80% (70/87)   Unpacking objects:  81% (71/87)   Unpacking objects:  82% (72/87)   Unpacking objects:  83% (73/87)   Unpacking objects:  85% (74/87)   Unpacking objects:  86% (75/87)   Unpacking objects:  87% (76/87)   Unpacking objects:  88% (77/87)   Unpacking objects:  89% (78/87)   Unpacking objects:  90% (79/87)   Unpacking objects:  91% (80/87)   Unpacking objects:  93% (81/87)   Unpacking objects:  94% (82/87)   Unpacking objects:  95% (83/87)   Unpacking objects:  96% (84/87)   Unpacking objects:  97% (85/87)   Unpacking objects:  98% (86/87)   Unpacking objects: 100% (87/87)   Unpacking objects: 100% (87/87), done.
Submodule path 'src/freebayes/test/test-simple-bash': checked out '124673ff204b01c8e96b7fc9f9b32ee35d898acc'
Cloning into 'vcflib'...
remote: Enumerating objects: 1, done.[K
remote: Counting objects: 100% (1/1)   [Kremote: Counting objects: 100% (1/1), done.[K
Receiving objects:   0% (1/3144)   Receiving objects:   1% (32/3144)   Receiving objects:   2% (63/3144)   Receiving objects:   3% (95/3144)   Receiving objects:   4% (126/3144)   Receiving objects:   5% (158/3144)   Receiving objects:   6% (189/3144)   Receiving objects:   7% (221/3144)   Receiving objects:   8% (252/3144)   Receiving objects:   9% (283/3144)   Receiving objects:  10% (315/3144)   Receiving objects:  11% (346/3144)   Receiving objects:  12% (378/3144)   Receiving objects:  13% (409/3144)   Receiving objects:  14% (441/3144)   Receiving objects:  15% (472/3144)   Receiving objects:  16% (504/3144)   Receiving objects:  17% (535/3144)   Receiving objects:  18% (566/3144)   Receiving objects:  19% (598/3144)   Receiving objects:  20% (629/3144)   Receiving objects:  21% (661/3144)   Receiving objects:  22% (692/3144)   Receiving objects:  23% (724/3144)   Receiving objects:  24% (755/3144)   Receiving objects:  25% (786/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  26% (818/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  27% (849/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  28% (881/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  29% (912/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  30% (944/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  31% (975/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  32% (1007/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  33% (1038/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  34% (1069/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  35% (1101/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  36% (1132/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  37% (1164/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  38% (1195/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  39% (1227/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  40% (1258/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  41% (1290/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  42% (1321/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  43% (1352/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  44% (1384/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  45% (1415/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  46% (1447/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  47% (1478/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  48% (1510/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  49% (1541/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  50% (1572/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  51% (1604/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  52% (1635/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  53% (1667/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  54% (1698/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  55% (1730/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  56% (1761/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  57% (1793/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  58% (1824/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  59% (1855/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  60% (1887/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  61% (1918/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  62% (1950/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  63% (1981/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  64% (2013/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  65% (2044/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  66% (2076/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  67% (2107/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  68% (2138/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  69% (2170/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  70% (2201/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  71% (2233/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  72% (2264/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  73% (2296/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  74% (2327/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  75% (2358/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  76% (2390/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  77% (2421/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  78% (2453/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  79% (2484/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  80% (2516/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  81% (2547/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  82% (2579/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  83% (2610/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  84% (2641/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  85% (2673/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  86% (2704/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  87% (2736/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  88% (2767/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  89% (2799/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  90% (2830/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  91% (2862/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  92% (2893/3144), 17.64 MiB | 35.20 MiB/s   remote: Total 3144 (delta 0), reused 0 (delta 0), pack-reused 3143[K
Receiving objects:  93% (2924/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  94% (2956/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  95% (2987/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  96% (3019/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  97% (3050/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  98% (3082/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects:  99% (3113/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects: 100% (3144/3144), 17.64 MiB | 35.20 MiB/s   Receiving objects: 100% (3144/3144), 27.80 MiB | 35.20 MiB/s, done.
Resolving deltas:   0% (0/1953)   Resolving deltas:   1% (22/1953)   Resolving deltas:   2% (44/1953)   Resolving deltas:   3% (66/1953)   Resolving deltas:   4% (80/1953)   Resolving deltas:   5% (98/1953)   Resolving deltas:   6% (121/1953)   Resolving deltas:   7% (138/1953)   Resolving deltas:   9% (179/1953)   Resolving deltas:  10% (199/1953)   Resolving deltas:  11% (215/1953)   Resolving deltas:  12% (242/1953)   Resolving deltas:  13% (256/1953)   Resolving deltas:  14% (281/1953)   Resolving deltas:  15% (295/1953)   Resolving deltas:  16% (314/1953)   Resolving deltas:  17% (336/1953)   Resolving deltas:  18% (353/1953)   Resolving deltas:  19% (383/1953)   Resolving deltas:  20% (391/1953)   Resolving deltas:  21% (412/1953)   Resolving deltas:  23% (455/1953)   Resolving deltas:  24% (481/1953)   Resolving deltas:  26% (516/1953)   Resolving deltas:  28% (557/1953)   Resolving deltas:  29% (572/1953)   Resolving deltas:  30% (587/1953)   Resolving deltas:  38% (749/1953)   Resolving deltas:  40% (798/1953)   Resolving deltas:  41% (803/1953)   Resolving deltas:  42% (831/1953)   Resolving deltas:  43% (857/1953)   Resolving deltas:  44% (862/1953)   Resolving deltas:  52% (1030/1953)   Resolving deltas:  53% (1038/1953)   Resolving deltas:  54% (1058/1953)   Resolving deltas:  55% (1078/1953)   Resolving deltas:  57% (1121/1953)   Resolving deltas:  62% (1225/1953)   Resolving deltas:  66% (1298/1953)   Resolving deltas:  67% (1309/1953)   Resolving deltas:  69% (1349/1953)   Resolving deltas:  71% (1390/1953)   Resolving deltas:  72% (1410/1953)   Resolving deltas:  73% (1426/1953)   Resolving deltas:  74% (1454/1953)   Resolving deltas:  77% (1510/1953)   Resolving deltas:  79% (1562/1953)   Resolving deltas:  80% (1563/1953)   Resolving deltas:  83% (1635/1953)   Resolving deltas:  84% (1641/1953)   Resolving deltas:  85% (1664/1953)   Resolving deltas:  89% (1743/1953)   Resolving deltas:  90% (1763/1953)   Resolving deltas:  91% (1780/1953)   Resolving deltas:  92% (1797/1953)   Resolving deltas:  93% (1823/1953)   Resolving deltas:  94% (1853/1953)   Resolving deltas:  95% (1856/1953)   Resolving deltas:  96% (1887/1953)   Resolving deltas:  97% (1911/1953)   Resolving deltas:  98% (1916/1953)   Resolving deltas:  99% (1937/1953)   Resolving deltas: 100% (1953/1953)   Resolving deltas: 100% (1953/1953), done.
Submodule path 'src/freebayes/vcflib': checked out '5ac091365fdc716cc47cc5410bb97ee5dc2a2c92'
Submodule 'fastahack' (https://github.com/ekg/fastahack.git) registered for path 'fastahack'
Submodule 'filevercmp' (https://github.com/ekg/filevercmp.git) registered for path 'filevercmp'
Submodule 'fsom' (https://github.com/ekg/fsom.git) registered for path 'fsom'
Submodule 'intervaltree' (https://github.com/ekg/intervaltree.git) registered for path 'intervaltree'
Submodule 'multichoose' (https://github.com/ekg/multichoose.git) registered for path 'multichoose'
Submodule 'smithwaterman' (https://github.com/ekg/smithwaterman.git) registered for path 'smithwaterman'
Submodule 'tabixpp' (https://github.com/ekg/tabixpp.git) registered for path 'tabixpp'
Cloning into 'fastahack'...
remote: Enumerating objects: 218, done.[K
Receiving objects:   0% (1/218)   Receiving objects:   1% (3/218)   Receiving objects:   2% (5/218)   Receiving objects:   3% (7/218)   Receiving objects:   4% (9/218)   Receiving objects:   5% (11/218)   Receiving objects:   6% (14/218)   Receiving objects:   7% (16/218)   Receiving objects:   8% (18/218)   Receiving objects:   9% (20/218)   Receiving objects:  10% (22/218)   Receiving objects:  11% (24/218)   remote: Total 218 (delta 0), reused 0 (delta 0), pack-reused 218[K
Receiving objects:  12% (27/218)   Receiving objects:  13% (29/218)   Receiving objects:  14% (31/218)   Receiving objects:  15% (33/218)   Receiving objects:  16% (35/218)   Receiving objects:  17% (38/218)   Receiving objects:  18% (40/218)   Receiving objects:  19% (42/218)   Receiving objects:  20% (44/218)   Receiving objects:  21% (46/218)   Receiving objects:  22% (48/218)   Receiving objects:  23% (51/218)   Receiving objects:  24% (53/218)   Receiving objects:  25% (55/218)   Receiving objects:  26% (57/218)   Receiving objects:  27% (59/218)   Receiving objects:  28% (62/218)   Receiving objects:  29% (64/218)   Receiving objects:  30% (66/218)   Receiving objects:  31% (68/218)   Receiving objects:  32% (70/218)   Receiving objects:  33% (72/218)   Receiving objects:  34% (75/218)   Receiving objects:  35% (77/218)   Receiving objects:  36% (79/218)   Receiving objects:  37% (81/218)   Receiving objects:  38% (83/218)   Receiving objects:  39% (86/218)   Receiving objects:  40% (88/218)   Receiving objects:  41% (90/218)   Receiving objects:  42% (92/218)   Receiving objects:  43% (94/218)   Receiving objects:  44% (96/218)   Receiving objects:  45% (99/218)   Receiving objects:  46% (101/218)   Receiving objects:  47% (103/218)   Receiving objects:  48% (105/218)   Receiving objects:  49% (107/218)   Receiving objects:  50% (109/218)   Receiving objects:  51% (112/218)   Receiving objects:  52% (114/218)   Receiving objects:  53% (116/218)   Receiving objects:  54% (118/218)   Receiving objects:  55% (120/218)   Receiving objects:  56% (123/218)   Receiving objects:  57% (125/218)   Receiving objects:  58% (127/218)   Receiving objects:  59% (129/218)   Receiving objects:  60% (131/218)   Receiving objects:  61% (133/218)   Receiving objects:  62% (136/218)   Receiving objects:  63% (138/218)   Receiving objects:  64% (140/218)   Receiving objects:  65% (142/218)   Receiving objects:  66% (144/218)   Receiving objects:  67% (147/218)   Receiving objects:  68% (149/218)   Receiving objects:  69% (151/218)   Receiving objects:  70% (153/218)   Receiving objects:  71% (155/218)   Receiving objects:  72% (157/218)   Receiving objects:  73% (160/218)   Receiving objects:  74% (162/218)   Receiving objects:  75% (164/218)   Receiving objects:  76% (166/218)   Receiving objects:  77% (168/218)   Receiving objects:  78% (171/218)   Receiving objects:  79% (173/218)   Receiving objects:  80% (175/218)   Receiving objects:  81% (177/218)   Receiving objects:  82% (179/218)   Receiving objects:  83% (181/218)   Receiving objects:  84% (184/218)   Receiving objects:  85% (186/218)   Receiving objects:  86% (188/218)   Receiving objects:  87% (190/218)   Receiving objects:  88% (192/218)   Receiving objects:  89% (195/218)   Receiving objects:  90% (197/218)   Receiving objects:  91% (199/218)   Receiving objects:  92% (201/218)   Receiving objects:  93% (203/218)   Receiving objects:  94% (205/218)   Receiving objects:  95% (208/218)   Receiving objects:  96% (210/218)   Receiving objects:  97% (212/218)   Receiving objects:  98% (214/218)   Receiving objects:  99% (216/218)   Receiving objects: 100% (218/218)   Receiving objects: 100% (218/218), 49.16 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/123)   Resolving deltas:   5% (7/123)   Resolving deltas:   8% (10/123)   Resolving deltas:  10% (13/123)   Resolving deltas:  12% (15/123)   Resolving deltas:  13% (16/123)   Resolving deltas:  15% (19/123)   Resolving deltas:  16% (20/123)   Resolving deltas:  30% (38/123)   Resolving deltas:  33% (41/123)   Resolving deltas:  39% (49/123)   Resolving deltas:  73% (91/123)   Resolving deltas:  75% (93/123)   Resolving deltas:  78% (97/123)   Resolving deltas:  81% (100/123)   Resolving deltas:  82% (101/123)   Resolving deltas:  85% (105/123)   Resolving deltas:  93% (115/123)   Resolving deltas:  95% (118/123)   Resolving deltas:  97% (120/123)   Resolving deltas:  98% (121/123)   Resolving deltas:  99% (122/123)   Resolving deltas: 100% (123/123)   Resolving deltas: 100% (123/123), done.
Submodule path 'src/freebayes/vcflib/fastahack': checked out 'c68cebb4f2e5d5d2b70cf08fbdf1944e9ab2c2dd'
Cloning into 'filevercmp'...
remote: Enumerating objects: 26, done.[K
remote: Total 26 (delta 0), reused 0 (delta 0), pack-reused 26[K
Unpacking objects:   3% (1/26)   Unpacking objects:   7% (2/26)   Unpacking objects:  11% (3/26)   Unpacking objects:  15% (4/26)   Unpacking objects:  19% (5/26)   Unpacking objects:  23% (6/26)   Unpacking objects:  26% (7/26)   Unpacking objects:  30% (8/26)   Unpacking objects:  34% (9/26)   Unpacking objects:  38% (10/26)   Unpacking objects:  42% (11/26)   Unpacking objects:  46% (12/26)   Unpacking objects:  50% (13/26)   Unpacking objects:  53% (14/26)   Unpacking objects:  57% (15/26)   Unpacking objects:  61% (16/26)   Unpacking objects:  65% (17/26)   Unpacking objects:  69% (18/26)   Unpacking objects:  73% (19/26)   Unpacking objects:  76% (20/26)   Unpacking objects:  80% (21/26)   Unpacking objects:  84% (22/26)   Unpacking objects:  88% (23/26)   Unpacking objects:  92% (24/26)   Unpacking objects:  96% (25/26)   Unpacking objects: 100% (26/26)   Unpacking objects: 100% (26/26), done.
Submodule path 'src/freebayes/vcflib/filevercmp': checked out '1a9b779b93d0b244040274794d402106907b71b7'
Cloning into 'fsom'...
remote: Enumerating objects: 42, done.[K
remote: Total 42 (delta 0), reused 0 (delta 0), pack-reused 42[K
Unpacking objects:   2% (1/42)   Unpacking objects:   4% (2/42)   Unpacking objects:   7% (3/42)   Unpacking objects:   9% (4/42)   Unpacking objects:  11% (5/42)   Unpacking objects:  14% (6/42)   Unpacking objects:  16% (7/42)   Unpacking objects:  19% (8/42)   Unpacking objects:  21% (9/42)   Unpacking objects:  23% (10/42)   Unpacking objects:  26% (11/42)   Unpacking objects:  28% (12/42)   Unpacking objects:  30% (13/42)   Unpacking objects:  33% (14/42)   Unpacking objects:  35% (15/42)   Unpacking objects:  38% (16/42)   Unpacking objects:  40% (17/42)   Unpacking objects:  42% (18/42)   Unpacking objects:  45% (19/42)   Unpacking objects:  47% (20/42)   Unpacking objects:  50% (21/42)   Unpacking objects:  52% (22/42)   Unpacking objects:  54% (23/42)   Unpacking objects:  57% (24/42)   Unpacking objects:  59% (25/42)   Unpacking objects:  61% (26/42)   Unpacking objects:  64% (27/42)   Unpacking objects:  66% (28/42)   Unpacking objects:  69% (29/42)   Unpacking objects:  71% (30/42)   Unpacking objects:  73% (31/42)   Unpacking objects:  76% (32/42)   Unpacking objects:  78% (33/42)   Unpacking objects:  80% (34/42)   Unpacking objects:  83% (35/42)   Unpacking objects:  85% (36/42)   Unpacking objects:  88% (37/42)   Unpacking objects:  90% (38/42)   Unpacking objects:  92% (39/42)   Unpacking objects:  95% (40/42)   Unpacking objects:  97% (41/42)   Unpacking objects: 100% (42/42)   Unpacking objects: 100% (42/42), done.
Submodule path 'src/freebayes/vcflib/fsom': checked out 'a6ef318fbd347c53189384aef7f670c0e6ce89a3'
Cloning into 'intervaltree'...
remote: Enumerating objects: 172, done.[K
Receiving objects:   0% (1/172)   Receiving objects:   1% (2/172)   Receiving objects:   2% (4/172)   Receiving objects:   3% (6/172)   Receiving objects:   4% (7/172)   Receiving objects:   5% (9/172)   Receiving objects:   6% (11/172)   Receiving objects:   7% (13/172)   Receiving objects:   8% (14/172)   Receiving objects:   9% (16/172)   Receiving objects:  10% (18/172)   Receiving objects:  11% (19/172)   Receiving objects:  12% (21/172)   Receiving objects:  13% (23/172)   Receiving objects:  14% (25/172)   Receiving objects:  15% (26/172)   Receiving objects:  16% (28/172)   Receiving objects:  17% (30/172)   Receiving objects:  18% (31/172)   Receiving objects:  19% (33/172)   Receiving objects:  20% (35/172)   Receiving objects:  21% (37/172)   Receiving objects:  22% (38/172)   Receiving objects:  23% (40/172)   Receiving objects:  24% (42/172)   Receiving objects:  25% (43/172)   Receiving objects:  26% (45/172)   Receiving objects:  27% (47/172)   Receiving objects:  28% (49/172)   Receiving objects:  29% (50/172)   Receiving objects:  30% (52/172)   Receiving objects:  31% (54/172)   Receiving objects:  32% (56/172)   Receiving objects:  33% (57/172)   Receiving objects:  34% (59/172)   Receiving objects:  35% (61/172)   Receiving objects:  36% (62/172)   Receiving objects:  37% (64/172)   Receiving objects:  38% (66/172)   Receiving objects:  39% (68/172)   remote: Total 172 (delta 0), reused 0 (delta 0), pack-reused 172[K
Receiving objects:  40% (69/172)   Receiving objects:  41% (71/172)   Receiving objects:  42% (73/172)   Receiving objects:  43% (74/172)   Receiving objects:  44% (76/172)   Receiving objects:  45% (78/172)   Receiving objects:  46% (80/172)   Receiving objects:  47% (81/172)   Receiving objects:  48% (83/172)   Receiving objects:  49% (85/172)   Receiving objects:  50% (86/172)   Receiving objects:  51% (88/172)   Receiving objects:  52% (90/172)   Receiving objects:  53% (92/172)   Receiving objects:  54% (93/172)   Receiving objects:  55% (95/172)   Receiving objects:  56% (97/172)   Receiving objects:  57% (99/172)   Receiving objects:  58% (100/172)   Receiving objects:  59% (102/172)   Receiving objects:  60% (104/172)   Receiving objects:  61% (105/172)   Receiving objects:  62% (107/172)   Receiving objects:  63% (109/172)   Receiving objects:  64% (111/172)   Receiving objects:  65% (112/172)   Receiving objects:  66% (114/172)   Receiving objects:  67% (116/172)   Receiving objects:  68% (117/172)   Receiving objects:  69% (119/172)   Receiving objects:  70% (121/172)   Receiving objects:  71% (123/172)   Receiving objects:  72% (124/172)   Receiving objects:  73% (126/172)   Receiving objects:  74% (128/172)   Receiving objects:  75% (129/172)   Receiving objects:  76% (131/172)   Receiving objects:  77% (133/172)   Receiving objects:  78% (135/172)   Receiving objects:  79% (136/172)   Receiving objects:  80% (138/172)   Receiving objects:  81% (140/172)   Receiving objects:  82% (142/172)   Receiving objects:  83% (143/172)   Receiving objects:  84% (145/172)   Receiving objects:  85% (147/172)   Receiving objects:  86% (148/172)   Receiving objects:  87% (150/172)   Receiving objects:  88% (152/172)   Receiving objects:  89% (154/172)   Receiving objects:  90% (155/172)   Receiving objects:  91% (157/172)   Receiving objects:  92% (159/172)   Receiving objects:  93% (160/172)   Receiving objects:  94% (162/172)   Receiving objects:  95% (164/172)   Receiving objects:  96% (166/172)   Receiving objects:  97% (167/172)   Receiving objects:  98% (169/172)   Receiving objects:  99% (171/172)   Receiving objects: 100% (172/172)   Receiving objects: 100% (172/172), 99.89 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/97)   Resolving deltas:   1% (1/97)   Resolving deltas:   6% (6/97)   Resolving deltas:   7% (7/97)   Resolving deltas:  28% (28/97)   Resolving deltas:  34% (33/97)   Resolving deltas:  57% (56/97)   Resolving deltas:  85% (83/97)   Resolving deltas:  86% (84/97)   Resolving deltas:  88% (86/97)   Resolving deltas: 100% (97/97)   Resolving deltas: 100% (97/97), done.
Submodule path 'src/freebayes/vcflib/intervaltree': checked out '1290744283cef8076bb8a2968d4899b7228435f4'
Cloning into 'multichoose'...
remote: Enumerating objects: 105, done.[K
Receiving objects:   0% (1/105)   Receiving objects:   1% (2/105)   Receiving objects:   2% (3/105)   Receiving objects:   3% (4/105)   Receiving objects:   4% (5/105)   Receiving objects:   5% (6/105)   Receiving objects:   6% (7/105)   remote: Total 105 (delta 0), reused 0 (delta 0), pack-reused 105[K
Receiving objects:   7% (8/105)   Receiving objects:   8% (9/105)   Receiving objects:   9% (10/105)   Receiving objects:  10% (11/105)   Receiving objects:  11% (12/105)   Receiving objects:  12% (13/105)   Receiving objects:  13% (14/105)   Receiving objects:  14% (15/105)   Receiving objects:  15% (16/105)   Receiving objects:  16% (17/105)   Receiving objects:  17% (18/105)   Receiving objects:  18% (19/105)   Receiving objects:  19% (20/105)   Receiving objects:  20% (21/105)   Receiving objects:  21% (23/105)   Receiving objects:  22% (24/105)   Receiving objects:  23% (25/105)   Receiving objects:  24% (26/105)   Receiving objects:  25% (27/105)   Receiving objects:  26% (28/105)   Receiving objects:  27% (29/105)   Receiving objects:  28% (30/105)   Receiving objects:  29% (31/105)   Receiving objects:  30% (32/105)   Receiving objects:  31% (33/105)   Receiving objects:  32% (34/105)   Receiving objects:  33% (35/105)   Receiving objects:  34% (36/105)   Receiving objects:  35% (37/105)   Receiving objects:  36% (38/105)   Receiving objects:  37% (39/105)   Receiving objects:  38% (40/105)   Receiving objects:  39% (41/105)   Receiving objects:  40% (42/105)   Receiving objects:  41% (44/105)   Receiving objects:  42% (45/105)   Receiving objects:  43% (46/105)   Receiving objects:  44% (47/105)   Receiving objects:  45% (48/105)   Receiving objects:  46% (49/105)   Receiving objects:  47% (50/105)   Receiving objects:  48% (51/105)   Receiving objects:  49% (52/105)   Receiving objects:  50% (53/105)   Receiving objects:  51% (54/105)   Receiving objects:  52% (55/105)   Receiving objects:  53% (56/105)   Receiving objects:  54% (57/105)   Receiving objects:  55% (58/105)   Receiving objects:  56% (59/105)   Receiving objects:  57% (60/105)   Receiving objects:  58% (61/105)   Receiving objects:  59% (62/105)   Receiving objects:  60% (63/105)   Receiving objects:  61% (65/105)   Receiving objects:  62% (66/105)   Receiving objects:  63% (67/105)   Receiving objects:  64% (68/105)   Receiving objects:  65% (69/105)   Receiving objects:  66% (70/105)   Receiving objects:  67% (71/105)   Receiving objects:  68% (72/105)   Receiving objects:  69% (73/105)   Receiving objects:  70% (74/105)   Receiving objects:  71% (75/105)   Receiving objects:  72% (76/105)   Receiving objects:  73% (77/105)   Receiving objects:  74% (78/105)   Receiving objects:  75% (79/105)   Receiving objects:  76% (80/105)   Receiving objects:  77% (81/105)   Receiving objects:  78% (82/105)   Receiving objects:  79% (83/105)   Receiving objects:  80% (84/105)   Receiving objects:  81% (86/105)   Receiving objects:  82% (87/105)   Receiving objects:  83% (88/105)   Receiving objects:  84% (89/105)   Receiving objects:  85% (90/105)   Receiving objects:  86% (91/105)   Receiving objects:  87% (92/105)   Receiving objects:  88% (93/105)   Receiving objects:  89% (94/105)   Receiving objects:  90% (95/105)   Receiving objects:  91% (96/105)   Receiving objects:  92% (97/105)   Receiving objects:  93% (98/105)   Receiving objects:  94% (99/105)   Receiving objects:  95% (100/105)   Receiving objects:  96% (101/105)   Receiving objects:  97% (102/105)   Receiving objects:  98% (103/105)   Receiving objects:  99% (104/105)   Receiving objects: 100% (105/105)   Receiving objects: 100% (105/105), 22.88 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/54)   Resolving deltas:   7% (4/54)   Resolving deltas:  14% (8/54)   Resolving deltas:  22% (12/54)   Resolving deltas:  24% (13/54)   Resolving deltas:  29% (16/54)   Resolving deltas:  35% (19/54)   Resolving deltas:  40% (22/54)   Resolving deltas:  44% (24/54)   Resolving deltas:  50% (27/54)   Resolving deltas:  64% (35/54)   Resolving deltas:  66% (36/54)   Resolving deltas:  77% (42/54)   Resolving deltas:  81% (44/54)   Resolving deltas: 100% (54/54)   Resolving deltas: 100% (54/54), done.
Submodule path 'src/freebayes/vcflib/multichoose': checked out '73d35daa18bf35729b9ba758041a9247a72484a5'
Cloning into 'smithwaterman'...
remote: Enumerating objects: 312, done.[K
Receiving objects:   0% (1/312)   Receiving objects:   1% (4/312)   Receiving objects:   2% (7/312)   Receiving objects:   3% (10/312)   Receiving objects:   4% (13/312)   Receiving objects:   5% (16/312)   Receiving objects:   6% (19/312)   Receiving objects:   7% (22/312)   Receiving objects:   8% (25/312)   Receiving objects:   9% (29/312)   Receiving objects:  10% (32/312)   Receiving objects:  11% (35/312)   Receiving objects:  12% (38/312)   Receiving objects:  13% (41/312)   Receiving objects:  14% (44/312)   Receiving objects:  15% (47/312)   Receiving objects:  16% (50/312)   Receiving objects:  17% (54/312)   Receiving objects:  18% (57/312)   Receiving objects:  19% (60/312)   Receiving objects:  20% (63/312)   Receiving objects:  21% (66/312)   Receiving objects:  22% (69/312)   Receiving objects:  23% (72/312)   Receiving objects:  24% (75/312)   Receiving objects:  25% (78/312)   Receiving objects:  26% (82/312)   Receiving objects:  27% (85/312)   Receiving objects:  28% (88/312)   remote: Total 312 (delta 0), reused 0 (delta 0), pack-reused 312[K
Receiving objects:  29% (91/312)   Receiving objects:  30% (94/312)   Receiving objects:  31% (97/312)   Receiving objects:  32% (100/312)   Receiving objects:  33% (103/312)   Receiving objects:  34% (107/312)   Receiving objects:  35% (110/312)   Receiving objects:  36% (113/312)   Receiving objects:  37% (116/312)   Receiving objects:  38% (119/312)   Receiving objects:  39% (122/312)   Receiving objects:  40% (125/312)   Receiving objects:  41% (128/312)   Receiving objects:  42% (132/312)   Receiving objects:  43% (135/312)   Receiving objects:  44% (138/312)   Receiving objects:  45% (141/312)   Receiving objects:  46% (144/312)   Receiving objects:  47% (147/312)   Receiving objects:  48% (150/312)   Receiving objects:  49% (153/312)   Receiving objects:  50% (156/312)   Receiving objects:  51% (160/312)   Receiving objects:  52% (163/312)   Receiving objects:  53% (166/312)   Receiving objects:  54% (169/312)   Receiving objects:  55% (172/312)   Receiving objects:  56% (175/312)   Receiving objects:  57% (178/312)   Receiving objects:  58% (181/312)   Receiving objects:  59% (185/312)   Receiving objects:  60% (188/312)   Receiving objects:  61% (191/312)   Receiving objects:  62% (194/312)   Receiving objects:  63% (197/312)   Receiving objects:  64% (200/312)   Receiving objects:  65% (203/312)   Receiving objects:  66% (206/312)   Receiving objects:  67% (210/312)   Receiving objects:  68% (213/312)   Receiving objects:  69% (216/312)   Receiving objects:  70% (219/312)   Receiving objects:  71% (222/312)   Receiving objects:  72% (225/312)   Receiving objects:  73% (228/312)   Receiving objects:  74% (231/312)   Receiving objects:  75% (234/312)   Receiving objects:  76% (238/312)   Receiving objects:  77% (241/312)   Receiving objects:  78% (244/312)   Receiving objects:  79% (247/312)   Receiving objects:  80% (250/312)   Receiving objects:  81% (253/312)   Receiving objects:  82% (256/312)   Receiving objects:  83% (259/312)   Receiving objects:  84% (263/312)   Receiving objects:  85% (266/312)   Receiving objects:  86% (269/312)   Receiving objects:  87% (272/312)   Receiving objects:  88% (275/312)   Receiving objects:  89% (278/312)   Receiving objects:  90% (281/312)   Receiving objects:  91% (284/312)   Receiving objects:  92% (288/312)   Receiving objects:  93% (291/312)   Receiving objects:  94% (294/312)   Receiving objects:  95% (297/312)   Receiving objects:  96% (300/312)   Receiving objects:  97% (303/312)   Receiving objects:  98% (306/312)   Receiving objects:  99% (309/312)   Receiving objects: 100% (312/312)   Receiving objects: 100% (312/312), 90.24 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/197)   Resolving deltas:   1% (2/197)   Resolving deltas:   2% (4/197)   Resolving deltas:   4% (9/197)   Resolving deltas:   5% (10/197)   Resolving deltas:   6% (12/197)   Resolving deltas:   7% (15/197)   Resolving deltas:   8% (17/197)   Resolving deltas:   9% (18/197)   Resolving deltas:  10% (21/197)   Resolving deltas:  19% (38/197)   Resolving deltas:  20% (41/197)   Resolving deltas:  22% (45/197)   Resolving deltas:  35% (70/197)   Resolving deltas:  45% (89/197)   Resolving deltas:  48% (96/197)   Resolving deltas:  52% (104/197)   Resolving deltas:  63% (125/197)   Resolving deltas:  64% (127/197)   Resolving deltas:  69% (137/197)   Resolving deltas:  82% (163/197)   Resolving deltas: 100% (197/197)   Resolving deltas: 100% (197/197), done.
Submodule path 'src/freebayes/vcflib/smithwaterman': checked out '203218b47d45ac56ef234716f1bd4c741b289be1'
Cloning into 'tabixpp'...
remote: Enumerating objects: 135, done.[K
Receiving objects:   0% (1/135)   Receiving objects:   1% (2/135)   Receiving objects:   2% (3/135)   Receiving objects:   3% (5/135)   Receiving objects:   4% (6/135)   Receiving objects:   5% (7/135)   Receiving objects:   6% (9/135)   Receiving objects:   7% (10/135)   Receiving objects:   8% (11/135)   Receiving objects:   9% (13/135)   Receiving objects:  10% (14/135)   Receiving objects:  11% (15/135)   Receiving objects:  12% (17/135)   Receiving objects:  13% (18/135)   Receiving objects:  14% (19/135)   Receiving objects:  15% (21/135)   Receiving objects:  16% (22/135)   Receiving objects:  17% (23/135)   Receiving objects:  18% (25/135)   Receiving objects:  19% (26/135)   Receiving objects:  20% (27/135)   Receiving objects:  21% (29/135)   Receiving objects:  22% (30/135)   Receiving objects:  23% (32/135)   Receiving objects:  24% (33/135)   Receiving objects:  25% (34/135)   Receiving objects:  26% (36/135)   Receiving objects:  27% (37/135)   Receiving objects:  28% (38/135)   Receiving objects:  29% (40/135)   Receiving objects:  30% (41/135)   Receiving objects:  31% (42/135)   Receiving objects:  32% (44/135)   Receiving objects:  33% (45/135)   Receiving objects:  34% (46/135)   Receiving objects:  35% (48/135)   Receiving objects:  36% (49/135)   Receiving objects:  37% (50/135)   Receiving objects:  38% (52/135)   Receiving objects:  39% (53/135)   Receiving objects:  40% (54/135)   Receiving objects:  41% (56/135)   Receiving objects:  42% (57/135)   Receiving objects:  43% (59/135)   Receiving objects:  44% (60/135)   Receiving objects:  45% (61/135)   Receiving objects:  46% (63/135)   Receiving objects:  47% (64/135)   Receiving objects:  48% (65/135)   Receiving objects:  49% (67/135)   Receiving objects:  50% (68/135)   Receiving objects:  51% (69/135)   Receiving objects:  52% (71/135)   Receiving objects:  53% (72/135)   Receiving objects:  54% (73/135)   Receiving objects:  55% (75/135)   Receiving objects:  56% (76/135)   Receiving objects:  57% (77/135)   Receiving objects:  58% (79/135)   Receiving objects:  59% (80/135)   Receiving objects:  60% (81/135)   Receiving objects:  61% (83/135)   Receiving objects:  62% (84/135)   Receiving objects:  63% (86/135)   Receiving objects:  64% (87/135)   Receiving objects:  65% (88/135)   remote: Total 135 (delta 0), reused 0 (delta 0), pack-reused 135[K
Receiving objects:  66% (90/135)   Receiving objects:  67% (91/135)   Receiving objects:  68% (92/135)   Receiving objects:  69% (94/135)   Receiving objects:  70% (95/135)   Receiving objects:  71% (96/135)   Receiving objects:  72% (98/135)   Receiving objects:  73% (99/135)   Receiving objects:  74% (100/135)   Receiving objects:  75% (102/135)   Receiving objects:  76% (103/135)   Receiving objects:  77% (104/135)   Receiving objects:  78% (106/135)   Receiving objects:  79% (107/135)   Receiving objects:  80% (108/135)   Receiving objects:  81% (110/135)   Receiving objects:  82% (111/135)   Receiving objects:  83% (113/135)   Receiving objects:  84% (114/135)   Receiving objects:  85% (115/135)   Receiving objects:  86% (117/135)   Receiving objects:  87% (118/135)   Receiving objects:  88% (119/135)   Receiving objects:  89% (121/135)   Receiving objects:  90% (122/135)   Receiving objects:  91% (123/135)   Receiving objects:  92% (125/135)   Receiving objects:  93% (126/135)   Receiving objects:  94% (127/135)   Receiving objects:  95% (129/135)   Receiving objects:  96% (130/135)   Receiving objects:  97% (131/135)   Receiving objects:  98% (133/135)   Receiving objects:  99% (134/135)   Receiving objects: 100% (135/135)   Receiving objects: 100% (135/135), 85.27 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/53)   Resolving deltas:   3% (2/53)   Resolving deltas:   5% (3/53)   Resolving deltas:  18% (10/53)   Resolving deltas:  30% (16/53)   Resolving deltas:  50% (27/53)   Resolving deltas:  73% (39/53)   Resolving deltas:  77% (41/53)   Resolving deltas:  83% (44/53)   Resolving deltas:  92% (49/53)   Resolving deltas:  94% (50/53)   Resolving deltas: 100% (53/53)   Resolving deltas: 100% (53/53), done.
Submodule path 'src/freebayes/vcflib/tabixpp': checked out 'bbc63a49acc52212199f92e9e3b8fba0a593e3f7'
Cloning into 'src/lumpy-sv'...
remote: Enumerating objects: 2942, done.[K
Receiving objects:   0% (1/2942)   Receiving objects:   1% (30/2942)   Receiving objects:   2% (59/2942)   Receiving objects:   3% (89/2942)   Receiving objects:   4% (118/2942)   Receiving objects:   5% (148/2942)   Receiving objects:   6% (177/2942)   Receiving objects:   7% (206/2942)   Receiving objects:   8% (236/2942)   Receiving objects:   9% (265/2942)   Receiving objects:  10% (295/2942)   Receiving objects:  11% (324/2942)   Receiving objects:  12% (354/2942)   Receiving objects:  13% (383/2942)   Receiving objects:  14% (412/2942)   Receiving objects:  15% (442/2942)   Receiving objects:  16% (471/2942)   Receiving objects:  17% (501/2942)   Receiving objects:  18% (530/2942)   Receiving objects:  19% (559/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  20% (589/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  21% (618/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  22% (648/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  23% (677/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  24% (707/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  25% (736/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  26% (765/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  27% (795/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  28% (824/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  29% (854/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  30% (883/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  31% (913/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  32% (942/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  33% (971/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  34% (1001/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  35% (1030/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  36% (1060/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  37% (1089/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  38% (1118/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  39% (1148/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  40% (1177/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  41% (1207/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  42% (1236/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  43% (1266/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  44% (1295/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  45% (1324/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  46% (1354/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  47% (1383/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  48% (1413/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  49% (1442/2942), 50.19 MiB | 100.18 MiB/s   Receiving objects:  49% (1456/2942), 99.76 MiB | 99.56 MiB/s   Receiving objects:  50% (1471/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  51% (1501/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  52% (1530/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  53% (1560/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  54% (1589/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  55% (1619/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  56% (1648/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  57% (1677/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  58% (1707/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  59% (1736/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  60% (1766/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  61% (1795/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  62% (1825/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  63% (1854/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  64% (1883/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  65% (1913/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  66% (1942/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  67% (1972/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  68% (2001/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  69% (2030/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  70% (2060/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  71% (2089/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  72% (2119/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  73% (2148/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  74% (2178/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  75% (2207/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  76% (2236/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  77% (2266/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  78% (2295/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  79% (2325/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  80% (2354/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  81% (2384/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  82% (2413/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  83% (2442/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  84% (2472/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  85% (2501/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  86% (2531/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  87% (2560/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  88% (2589/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  89% (2619/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  90% (2648/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  91% (2678/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  92% (2707/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  93% (2737/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  94% (2766/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  95% (2795/2942), 155.60 MiB | 103.53 MiB/s   remote: Total 2942 (delta 0), reused 0 (delta 0), pack-reused 2942[K
Receiving objects:  96% (2825/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  97% (2854/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  98% (2884/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects:  99% (2913/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects: 100% (2942/2942), 155.60 MiB | 103.53 MiB/s   Receiving objects: 100% (2942/2942), 183.20 MiB | 103.53 MiB/s, done.
Resolving deltas:   0% (0/1583)   Resolving deltas:   1% (16/1583)   Resolving deltas:   2% (36/1583)   Resolving deltas:   3% (50/1583)   Resolving deltas:   4% (64/1583)   Resolving deltas:   6% (100/1583)   Resolving deltas:   8% (140/1583)   Resolving deltas:   9% (150/1583)   Resolving deltas:  10% (165/1583)   Resolving deltas:  11% (178/1583)   Resolving deltas:  12% (195/1583)   Resolving deltas:  13% (207/1583)   Resolving deltas:  15% (247/1583)   Resolving deltas:  16% (254/1583)   Resolving deltas:  18% (285/1583)   Resolving deltas:  19% (304/1583)   Resolving deltas:  21% (344/1583)   Resolving deltas:  22% (359/1583)   Resolving deltas:  23% (369/1583)   Resolving deltas:  24% (383/1583)   Resolving deltas:  25% (397/1583)   Resolving deltas:  28% (446/1583)   Resolving deltas:  29% (460/1583)   Resolving deltas:  30% (477/1583)   Resolving deltas:  31% (491/1583)   Resolving deltas:  32% (521/1583)   Resolving deltas:  33% (535/1583)   Resolving deltas:  34% (543/1583)   Resolving deltas:  35% (555/1583)   Resolving deltas:  38% (616/1583)   Resolving deltas:  39% (623/1583)   Resolving deltas:  40% (646/1583)   Resolving deltas:  41% (652/1583)   Resolving deltas:  42% (667/1583)   Resolving deltas:  43% (682/1583)   Resolving deltas:  44% (706/1583)   Resolving deltas:  45% (714/1583)   Resolving deltas:  46% (737/1583)   Resolving deltas:  52% (827/1583)   Resolving deltas:  53% (843/1583)   Resolving deltas:  54% (858/1583)   Resolving deltas:  55% (878/1583)   Resolving deltas:  58% (924/1583)   Resolving deltas:  59% (938/1583)   Resolving deltas:  60% (952/1583)   Resolving deltas:  61% (976/1583)   Resolving deltas:  62% (992/1583)   Resolving deltas:  63% (1007/1583)   Resolving deltas:  64% (1016/1583)   Resolving deltas:  65% (1031/1583)   Resolving deltas:  67% (1075/1583)   Resolving deltas:  68% (1083/1583)   Resolving deltas:  69% (1108/1583)   Resolving deltas:  70% (1109/1583)   Resolving deltas:  71% (1138/1583)   Resolving deltas:  77% (1227/1583)   Resolving deltas:  80% (1282/1583)   Resolving deltas:  81% (1283/1583)   Resolving deltas:  82% (1300/1583)   Resolving deltas:  83% (1321/1583)   Resolving deltas:  84% (1332/1583)   Resolving deltas:  86% (1364/1583)   Resolving deltas:  88% (1403/1583)   Resolving deltas:  92% (1462/1583)   Resolving deltas:  93% (1481/1583)   Resolving deltas:  94% (1489/1583)   Resolving deltas:  95% (1510/1583)   Resolving deltas:  96% (1523/1583)   Resolving deltas:  97% (1539/1583)   Resolving deltas:  98% (1563/1583)   Resolving deltas:  99% (1569/1583)   Resolving deltas: 100% (1583/1583)   Resolving deltas: 100% (1583/1583), done.
Submodule path 'src/lumpy-sv': checked out 'dd4bf97704b253f7b5aef72fc28c10b2ef74a2c6'
Submodule 'scripts/bamkit' (https://github.com/cc2qe/bamkit.git) registered for path 'scripts/bamkit'
Cloning into 'scripts/bamkit'...
remote: Enumerating objects: 66, done.[K
remote: Total 66 (delta 0), reused 0 (delta 0), pack-reused 66[K
Unpacking objects:   1% (1/66)   Unpacking objects:   3% (2/66)   Unpacking objects:   4% (3/66)   Unpacking objects:   6% (4/66)   Unpacking objects:   7% (5/66)   Unpacking objects:   9% (6/66)   Unpacking objects:  10% (7/66)   Unpacking objects:  12% (8/66)   Unpacking objects:  13% (9/66)   Unpacking objects:  15% (10/66)   Unpacking objects:  16% (11/66)   Unpacking objects:  18% (12/66)   Unpacking objects:  19% (13/66)   Unpacking objects:  21% (14/66)   Unpacking objects:  22% (15/66)   Unpacking objects:  24% (16/66)   Unpacking objects:  25% (17/66)   Unpacking objects:  27% (18/66)   Unpacking objects:  28% (19/66)   Unpacking objects:  30% (20/66)   Unpacking objects:  31% (21/66)   Unpacking objects:  33% (22/66)   Unpacking objects:  34% (23/66)   Unpacking objects:  36% (24/66)   Unpacking objects:  37% (25/66)   Unpacking objects:  39% (26/66)   Unpacking objects:  40% (27/66)   Unpacking objects:  42% (28/66)   Unpacking objects:  43% (29/66)   Unpacking objects:  45% (30/66)   Unpacking objects:  46% (31/66)   Unpacking objects:  48% (32/66)   Unpacking objects:  50% (33/66)   Unpacking objects:  51% (34/66)   Unpacking objects:  53% (35/66)   Unpacking objects:  54% (36/66)   Unpacking objects:  56% (37/66)   Unpacking objects:  57% (38/66)   Unpacking objects:  59% (39/66)   Unpacking objects:  60% (40/66)   Unpacking objects:  62% (41/66)   Unpacking objects:  63% (42/66)   Unpacking objects:  65% (43/66)   Unpacking objects:  66% (44/66)   Unpacking objects:  68% (45/66)   Unpacking objects:  69% (46/66)   Unpacking objects:  71% (47/66)   Unpacking objects:  72% (48/66)   Unpacking objects:  74% (49/66)   Unpacking objects:  75% (50/66)   Unpacking objects:  77% (51/66)   Unpacking objects:  78% (52/66)   Unpacking objects:  80% (53/66)   Unpacking objects:  81% (54/66)   Unpacking objects:  83% (55/66)   Unpacking objects:  84% (56/66)   Unpacking objects:  86% (57/66)   Unpacking objects:  87% (58/66)   Unpacking objects:  89% (59/66)   Unpacking objects:  90% (60/66)   Unpacking objects:  92% (61/66)   Unpacking objects:  93% (62/66)   Unpacking objects:  95% (63/66)   Unpacking objects:  96% (64/66)   Unpacking objects:  98% (65/66)   Unpacking objects: 100% (66/66)   Unpacking objects: 100% (66/66), done.
Submodule path 'src/lumpy-sv/scripts/bamkit': checked out '6b8c207e3fdec323c5694822fb5b7f09c2e8f3ab'
Cloning into 'src/parallel'...
remote: Counting objects: 15380, done.[K
remote: Compressing objects:   0% (1/2743)   [Kremote: Compressing objects:   1% (28/2743)   [Kremote: Compressing objects:   2% (55/2743)   [Kremote: Compressing objects:   3% (83/2743)   [Kremote: Compressing objects:   4% (110/2743)   [Kremote: Compressing objects:   5% (138/2743)   [Kremote: Compressing objects:   6% (165/2743)   [Kremote: Compressing objects:   7% (193/2743)   [Kremote: Compressing objects:   8% (220/2743)   [Kremote: Compressing objects:   9% (247/2743)   [Kremote: Compressing objects:  10% (275/2743)   [Kremote: Compressing objects:  11% (302/2743)   [Kremote: Compressing objects:  12% (330/2743)   [Kremote: Compressing objects:  13% (357/2743)   [Kremote: Compressing objects:  14% (385/2743)   [Kremote: Compressing objects:  15% (412/2743)   [Kremote: Compressing objects:  16% (439/2743)   [Kremote: Compressing objects:  17% (467/2743)   [Kremote: Compressing objects:  18% (494/2743)   [Kremote: Compressing objects:  19% (522/2743)   [Kremote: Compressing objects:  20% (549/2743)   [Kremote: Compressing objects:  21% (577/2743)   [Kremote: Compressing objects:  22% (604/2743)   [Kremote: Compressing objects:  23% (631/2743)   [Kremote: Compressing objects:  24% (659/2743)   [Kremote: Compressing objects:  25% (686/2743)   [Kremote: Compressing objects:  26% (714/2743)   [Kremote: Compressing objects:  27% (741/2743)   [Kremote: Compressing objects:  28% (769/2743)   [Kremote: Compressing objects:  29% (796/2743)   [Kremote: Compressing objects:  30% (823/2743)   [Kremote: Compressing objects:  31% (851/2743)   [Kremote: Compressing objects:  32% (878/2743)   [Kremote: Compressing objects:  33% (906/2743)   [Kremote: Compressing objects:  34% (933/2743)   [Kremote: Compressing objects:  35% (961/2743)   [Kremote: Compressing objects:  36% (988/2743)   [Kremote: Compressing objects:  37% (1015/2743)   [Kremote: Compressing objects:  38% (1043/2743)   [Kremote: Compressing objects:  39% (1070/2743)   [Kremote: Compressing objects:  40% (1098/2743)   [Kremote: Compressing objects:  41% (1125/2743)   [Kremote: Compressing objects:  42% (1153/2743)   [Kremote: Compressing objects:  43% (1180/2743)   [Kremote: Compressing objects:  44% (1207/2743)   [Kremote: Compressing objects:  45% (1235/2743)   [Kremote: Compressing objects:  46% (1262/2743)   [Kremote: Compressing objects:  47% (1290/2743)   [Kremote: Compressing objects:  48% (1317/2743)   [Kremote: Compressing objects:  49% (1345/2743)   [Kremote: Compressing objects:  50% (1372/2743)   [Kremote: Compressing objects:  51% (1399/2743)   [Kremote: Compressing objects:  52% (1427/2743)   [Kremote: Compressing objects:  53% (1454/2743)   [Kremote: Compressing objects:  54% (1482/2743)   [Kremote: Compressing objects:  55% (1509/2743)   [Kremote: Compressing objects:  56% (1537/2743)   [Kremote: Compressing objects:  57% (1564/2743)   [Kremote: Compressing objects:  58% (1591/2743)   [Kremote: Compressing objects:  59% (1619/2743)   [Kremote: Compressing objects:  60% (1646/2743)   [Kremote: Compressing objects:  61% (1674/2743)   [Kremote: Compressing objects:  62% (1701/2743)   [Kremote: Compressing objects:  63% (1729/2743)   [Kremote: Compressing objects:  64% (1756/2743)   [Kremote: Compressing objects:  65% (1783/2743)   [Kremote: Compressing objects:  66% (1811/2743)   [Kremote: Compressing objects:  67% (1838/2743)   [Kremote: Compressing objects:  68% (1866/2743)   [Kremote: Compressing objects:  69% (1893/2743)   [Kremote: Compressing objects:  70% (1921/2743)   [Kremote: Compressing objects:  71% (1948/2743)   [Kremote: Compressing objects:  72% (1975/2743)   [Kremote: Compressing objects:  73% (2003/2743)   [Kremote: Compressing objects:  74% (2030/2743)   [Kremote: Compressing objects:  75% (2058/2743)   [Kremote: Compressing objects:  76% (2085/2743)   [Kremote: Compressing objects:  77% (2113/2743)   [Kremote: Compressing objects:  78% (2140/2743)   [Kremote: Compressing objects:  79% (2167/2743)   [Kremote: Compressing objects:  80% (2195/2743)   [Kremote: Compressing objects:  81% (2222/2743)   [Kremote: Compressing objects:  82% (2250/2743)   [Kremote: Compressing objects:  83% (2277/2743)   [Kremote: Compressing objects:  84% (2305/2743)   [Kremote: Compressing objects:  85% (2332/2743)   [Kremote: Compressing objects:  86% (2359/2743)   [Kremote: Compressing objects:  87% (2387/2743)   [Kremote: Compressing objects:  88% (2414/2743)   [Kremote: Compressing objects:  89% (2442/2743)   [Kremote: Compressing objects:  90% (2469/2743)   [Kremote: Compressing objects:  91% (2497/2743)   [Kremote: Compressing objects:  92% (2524/2743)   [Kremote: Compressing objects:  93% (2551/2743)   [Kremote: Compressing objects:  94% (2579/2743)   [Kremote: Compressing objects:  95% (2606/2743)   [Kremote: Compressing objects:  96% (2634/2743)   [Kremote: Compressing objects:  97% (2661/2743)   [Kremote: Compressing objects:  98% (2689/2743)   [Kremote: Compressing objects:  99% (2716/2743)   [Kremote: Compressing objects: 100% (2743/2743)   [Kremote: Compressing objects: 100% (2743/2743), done.[K
Receiving objects:   0% (1/15380)   Receiving objects:   1% (154/15380)   Receiving objects:   2% (308/15380)   Receiving objects:   3% (462/15380)   Receiving objects:   4% (616/15380)   Receiving objects:   5% (769/15380)   Receiving objects:   6% (923/15380)   Receiving objects:   7% (1077/15380)   Receiving objects:   8% (1231/15380)   Receiving objects:   9% (1385/15380)   Receiving objects:  10% (1538/15380)   Receiving objects:  11% (1692/15380)   Receiving objects:  12% (1846/15380)   Receiving objects:  13% (2000/15380)   Receiving objects:  14% (2154/15380)   Receiving objects:  15% (2307/15380)   Receiving objects:  16% (2461/15380)   Receiving objects:  17% (2615/15380)   Receiving objects:  18% (2769/15380)   Receiving objects:  19% (2923/15380)   Receiving objects:  20% (3076/15380)   Receiving objects:  21% (3230/15380)   Receiving objects:  22% (3384/15380)   Receiving objects:  23% (3538/15380)   Receiving objects:  24% (3692/15380)   Receiving objects:  25% (3845/15380)   Receiving objects:  26% (3999/15380)   Receiving objects:  27% (4153/15380)   Receiving objects:  28% (4307/15380)   Receiving objects:  29% (4461/15380)   Receiving objects:  30% (4614/15380)   Receiving objects:  31% (4768/15380)   Receiving objects:  32% (4922/15380)   Receiving objects:  33% (5076/15380)   Receiving objects:  34% (5230/15380)   Receiving objects:  35% (5383/15380)   Receiving objects:  36% (5537/15380)   Receiving objects:  37% (5691/15380)   Receiving objects:  38% (5845/15380)   Receiving objects:  39% (5999/15380)   Receiving objects:  40% (6152/15380)   Receiving objects:  41% (6306/15380)   Receiving objects:  42% (6460/15380)   Receiving objects:  43% (6614/15380)   Receiving objects:  44% (6768/15380)   Receiving objects:  45% (6921/15380)   Receiving objects:  46% (7075/15380)   Receiving objects:  47% (7229/15380)   Receiving objects:  48% (7383/15380)   Receiving objects:  49% (7537/15380)   Receiving objects:  50% (7690/15380)   Receiving objects:  51% (7844/15380)   Receiving objects:  52% (7998/15380)   Receiving objects:  53% (8152/15380)   Receiving objects:  54% (8306/15380)   Receiving objects:  55% (8459/15380)   Receiving objects:  56% (8613/15380)   Receiving objects:  57% (8767/15380)   Receiving objects:  58% (8921/15380)   Receiving objects:  59% (9075/15380)   Receiving objects:  60% (9228/15380)   Receiving objects:  61% (9382/15380)   Receiving objects:  62% (9536/15380)   Receiving objects:  63% (9690/15380)   Receiving objects:  64% (9844/15380)   Receiving objects:  65% (9997/15380)   Receiving objects:  66% (10151/15380)   Receiving objects:  67% (10305/15380)   Receiving objects:  68% (10459/15380)   Receiving objects:  69% (10613/15380)   Receiving objects:  70% (10766/15380)   Receiving objects:  71% (10920/15380)   Receiving objects:  72% (11074/15380)   Receiving objects:  73% (11228/15380)   Receiving objects:  74% (11382/15380)   Receiving objects:  75% (11535/15380)   Receiving objects:  76% (11689/15380)   Receiving objects:  77% (11843/15380)   Receiving objects:  78% (11997/15380)   Receiving objects:  79% (12151/15380)   Receiving objects:  80% (12304/15380)   Receiving objects:  81% (12458/15380)   Receiving objects:  82% (12612/15380)   Receiving objects:  83% (12766/15380)   Receiving objects:  84% (12920/15380)   Receiving objects:  85% (13073/15380)   Receiving objects:  86% (13227/15380)   Receiving objects:  87% (13381/15380)   Receiving objects:  88% (13535/15380)   Receiving objects:  89% (13689/15380)   Receiving objects:  90% (13842/15380)   Receiving objects:  91% (13996/15380)   Receiving objects:  92% (14150/15380)   Receiving objects:  93% (14304/15380)   Receiving objects:  94% (14458/15380)   Receiving objects:  95% (14611/15380)   Receiving objects:  96% (14765/15380)   Receiving objects:  97% (14919/15380)   remote: Total 15380 (delta 12478), reused 15221 (delta 12365)[K
Receiving objects:  98% (15073/15380)   Receiving objects:  99% (15227/15380)   Receiving objects: 100% (15380/15380)   Receiving objects: 100% (15380/15380), 18.40 MiB | 0 bytes/s, done.
Resolving deltas:   0% (0/12478)   Resolving deltas:   1% (152/12478)   Resolving deltas:   2% (251/12478)   Resolving deltas:   5% (646/12478)   Resolving deltas:   6% (796/12478)   Resolving deltas:   8% (1103/12478)   Resolving deltas:   9% (1142/12478)   Resolving deltas:  12% (1527/12478)   Resolving deltas:  13% (1698/12478)   Resolving deltas:  14% (1770/12478)   Resolving deltas:  15% (1875/12478)   Resolving deltas:  16% (2100/12478)   Resolving deltas:  18% (2348/12478)   Resolving deltas:  20% (2515/12478)   Resolving deltas:  21% (2653/12478)   Resolving deltas:  22% (2819/12478)   Resolving deltas:  23% (2957/12478)   Resolving deltas:  24% (3072/12478)   Resolving deltas:  25% (3239/12478)   Resolving deltas:  26% (3270/12478)   Resolving deltas:  27% (3381/12478)   Resolving deltas:  29% (3639/12478)   Resolving deltas:  32% (4040/12478)   Resolving deltas:  33% (4132/12478)   Resolving deltas:  34% (4253/12478)   Resolving deltas:  35% (4474/12478)   Resolving deltas:  36% (4547/12478)   Resolving deltas:  37% (4627/12478)   Resolving deltas:  38% (4747/12478)   Resolving deltas:  39% (4868/12478)   Resolving deltas:  40% (4997/12478)   Resolving deltas:  41% (5164/12478)   Resolving deltas:  42% (5241/12478)   Resolving deltas:  44% (5495/12478)   Resolving deltas:  45% (5653/12478)   Resolving deltas:  46% (5751/12478)   Resolving deltas:  47% (5918/12478)   Resolving deltas:  48% (6021/12478)   Resolving deltas:  49% (6198/12478)   Resolving deltas:  50% (6317/12478)   Resolving deltas:  51% (6380/12478)   Resolving deltas:  52% (6505/12478)   Resolving deltas:  53% (6617/12478)   Resolving deltas:  54% (6793/12478)   Resolving deltas:  55% (6864/12478)   Resolving deltas:  56% (6989/12478)   Resolving deltas:  57% (7115/12478)   Resolving deltas:  58% (7242/12478)   Resolving deltas:  59% (7420/12478)   Resolving deltas:  60% (7505/12478)   Resolving deltas:  61% (7614/12478)   Resolving deltas:  62% (7745/12478)   Resolving deltas:  63% (7864/12478)   Resolving deltas:  64% (7994/12478)   Resolving deltas:  65% (8111/12478)   Resolving deltas:  66% (8239/12478)   Resolving deltas:  67% (8367/12478)   Resolving deltas:  68% (8513/12478)   Resolving deltas:  69% (8616/12478)   Resolving deltas:  70% (8736/12478)   Resolving deltas:  71% (8883/12478)   Resolving deltas:  72% (9000/12478)   Resolving deltas:  73% (9123/12478)   Resolving deltas:  74% (9281/12478)   Resolving deltas:  75% (9369/12478)   Resolving deltas:  76% (9485/12478)   Resolving deltas:  77% (9699/12478)   Resolving deltas:  79% (9862/12478)   Resolving deltas:  81% (10195/12478)   Resolving deltas:  82% (10246/12478)   Resolving deltas:  83% (10368/12478)   Resolving deltas:  84% (10586/12478)   Resolving deltas:  85% (10670/12478)   Resolving deltas:  86% (10768/12478)   Resolving deltas:  88% (11000/12478)   Resolving deltas:  89% (11142/12478)   Resolving deltas:  90% (11240/12478)   Resolving deltas:  91% (11376/12478)   Resolving deltas:  92% (11488/12478)   Resolving deltas:  94% (11748/12478)   Resolving deltas:  95% (11861/12478)   Resolving deltas:  96% (11981/12478)   Resolving deltas:  97% (12158/12478)   Resolving deltas:  98% (12240/12478)   Resolving deltas:  99% (12380/12478)   Resolving deltas: 100% (12478/12478)   Resolving deltas: 100% (12478/12478), done.
Submodule path 'src/parallel': checked out '8a570f867dde07fbe9a025f2eec706d44b82966c'
Cloning into 'src/samblaster'...
remote: Enumerating objects: 223, done.[K
Receiving objects:   0% (1/223)   Receiving objects:   1% (3/223)   Receiving objects:   2% (5/223)   Receiving objects:   3% (7/223)   Receiving objects:   4% (9/223)   Receiving objects:   5% (12/223)   Receiving objects:   6% (14/223)   Receiving objects:   7% (16/223)   Receiving objects:   8% (18/223)   Receiving objects:   9% (21/223)   Receiving objects:  10% (23/223)   Receiving objects:  11% (25/223)   Receiving objects:  12% (27/223)   Receiving objects:  13% (29/223)   Receiving objects:  14% (32/223)   Receiving objects:  15% (34/223)   Receiving objects:  16% (36/223)   Receiving objects:  17% (38/223)   Receiving objects:  18% (41/223)   Receiving objects:  19% (43/223)   Receiving objects:  20% (45/223)   Receiving objects:  21% (47/223)   Receiving objects:  22% (50/223)   Receiving objects:  23% (52/223)   Receiving objects:  24% (54/223)   Receiving objects:  25% (56/223)   Receiving objects:  26% (58/223)   Receiving objects:  27% (61/223)   Receiving objects:  28% (63/223)   Receiving objects:  29% (65/223)   Receiving objects:  30% (67/223)   Receiving objects:  31% (70/223)   Receiving objects:  32% (72/223)   Receiving objects:  33% (74/223)   Receiving objects:  34% (76/223)   Receiving objects:  35% (79/223)   Receiving objects:  36% (81/223)   Receiving objects:  37% (83/223)   Receiving objects:  38% (85/223)   Receiving objects:  39% (87/223)   Receiving objects:  40% (90/223)   Receiving objects:  41% (92/223)   Receiving objects:  42% (94/223)   Receiving objects:  43% (96/223)   Receiving objects:  44% (99/223)   Receiving objects:  45% (101/223)   Receiving objects:  46% (103/223)   Receiving objects:  47% (105/223)   Receiving objects:  48% (108/223)   Receiving objects:  49% (110/223)   Receiving objects:  50% (112/223)   Receiving objects:  51% (114/223)   Receiving objects:  52% (116/223)   Receiving objects:  53% (119/223)   Receiving objects:  54% (121/223)   Receiving objects:  55% (123/223)   Receiving objects:  56% (125/223)   Receiving objects:  57% (128/223)   Receiving objects:  58% (130/223)   Receiving objects:  59% (132/223)   Receiving objects:  60% (134/223)   Receiving objects:  61% (137/223)   Receiving objects:  62% (139/223)   Receiving objects:  63% (141/223)   Receiving objects:  64% (143/223)   remote: Total 223 (delta 0), reused 0 (delta 0), pack-reused 223[K
Receiving objects:  65% (145/223)   Receiving objects:  66% (148/223)   Receiving objects:  67% (150/223)   Receiving objects:  68% (152/223)   Receiving objects:  69% (154/223)   Receiving objects:  70% (157/223)   Receiving objects:  71% (159/223)   Receiving objects:  72% (161/223)   Receiving objects:  73% (163/223)   Receiving objects:  74% (166/223)   Receiving objects:  75% (168/223)   Receiving objects:  76% (170/223)   Receiving objects:  77% (172/223)   Receiving objects:  78% (174/223)   Receiving objects:  79% (177/223)   Receiving objects:  80% (179/223)   Receiving objects:  81% (181/223)   Receiving objects:  82% (183/223)   Receiving objects:  83% (186/223)   Receiving objects:  84% (188/223)   Receiving objects:  85% (190/223)   Receiving objects:  86% (192/223)   Receiving objects:  87% (195/223)   Receiving objects:  88% (197/223)   Receiving objects:  89% (199/223)   Receiving objects:  90% (201/223)   Receiving objects:  91% (203/223)   Receiving objects:  92% (206/223)   Receiving objects:  93% (208/223)   Receiving objects:  94% (210/223)   Receiving objects:  95% (212/223)   Receiving objects:  96% (215/223)   Receiving objects:  97% (217/223)   Receiving objects:  98% (219/223)   Receiving objects:  99% (221/223)   Receiving objects: 100% (223/223)   Receiving objects: 100% (223/223), 284.32 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/128)   Resolving deltas:   1% (2/128)   Resolving deltas:   7% (10/128)   Resolving deltas:  10% (14/128)   Resolving deltas:  16% (21/128)   Resolving deltas:  22% (29/128)   Resolving deltas:  34% (44/128)   Resolving deltas:  40% (52/128)   Resolving deltas:  42% (54/128)   Resolving deltas:  49% (63/128)   Resolving deltas:  55% (71/128)   Resolving deltas:  65% (84/128)   Resolving deltas:  72% (93/128)   Resolving deltas:  87% (112/128)   Resolving deltas:  89% (115/128)   Resolving deltas:  96% (124/128)   Resolving deltas:  97% (125/128)   Resolving deltas: 100% (128/128)   Resolving deltas: 100% (128/128), done.
Submodule path 'src/samblaster': checked out '3fe403f48b801bd19c2152674f76ed18e857b2bc'
Cloning into 'src/svtyper'...
remote: Enumerating objects: 1939, done.[K
Receiving objects:   0% (1/1939)   Receiving objects:   1% (20/1939)   Receiving objects:   2% (39/1939)   Receiving objects:   3% (59/1939)   Receiving objects:   4% (78/1939)   Receiving objects:   5% (97/1939)   Receiving objects:   6% (117/1939)   Receiving objects:   7% (136/1939)   Receiving objects:   8% (156/1939)   Receiving objects:   9% (175/1939)   Receiving objects:  10% (194/1939)   Receiving objects:  11% (214/1939)   Receiving objects:  12% (233/1939)   Receiving objects:  13% (253/1939)   Receiving objects:  14% (272/1939)   Receiving objects:  15% (291/1939)   Receiving objects:  16% (311/1939)   Receiving objects:  17% (330/1939)   Receiving objects:  18% (350/1939)   Receiving objects:  19% (369/1939)   Receiving objects:  20% (388/1939)   Receiving objects:  21% (408/1939)   Receiving objects:  22% (427/1939)   Receiving objects:  23% (446/1939)   Receiving objects:  24% (466/1939)   Receiving objects:  25% (485/1939)   Receiving objects:  26% (505/1939)   Receiving objects:  27% (524/1939)   Receiving objects:  28% (543/1939)   Receiving objects:  29% (563/1939)   Receiving objects:  30% (582/1939)   Receiving objects:  31% (602/1939)   Receiving objects:  32% (621/1939)   Receiving objects:  33% (640/1939)   Receiving objects:  34% (660/1939)   Receiving objects:  35% (679/1939)   Receiving objects:  36% (699/1939)   Receiving objects:  37% (718/1939)   Receiving objects:  38% (737/1939)   Receiving objects:  39% (757/1939)   Receiving objects:  40% (776/1939)   Receiving objects:  41% (795/1939)   Receiving objects:  42% (815/1939)   Receiving objects:  43% (834/1939)   Receiving objects:  44% (854/1939)   Receiving objects:  45% (873/1939)   Receiving objects:  46% (892/1939)   Receiving objects:  47% (912/1939)   Receiving objects:  48% (931/1939)   Receiving objects:  49% (951/1939)   Receiving objects:  50% (970/1939)   Receiving objects:  51% (989/1939)   Receiving objects:  52% (1009/1939)   Receiving objects:  53% (1028/1939)   Receiving objects:  54% (1048/1939)   Receiving objects:  55% (1067/1939)   Receiving objects:  56% (1086/1939)   Receiving objects:  57% (1106/1939)   Receiving objects:  58% (1125/1939)   Receiving objects:  59% (1145/1939)   Receiving objects:  60% (1164/1939)   Receiving objects:  61% (1183/1939)   Receiving objects:  62% (1203/1939)   Receiving objects:  63% (1222/1939)   Receiving objects:  64% (1241/1939)   Receiving objects:  65% (1261/1939)   Receiving objects:  66% (1280/1939)   Receiving objects:  67% (1300/1939)   Receiving objects:  68% (1319/1939)   Receiving objects:  69% (1338/1939)   Receiving objects:  70% (1358/1939)   Receiving objects:  71% (1377/1939)   Receiving objects:  72% (1397/1939)   Receiving objects:  73% (1416/1939)   Receiving objects:  74% (1435/1939)   Receiving objects:  75% (1455/1939)   Receiving objects:  76% (1474/1939)   Receiving objects:  77% (1494/1939)   Receiving objects:  78% (1513/1939)   Receiving objects:  79% (1532/1939)   Receiving objects:  80% (1552/1939)   Receiving objects:  81% (1571/1939)   Receiving objects:  82% (1590/1939)   Receiving objects:  83% (1610/1939)   Receiving objects:  84% (1629/1939)   Receiving objects:  85% (1649/1939)   remote: Total 1939 (delta 0), reused 0 (delta 0), pack-reused 1939[K
Receiving objects:  86% (1668/1939)   Receiving objects:  87% (1687/1939)   Receiving objects:  88% (1707/1939)   Receiving objects:  89% (1726/1939)   Receiving objects:  90% (1746/1939)   Receiving objects:  91% (1765/1939)   Receiving objects:  92% (1784/1939)   Receiving objects:  93% (1804/1939)   Receiving objects:  94% (1823/1939)   Receiving objects:  95% (1843/1939)   Receiving objects:  96% (1862/1939)   Receiving objects:  97% (1881/1939)   Receiving objects:  98% (1901/1939)   Receiving objects:  99% (1920/1939)   Receiving objects: 100% (1939/1939)   Receiving objects: 100% (1939/1939), 2.25 MiB | 0 bytes/s, done.
Resolving deltas:   0% (0/1198)   Resolving deltas:   2% (25/1198)   Resolving deltas:   4% (52/1198)   Resolving deltas:   5% (68/1198)   Resolving deltas:   7% (85/1198)   Resolving deltas:   8% (98/1198)   Resolving deltas:  11% (133/1198)   Resolving deltas:  13% (160/1198)   Resolving deltas:  14% (172/1198)   Resolving deltas:  15% (182/1198)   Resolving deltas:  16% (201/1198)   Resolving deltas:  17% (205/1198)   Resolving deltas:  18% (221/1198)   Resolving deltas:  22% (274/1198)   Resolving deltas:  23% (277/1198)   Resolving deltas:  24% (288/1198)   Resolving deltas:  26% (321/1198)   Resolving deltas:  27% (330/1198)   Resolving deltas:  29% (350/1198)   Resolving deltas:  30% (362/1198)   Resolving deltas:  39% (475/1198)   Resolving deltas:  43% (518/1198)   Resolving deltas:  45% (544/1198)   Resolving deltas:  51% (622/1198)   Resolving deltas:  53% (635/1198)   Resolving deltas:  62% (750/1198)   Resolving deltas:  66% (801/1198)   Resolving deltas:  67% (803/1198)   Resolving deltas:  68% (822/1198)   Resolving deltas:  69% (833/1198)   Resolving deltas:  71% (851/1198)   Resolving deltas:  74% (891/1198)   Resolving deltas:  75% (909/1198)   Resolving deltas:  77% (927/1198)   Resolving deltas:  78% (936/1198)   Resolving deltas:  84% (1012/1198)   Resolving deltas:  98% (1183/1198)   Resolving deltas: 100% (1198/1198)   Resolving deltas: 100% (1198/1198), done.
Submodule path 'src/svtyper': checked out '635b8f6e8b17345a1905963877b597110c6906e7'
Cloning into 'src/tabix'...
remote: Enumerating objects: 391, done.[K
Receiving objects:   0% (1/391)   Receiving objects:   1% (4/391)   Receiving objects:   2% (8/391)   Receiving objects:   3% (12/391)   Receiving objects:   4% (16/391)   Receiving objects:   5% (20/391)   Receiving objects:   6% (24/391)   Receiving objects:   7% (28/391)   Receiving objects:   8% (32/391)   Receiving objects:   9% (36/391)   Receiving objects:  10% (40/391)   Receiving objects:  11% (44/391)   Receiving objects:  12% (47/391)   Receiving objects:  13% (51/391)   Receiving objects:  14% (55/391)   Receiving objects:  15% (59/391)   Receiving objects:  16% (63/391)   Receiving objects:  17% (67/391)   Receiving objects:  18% (71/391)   Receiving objects:  19% (75/391)   Receiving objects:  20% (79/391)   Receiving objects:  21% (83/391)   Receiving objects:  22% (87/391)   Receiving objects:  23% (90/391)   Receiving objects:  24% (94/391)   Receiving objects:  25% (98/391)   Receiving objects:  26% (102/391)   Receiving objects:  27% (106/391)   Receiving objects:  28% (110/391)   Receiving objects:  29% (114/391)   Receiving objects:  30% (118/391)   Receiving objects:  31% (122/391)   Receiving objects:  32% (126/391)   remote: Total 391 (delta 0), reused 0 (delta 0), pack-reused 391[K
Receiving objects:  33% (130/391)   Receiving objects:  34% (133/391)   Receiving objects:  35% (137/391)   Receiving objects:  36% (141/391)   Receiving objects:  37% (145/391)   Receiving objects:  38% (149/391)   Receiving objects:  39% (153/391)   Receiving objects:  40% (157/391)   Receiving objects:  41% (161/391)   Receiving objects:  42% (165/391)   Receiving objects:  43% (169/391)   Receiving objects:  44% (173/391)   Receiving objects:  45% (176/391)   Receiving objects:  46% (180/391)   Receiving objects:  47% (184/391)   Receiving objects:  48% (188/391)   Receiving objects:  49% (192/391)   Receiving objects:  50% (196/391)   Receiving objects:  51% (200/391)   Receiving objects:  52% (204/391)   Receiving objects:  53% (208/391)   Receiving objects:  54% (212/391)   Receiving objects:  55% (216/391)   Receiving objects:  56% (219/391)   Receiving objects:  57% (223/391)   Receiving objects:  58% (227/391)   Receiving objects:  59% (231/391)   Receiving objects:  60% (235/391)   Receiving objects:  61% (239/391)   Receiving objects:  62% (243/391)   Receiving objects:  63% (247/391)   Receiving objects:  64% (251/391)   Receiving objects:  65% (255/391)   Receiving objects:  66% (259/391)   Receiving objects:  67% (262/391)   Receiving objects:  68% (266/391)   Receiving objects:  69% (270/391)   Receiving objects:  70% (274/391)   Receiving objects:  71% (278/391)   Receiving objects:  72% (282/391)   Receiving objects:  73% (286/391)   Receiving objects:  74% (290/391)   Receiving objects:  75% (294/391)   Receiving objects:  76% (298/391)   Receiving objects:  77% (302/391)   Receiving objects:  78% (305/391)   Receiving objects:  79% (309/391)   Receiving objects:  80% (313/391)   Receiving objects:  81% (317/391)   Receiving objects:  82% (321/391)   Receiving objects:  83% (325/391)   Receiving objects:  84% (329/391)   Receiving objects:  85% (333/391)   Receiving objects:  86% (337/391)   Receiving objects:  87% (341/391)   Receiving objects:  88% (345/391)   Receiving objects:  89% (348/391)   Receiving objects:  90% (352/391)   Receiving objects:  91% (356/391)   Receiving objects:  92% (360/391)   Receiving objects:  93% (364/391)   Receiving objects:  94% (368/391)   Receiving objects:  95% (372/391)   Receiving objects:  96% (376/391)   Receiving objects:  97% (380/391)   Receiving objects:  98% (384/391)   Receiving objects:  99% (388/391)   Receiving objects: 100% (391/391)   Receiving objects: 100% (391/391), 145.37 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/229)   Resolving deltas:   4% (10/229)   Resolving deltas:   7% (17/229)   Resolving deltas:   9% (22/229)   Resolving deltas:  11% (27/229)   Resolving deltas:  17% (40/229)   Resolving deltas:  18% (43/229)   Resolving deltas:  20% (46/229)   Resolving deltas:  24% (57/229)   Resolving deltas:  28% (66/229)   Resolving deltas:  30% (69/229)   Resolving deltas:  31% (73/229)   Resolving deltas:  33% (77/229)   Resolving deltas:  38% (89/229)   Resolving deltas:  45% (105/229)   Resolving deltas:  51% (117/229)   Resolving deltas:  55% (127/229)   Resolving deltas:  56% (130/229)   Resolving deltas:  64% (148/229)   Resolving deltas:  65% (149/229)   Resolving deltas:  70% (161/229)   Resolving deltas:  72% (165/229)   Resolving deltas:  73% (169/229)   Resolving deltas:  74% (170/229)   Resolving deltas:  79% (183/229)   Resolving deltas:  81% (187/229)   Resolving deltas:  83% (191/229)   Resolving deltas:  87% (201/229)   Resolving deltas:  88% (202/229)   Resolving deltas:  94% (217/229)   Resolving deltas:  95% (218/229)   Resolving deltas: 100% (229/229)   Resolving deltas: 100% (229/229), done.
Submodule path 'src/tabix': checked out '1ae158ac79b459f5feeed7490c67519b14ce9f35'
Cloning into 'src/vawk'...
remote: Enumerating objects: 99, done.[K
remote: Total 99 (delta 0), reused 0 (delta 0), pack-reused 99[K
Unpacking objects:   1% (1/99)   Unpacking objects:   2% (2/99)   Unpacking objects:   3% (3/99)   Unpacking objects:   4% (4/99)   Unpacking objects:   5% (5/99)   Unpacking objects:   6% (6/99)   Unpacking objects:   7% (7/99)   Unpacking objects:   8% (8/99)   Unpacking objects:   9% (9/99)   Unpacking objects:  10% (10/99)   Unpacking objects:  11% (11/99)   Unpacking objects:  12% (12/99)   Unpacking objects:  13% (13/99)   Unpacking objects:  14% (14/99)   Unpacking objects:  15% (15/99)   Unpacking objects:  16% (16/99)   Unpacking objects:  17% (17/99)   Unpacking objects:  18% (18/99)   Unpacking objects:  19% (19/99)   Unpacking objects:  20% (20/99)   Unpacking objects:  21% (21/99)   Unpacking objects:  22% (22/99)   Unpacking objects:  23% (23/99)   Unpacking objects:  24% (24/99)   Unpacking objects:  25% (25/99)   Unpacking objects:  26% (26/99)   Unpacking objects:  27% (27/99)   Unpacking objects:  28% (28/99)   Unpacking objects:  29% (29/99)   Unpacking objects:  30% (30/99)   Unpacking objects:  31% (31/99)   Unpacking objects:  32% (32/99)   Unpacking objects:  33% (33/99)   Unpacking objects:  34% (34/99)   Unpacking objects:  35% (35/99)   Unpacking objects:  36% (36/99)   Unpacking objects:  37% (37/99)   Unpacking objects:  38% (38/99)   Unpacking objects:  39% (39/99)   Unpacking objects:  40% (40/99)   Unpacking objects:  41% (41/99)   Unpacking objects:  42% (42/99)   Unpacking objects:  43% (43/99)   Unpacking objects:  44% (44/99)   Unpacking objects:  45% (45/99)   Unpacking objects:  46% (46/99)   Unpacking objects:  47% (47/99)   Unpacking objects:  48% (48/99)   Unpacking objects:  49% (49/99)   Unpacking objects:  50% (50/99)   Unpacking objects:  51% (51/99)   Unpacking objects:  52% (52/99)   Unpacking objects:  53% (53/99)   Unpacking objects:  54% (54/99)   Unpacking objects:  55% (55/99)   Unpacking objects:  56% (56/99)   Unpacking objects:  57% (57/99)   Unpacking objects:  58% (58/99)   Unpacking objects:  59% (59/99)   Unpacking objects:  60% (60/99)   Unpacking objects:  61% (61/99)   Unpacking objects:  62% (62/99)   Unpacking objects:  63% (63/99)   Unpacking objects:  64% (64/99)   Unpacking objects:  65% (65/99)   Unpacking objects:  66% (66/99)   Unpacking objects:  67% (67/99)   Unpacking objects:  68% (68/99)   Unpacking objects:  69% (69/99)   Unpacking objects:  70% (70/99)   Unpacking objects:  71% (71/99)   Unpacking objects:  72% (72/99)   Unpacking objects:  73% (73/99)   Unpacking objects:  74% (74/99)   Unpacking objects:  75% (75/99)   Unpacking objects:  76% (76/99)   Unpacking objects:  77% (77/99)   Unpacking objects:  78% (78/99)   Unpacking objects:  79% (79/99)   Unpacking objects:  80% (80/99)   Unpacking objects:  81% (81/99)   Unpacking objects:  82% (82/99)   Unpacking objects:  83% (83/99)   Unpacking objects:  84% (84/99)   Unpacking objects:  85% (85/99)   Unpacking objects:  86% (86/99)   Unpacking objects:  87% (87/99)   Unpacking objects:  88% (88/99)   Unpacking objects:  89% (89/99)   Unpacking objects:  90% (90/99)   Unpacking objects:  91% (91/99)   Unpacking objects:  92% (92/99)   Unpacking objects:  93% (93/99)   Unpacking objects:  94% (94/99)   Unpacking objects:  95% (95/99)   Unpacking objects:  96% (96/99)   Unpacking objects:  97% (97/99)   Unpacking objects:  98% (98/99)   Unpacking objects: 100% (99/99)   Unpacking objects: 100% (99/99), done.
Submodule path 'src/vawk': checked out '10b8cf0916edadd57f80d5e99e32bf7534523af3'
]0;amv69@login0b:~(base) [amv69@login0b ~]$ cd speedseq/
]0;amv69@login0b:~/speedseq(base) [amv69@login0b speedseq]$ make
make align
make[1]: Entering directory `/ihome/ckaplan/amv69/speedseq'
make -C src/bwa
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/bwa'
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  utils.c -o utils.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  kthread.c -o kthread.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  kstring.c -o kstring.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  ksw.c -o ksw.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwt.c -o bwt.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bntseq.c -o bntseq.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwa.c -o bwa.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwamem.c -o bwamem.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwamem_pair.c -o bwamem_pair.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwamem_extra.c -o bwamem_extra.o
[01m[Kbwamem_extra.c:[m[K In function â€˜[01m[Ksmem_next[m[Kâ€™:
[01m[Kbwamem_extra.c:49:14:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kmax_i[m[Kâ€™ set but not used [-Wunused-but-set-variable]
  int i, max, max_i, ori_start;
[01;32m[K              ^[m[K
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  malloc_wrap.c -o malloc_wrap.o
ar -csru libbwa.a utils.o kthread.o kstring.o ksw.o bwt.o bntseq.o bwa.o bwamem.o bwamem_pair.o bwamem_extra.o malloc_wrap.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  QSufSort.c -o QSufSort.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwt_gen.c -o bwt_gen.o
[01m[Kbwt_gen.c:[m[K In function â€˜[01m[KBWTIncBuildRelativeRank[m[Kâ€™:
[01m[Kbwt_gen.c:878:10:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[KoldInverseSa0RelativeRank[m[Kâ€™ set but not used [-Wunused-but-set-variable]
  bgint_t oldInverseSa0RelativeRank = 0;
[01;32m[K          ^[m[K
[01m[Kbwt_gen.c:[m[K In function â€˜[01m[KBWTIncMergeBwt[m[Kâ€™:
[01m[Kbwt_gen.c:952:15:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[KbitsInWordMinusBitPerChar[m[Kâ€™ set but not used [-Wunused-but-set-variable]
  unsigned int bitsInWordMinusBitPerChar;
[01;32m[K               ^[m[K
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwase.c -o bwase.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwaseqio.c -o bwaseqio.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtgap.c -o bwtgap.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtaln.c -o bwtaln.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bamlite.c -o bamlite.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  is.c -o is.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtindex.c -o bwtindex.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwape.c -o bwape.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  kopen.c -o kopen.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  pemerge.c -o pemerge.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtsw2_core.c -o bwtsw2_core.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtsw2_main.c -o bwtsw2_main.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtsw2_aux.c -o bwtsw2_aux.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwt_lite.c -o bwt_lite.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtsw2_chain.c -o bwtsw2_chain.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  fastmap.c -o fastmap.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  bwtsw2_pair.c -o bwtsw2_pair.o
gcc -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS  main.c -o main.o
gcc -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS QSufSort.o bwt_gen.o bwase.o bwaseqio.o bwtgap.o bwtaln.o bamlite.o is.o bwtindex.o bwape.o kopen.o pemerge.o bwtsw2_core.o bwtsw2_main.o bwtsw2_aux.o bwt_lite.o bwtsw2_chain.o fastmap.o bwtsw2_pair.o main.o -o bwa -L. -lbwa -lm -lz -lpthread
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/bwa'
cp src/bwa/bwa bin
cp src/sambamba bin
make -C src/samblaster
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/samblaster'
g++ -Wall -O3 -D BUILDNUM=22 -c samblaster.cpp -o samblaster.o
g++ -Wall -O3 -D BUILDNUM=22 -c sbhash.cpp -o sbhash.o
g++  -o samblaster samblaster.o sbhash.o
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/samblaster'
cp src/samblaster/samblaster bin
cd src/parallel; ./configure --prefix=/ihome/ckaplan/amv69/speedseq
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating config.h
make -C src/parallel
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /ihome/ckaplan/amv69/speedseq/src/parallel/missing --run aclocal-1.11 
/ihome/ckaplan/amv69/speedseq/src/parallel/missing: line 52: aclocal-1.11: command not found
WARNING: `aclocal-1.11' is missing on your system.  You should only need it if
         you modified `acinclude.m4' or `configure.ac'.  You might want
         to install the `Automake' and `Perl' packages.  Grab them from
         any GNU archive site.
 cd . && /bin/sh /ihome/ckaplan/amv69/speedseq/src/parallel/missing --run automake-1.11 --foreign
/ihome/ckaplan/amv69/speedseq/src/parallel/missing: line 52: automake-1.11: command not found
WARNING: `automake-1.11' is missing on your system.  You should only need it if
         you modified `Makefile.am', `acinclude.m4' or `configure.ac'.
         You might want to install the `Automake' and `Perl' packages.
         Grab them from any GNU archive site.
CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /ihome/ckaplan/amv69/speedseq/src/parallel/missing --run autoconf
aclocal.m4:17: warning: this file was generated for autoconf 2.68.
You have another version of autoconf.  It may work, but is not guaranteed to.
If you have problems, you may need to regenerate the build system entirely.
To do so, use the procedure documented by the package, typically `autoreconf'.
/bin/sh ./config.status --recheck
running CONFIG_SHELL=/bin/sh /bin/sh ./configure --prefix=/ihome/ckaplan/amv69/speedseq --no-create --no-recursion
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
configure: creating ./config.status
 /bin/sh ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating config.h
config.status: config.h is unchanged
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
(CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /ihome/ckaplan/amv69/speedseq/src/parallel/missing --run autoheader)
rm -f stamp-h1
touch config.h.in
cd . && /bin/sh ./config.status config.h
config.status: creating config.h
config.status: config.h is unchanged
make  all-recursive
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
Making all in src
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel/src'
pod2man --release='20131022' --center='parallel' \
	--section=1 ./parallel.pod > ./parallel.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./sem.pod > ./sem.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./sql > ./sql.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./niceload.pod > ./niceload.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./parallel_tutorial.pod > ./parallel_tutorial.1
pod2html ./parallel.pod > ./parallel.html
rm -f ./pod2htm*
pod2html ./parallel_tutorial.pod > ./parallel_tutorial.html
rm -f ./pod2htm*
pod2html ./sem.pod > ./sem.html
rm -f ./pod2htm*
pod2html ./sql > ./sql.html
rm -f ./pod2htm*
pod2html ./niceload.pod > ./niceload.html
rm -f ./pod2htm*
pod2texi --output=./parallel_tutorial.texi ./parallel_tutorial.pod || true
pod2pdf --output-file ./parallel.pdf ./parallel.pod --title "GNU Parallel" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./sem.pdf ./sem.pod --title "GNU sem" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./niceload.pdf ./niceload.pod --title "GNU niceload" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./parallel_tutorial.pdf ./parallel_tutorial.pod --title "GNU Parallel Tutorial" || true
/bin/sh: pod2pdf: command not found
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel/src'
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
cp src/parallel/src/parallel bin
which: no samtools in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
make[1]: Leaving directory `/ihome/ckaplan/amv69/speedseq'
make var
make[1]: Entering directory `/ihome/ckaplan/amv69/speedseq'
make -C src/freebayes
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes'
cd src && make autoversion
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/src'
DETECTED_VERSION = v0.9.21
CURRENT_VERSION  = 
Updating version file.
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/src'
touch src/version_git.h
wget -q http://hypervolu.me/freebayes/build/v0.9.21 &
cd src && make
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/src'
DETECTED_VERSION = v0.9.21
CURRENT_VERSION  = v0.9.21
cd ../bamtools && mkdir -p build && cd build && cmake .. && make
-- The C compiler identification is GNU 4.8.5
-- The CXX compiler identification is GNU 4.8.5
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Configuring done
-- Generating done
-- Build files have been written to: /ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[5]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target SharedHeaders
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  1%] [34m[1mExporting SharedHeaders
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  1%] Built target SharedHeaders
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target APIHeaders
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  2%] [34m[1mExporting APIHeaders
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  2%] Built target APIHeaders
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target AlgorithmsHeaders
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  3%] [34m[1mExporting AlgorithmsHeaders
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  3%] Built target AlgorithmsHeaders
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target BamTools
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[  4%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/BamAlignment.cpp.o
[0m[  5%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/BamMultiReader.cpp.o
[0m[  6%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/BamReader.cpp.o
[0m[  7%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/BamWriter.cpp.o
[0m[  8%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamHeader.cpp.o
[0m[  9%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamProgram.cpp.o
[0m[ 10%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamProgramChain.cpp.o
[0m[ 11%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamReadGroup.cpp.o
[0m[ 12%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamReadGroupDictionary.cpp.o
[0m[ 13%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamSequence.cpp.o
[0m[ 14%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/SamSequenceDictionary.cpp.o
[0m[ 15%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/bam/BamHeader_p.cpp.o
[0m[ 16%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/bam/BamMultiReader_p.cpp.o
[0m[ 17%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/bam/BamRandomAccessController_p.cpp.o
[0m[ 18%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/bam/BamReader_p.cpp.o
[0m[ 19%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/bam/BamWriter_p.cpp.o
[0m[ 20%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/index/BamIndexFactory_p.cpp.o
[0m[ 21%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/index/BamStandardIndex_p.cpp.o
[0m[ 22%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/index/BamToolsIndex_p.cpp.o
[0m[ 23%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/BamDeviceFactory_p.cpp.o
[0m[ 24%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/BamFile_p.cpp.o
[0m[ 25%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/BamFtp_p.cpp.o
[0m[ 26%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/BamHttp_p.cpp.o
[0m[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:[m[K In member function â€˜[01m[Kbool BamTools::Internal::BamHttp::SendGetRequest(size_t)[m[Kâ€™:
[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:409:62:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if ( WriteToSocket(requestHeader.c_str(), headerSize) != headerSize ) {
[01;32m[K                                                              ^[m[K
[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:[m[K In member function â€˜[01m[Kbool BamTools::Internal::BamHttp::SendHeadRequest()[m[Kâ€™:
[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:501:62:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if ( WriteToSocket(requestHeader.c_str(), headerSize) != headerSize ) {
[01;32m[K                                                              ^[m[K
[ 27%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/BamPipe_p.cpp.o
[0m[ 28%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/BgzfStream_p.cpp.o
[0m[ 29%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/ByteArray_p.cpp.o
[0m[ 30%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/HostAddress_p.cpp.o
[0m[ 31%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/HostInfo_p.cpp.o
[0m[ 32%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/HttpHeader_p.cpp.o
[0m[ 33%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/ILocalIODevice_p.cpp.o
[0m[ 34%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/RollingBuffer_p.cpp.o
[0m[ 35%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/TcpSocket_p.cpp.o
[0m[ 36%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/TcpSocketEngine_p.cpp.o
[0m[ 37%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/io/TcpSocketEngine_unix_p.cpp.o
[0m[ 38%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/sam/SamFormatParser_p.cpp.o
[0m[ 39%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/sam/SamFormatPrinter_p.cpp.o
[0m[ 40%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/sam/SamHeaderValidator_p.cpp.o
[0m[ 41%] [32mBuilding CXX object src/api/CMakeFiles/BamTools.dir/internal/utils/BamException_p.cpp.o
[0m[31m[1mLinking CXX shared library ../../../lib/libbamtools.so
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 41%] Built target BamTools
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target BamTools-static
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 42%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/BamAlignment.cpp.o
[0m[ 43%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/BamMultiReader.cpp.o
[0m[ 44%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/BamReader.cpp.o
[0m[ 45%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/BamWriter.cpp.o
[0m[ 46%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamHeader.cpp.o
[0m[ 47%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamProgram.cpp.o
[0m[ 48%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamProgramChain.cpp.o
[0m[ 49%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamReadGroup.cpp.o
[0m[ 50%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamReadGroupDictionary.cpp.o
[0m[ 51%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamSequence.cpp.o
[0m[ 52%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/SamSequenceDictionary.cpp.o
[0m[ 53%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/bam/BamHeader_p.cpp.o
[0m[ 54%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/bam/BamMultiReader_p.cpp.o
[0m[ 55%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/bam/BamRandomAccessController_p.cpp.o
[0m[ 56%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/bam/BamReader_p.cpp.o
[0m[ 57%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/bam/BamWriter_p.cpp.o
[0m[ 58%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/index/BamIndexFactory_p.cpp.o
[0m[ 59%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/index/BamStandardIndex_p.cpp.o
[0m[ 60%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/index/BamToolsIndex_p.cpp.o
[0m[ 61%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/BamDeviceFactory_p.cpp.o
[0m[ 62%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/BamFile_p.cpp.o
[0m[ 63%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/BamFtp_p.cpp.o
[0m[ 64%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/BamHttp_p.cpp.o
[0m[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:[m[K In member function â€˜[01m[Kbool BamTools::Internal::BamHttp::SendGetRequest(size_t)[m[Kâ€™:
[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:409:62:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if ( WriteToSocket(requestHeader.c_str(), headerSize) != headerSize ) {
[01;32m[K                                                              ^[m[K
[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:[m[K In member function â€˜[01m[Kbool BamTools::Internal::BamHttp::SendHeadRequest()[m[Kâ€™:
[01m[K/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/src/api/internal/io/BamHttp_p.cpp:501:62:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if ( WriteToSocket(requestHeader.c_str(), headerSize) != headerSize ) {
[01;32m[K                                                              ^[m[K
[ 65%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/BamPipe_p.cpp.o
[0m[ 66%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/BgzfStream_p.cpp.o
[0m[ 67%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/ByteArray_p.cpp.o
[0m[ 68%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/HostAddress_p.cpp.o
[0m[ 69%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/HostInfo_p.cpp.o
[0m[ 70%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/HttpHeader_p.cpp.o
[0m[ 71%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/ILocalIODevice_p.cpp.o
[0m[ 72%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/RollingBuffer_p.cpp.o
[0m[ 73%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/TcpSocket_p.cpp.o
[0m[ 74%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/TcpSocketEngine_p.cpp.o
[0m[ 75%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/io/TcpSocketEngine_unix_p.cpp.o
[0m[ 76%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/sam/SamFormatParser_p.cpp.o
[0m[ 77%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/sam/SamFormatPrinter_p.cpp.o
[0m[ 78%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/sam/SamHeaderValidator_p.cpp.o
[0m[ 79%] [32mBuilding CXX object src/api/CMakeFiles/BamTools-static.dir/internal/utils/BamException_p.cpp.o
[0m[31m[1mLinking CXX static library ../../../lib/libbamtools.a
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 79%] Built target BamTools-static
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target jsoncpp
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 80%] [32mBuilding CXX object src/third_party/jsoncpp/CMakeFiles/jsoncpp.dir/json_reader.cpp.o
[0m[ 81%] [32mBuilding CXX object src/third_party/jsoncpp/CMakeFiles/jsoncpp.dir/json_value.cpp.o
[0m[ 82%] [32mBuilding CXX object src/third_party/jsoncpp/CMakeFiles/jsoncpp.dir/json_writer.cpp.o
[0m[31m[1mLinking CXX static library ../../../../lib/libjsoncpp.a
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 82%] Built target jsoncpp
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target BamTools-utils
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 83%] [32mBuilding CXX object src/utils/CMakeFiles/BamTools-utils.dir/bamtools_fasta.cpp.o
[0m[ 84%] [32mBuilding CXX object src/utils/CMakeFiles/BamTools-utils.dir/bamtools_options.cpp.o
[0m[ 85%] [32mBuilding CXX object src/utils/CMakeFiles/BamTools-utils.dir/bamtools_pileup_engine.cpp.o
[0m[ 86%] [32mBuilding CXX object src/utils/CMakeFiles/BamTools-utils.dir/bamtools_utilities.cpp.o
[0m[31m[1mLinking CXX static library ../../../lib/libbamtools-utils.a
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 86%] Built target BamTools-utils
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[35m[1mScanning dependencies of target bamtools_cmd
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[6]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[ 87%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_convert.cpp.o
[0m[ 88%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_count.cpp.o
[0m[ 89%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_coverage.cpp.o
[0m[ 90%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_filter.cpp.o
[0m[ 91%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_header.cpp.o
[0m[ 92%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_index.cpp.o
[0m[ 93%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_merge.cpp.o
[0m[ 94%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_random.cpp.o
[0m[ 95%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_resolve.cpp.o
[0m[ 96%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_revert.cpp.o
[0m[ 97%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_sort.cpp.o
[0m[ 98%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_split.cpp.o
[0m[ 99%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools_stats.cpp.o
[0m[100%] [32mBuilding CXX object src/toolkit/CMakeFiles/bamtools_cmd.dir/bamtools.cpp.o
[0m[31m[1mLinking CXX executable ../../../bin/bamtools
[0mmake[6]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
[100%] Built target bamtools_cmd
make[5]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/bamtools/build'
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c freebayes.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c BedReader.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c CNV.cpp
gcc -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c fastlz.c	
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Fasta.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Parameters.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Allele.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Sample.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Result.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c AlleleParser.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Utility.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Genotype.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c DataLikelihood.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Multinomial.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Ewens.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c ResultData.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Dirichlet.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Marginals.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c split.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c LeftAlign.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c IndelAllele.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c Bias.cpp
g++    -c -o Contamination.o Contamination.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c SegfaultHandler.cpp
g++    -c -o ../vcflib/tabixpp/tabix.o ../vcflib/tabixpp/tabix.cpp
cd ../vcflib/tabixpp && make
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/vcflib/tabixpp'
make[5]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/vcflib/tabixpp'
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  bgzf.c -o bgzf.o
[01m[Kbgzf.c:[m[K In function â€˜[01m[Kbgzf_close[m[Kâ€™:
[01m[Kbgzf.c:630:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcount[m[Kâ€™ set but not used [-Wunused-but-set-variable]
    int count, block_length = deflate_block(fp, 0);
[01;32m[K        ^[m[K
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  kstring.c -o kstring.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  knetfile.c -o knetfile.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  index.c -o index.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  bedidx.c -o bedidx.o
ar -cru libtabix.a bgzf.o kstring.o knetfile.o index.o bedidx.o
ranlib libtabix.a
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  main.c -o main.o
gcc -g -Wall -O2 -fPIC  -o tabix main.o -lm  -L. -ltabix -lz
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE  bgzip.c -o bgzip.o
gcc -g -Wall -O2 -fPIC  -o bgzip bgzip.o bgzf.o knetfile.o -lz
g++ -g -Wall -O2 -fPIC  -o tabix++ main.cpp tabix.o bgzf.o -lm  -L. -ltabix -lz
make[5]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/vcflib/tabixpp'
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/vcflib/tabixpp'
cd ../vcflib/smithwaterman && make
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/vcflib/smithwaterman'
g++    -c -o smithwaterman.o smithwaterman.cpp
g++    -c -o BandedSmithWaterman.o BandedSmithWaterman.cpp
g++    -c -o SmithWatermanGotoh.o SmithWatermanGotoh.cpp
g++    -c -o Repeats.o Repeats.cpp
g++    -c -o LeftAlign.o LeftAlign.cpp
g++    -c -o IndelAllele.o IndelAllele.cpp
g++ -c -o disorder.o disorder.c
  * linking smithwaterman
ld -r disorder.o BandedSmithWaterman.o SmithWatermanGotoh.o Repeats.o LeftAlign.o IndelAllele.o -o sw.o
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/vcflib/smithwaterman'
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c ../vcflib/src/Variant.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ freebayes.o BedReader.o CNV.o fastlz.o Fasta.o Parameters.o Allele.o Sample.o Result.o AlleleParser.o Utility.o Genotype.o DataLikelihood.o Multinomial.o Ewens.o ResultData.o Dirichlet.o Marginals.o split.o LeftAlign.o IndelAllele.o Bias.o Contamination.o SegfaultHandler.o ../vcflib/tabixpp/tabix.o ../vcflib/tabixpp/bgzf.o ../vcflib/smithwaterman/SmithWatermanGotoh.o ../vcflib/smithwaterman/disorder.c ../vcflib/smithwaterman/LeftAlign.o ../vcflib/smithwaterman/Repeats.o ../vcflib/smithwaterman/IndelAllele.o Variant.o ../bamtools/lib/libbamtools.a -o ../bin/freebayes -L./ -L../vcflib/tabixpp/ -L../bamtools/lib -ltabix -lz -lm
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ -c bamleftalign.cpp
g++ -O3 -D_FILE_OFFSET_BITS=64 -g -I../bamtools/src -I../ttmath -I../vcflib/src -I../vcflib/ bamleftalign.o Fasta.o LeftAlign.o IndelAllele.o split.o ../bamtools/lib/libbamtools.a -o ../bin/bamleftalign -L./ -L../vcflib/tabixpp/ -L../bamtools/lib -ltabix -lz -lm
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes/src'
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/freebayes'
cp src/freebayes/bin/freebayes bin
make -C src/tabix
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  bgzf.c -o bgzf.o
[01m[Kbgzf.c:[m[K In function â€˜[01m[Kbgzf_close[m[Kâ€™:
[01m[Kbgzf.c:435:11:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcount[m[Kâ€™ set but not used [-Wunused-but-set-variable]
  int ret, count, block_length;
[01;32m[K           ^[m[K
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  kstring.c -o kstring.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  knetfile.c -o knetfile.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  index.c -o index.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  bedidx.c -o bedidx.o
ar -csru libtabix.a bgzf.o kstring.o knetfile.o index.o bedidx.o
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  main.c -o main.o
gcc -g -Wall -O2 -fPIC  -o tabix main.o -L. -ltabix -lm  -lz
gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -DBGZF_CACHE  bgzip.c -o bgzip.o
gcc -g -Wall -O2 -fPIC  -o bgzip bgzip.o bgzf.o knetfile.o -lz
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
cp src/tabix/tabix bin
cp src/tabix/bgzip bin
cp src/vawk/vawk bin
cd src/parallel; ./configure --prefix=/ihome/ckaplan/amv69/speedseq
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating config.h
config.status: config.h is unchanged
make -C src/parallel
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make  all-recursive
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
Making all in src
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel/src'
pod2man --release='20131022' --center='parallel' \
	--section=1 ./parallel.pod > ./parallel.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./sem.pod > ./sem.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./sql > ./sql.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./niceload.pod > ./niceload.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./parallel_tutorial.pod > ./parallel_tutorial.1
pod2html ./parallel.pod > ./parallel.html
rm -f ./pod2htm*
pod2html ./parallel_tutorial.pod > ./parallel_tutorial.html
rm -f ./pod2htm*
pod2html ./sem.pod > ./sem.html
rm -f ./pod2htm*
pod2html ./sql > ./sql.html
rm -f ./pod2htm*
pod2html ./niceload.pod > ./niceload.html
rm -f ./pod2htm*
pod2pdf --output-file ./parallel.pdf ./parallel.pod --title "GNU Parallel" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./sem.pdf ./sem.pod --title "GNU sem" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./niceload.pdf ./niceload.pod --title "GNU niceload" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./parallel_tutorial.pdf ./parallel_tutorial.pod --title "GNU Parallel Tutorial" || true
/bin/sh: pod2pdf: command not found
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel/src'
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
cp src/parallel/src/parallel bin
which: no samtools in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
make[1]: Leaving directory `/ihome/ckaplan/amv69/speedseq'
make sv
make[1]: Entering directory `/ihome/ckaplan/amv69/speedseq'
make -C src/lumpy-sv
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/lumpy-sv'
[ -d bin ] || mkdir -p bin
cp scripts/lumpyexpress bin/lumpyexpress
> bin/lumpyexpress.config
which: no samblaster in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
which: no sambamba in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
which: no samtools in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
[ -d obj ] || mkdir -p obj
[ -d bin ] || mkdir -p bin
Building lumpy:
=========================================================
 * Creating BamTools API
- Building in src/utils/bedFile
  * compiling bedFile.cpp

- Building in src/utils/version
  * compiling version.cpp

- Building in src/utils/gzstream
g++ -Wall -O2 -D_FILE_OFFSET_BITS=64 -fPIC  -c -o ../../../obj//gzstream.o gzstream.C -I.

- Building in src/utils/fileType
  * compiling fileType.cpp

- Building in src/utils/bedFilePE
  * compiling bedFilePE.cpp

- Building in src/utils/genomeFile
  * compiling genomeFile.cpp
[01m[KgenomeFile.cpp:[m[K In member function â€˜[01m[Kvoid GenomeFile::loadGenomeFileIntoMap()[m[Kâ€™:
[01m[KgenomeFile.cpp:61:26:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kc2[m[Kâ€™ set but not used [-Wunused-but-set-variable]
                     long c2;
[01;32m[K                          ^[m[K

- Building in src/utils/BamTools
 * compiling BamAlignment.cpp
 * compiling BamMultiReader.cpp
 * compiling BamReader.cpp
 * compiling BamWriter.cpp
 * compiling SamHeader.cpp
 * compiling SamProgram.cpp
 * compiling SamProgramChain.cpp
 * compiling SamReadGroup.cpp
 * compiling SamReadGroupDictionary.cpp
 * compiling SamSequence.cpp
 * compiling SamSequenceDictionary.cpp
 * compiling BamHeader_p.cpp
 * compiling BamMultiReader_p.cpp
 * compiling BamRandomAccessController_p.cpp
 * compiling BamReader_p.cpp
 * compiling BamWriter_p.cpp
 * compiling BamIndexFactory_p.cpp
 * compiling BamStandardIndex_p.cpp
[01m[Ksrc/api/internal/index/BamStandardIndex_p.cpp:[m[K In member function â€˜[01m[Kvoid BamTools::Internal::BamStandardIndex::WriteLinearOffsets(const int&, BamTools::Internal::BaiLinearOffsetVector&)[m[Kâ€™:
[01m[Ksrc/api/internal/index/BamStandardIndex_p.cpp:958:89:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if ( numBytesWritten != (sizeof(offsetCount) + linearOffsets.size()*sizeof(uint64_t)) )
[01;32m[K                                                                                         ^[m[K
 * compiling BamToolsIndex_p.cpp
 * compiling BamDeviceFactory_p.cpp
 * compiling BamFile_p.cpp
 * compiling BamFtp_p.cpp
 * compiling BamHttp_p.cpp
[01m[Ksrc/api/internal/io/BamHttp_p.cpp:[m[K In member function â€˜[01m[Kbool BamTools::Internal::BamHttp::SendRequest(size_t)[m[Kâ€™:
[01m[Ksrc/api/internal/io/BamHttp_p.cpp:396:66:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     return ( WriteToSocket(requestHeader.c_str(), headerSize) == headerSize );
[01;32m[K                                                                  ^[m[K
 * compiling BamPipe_p.cpp
 * compiling BgzfStream_p.cpp
 * compiling ByteArray_p.cpp
 * compiling HostAddress_p.cpp
 * compiling HostInfo_p.cpp
 * compiling HttpHeader_p.cpp
 * compiling ILocalIODevice_p.cpp
 * compiling RollingBuffer_p.cpp
 * compiling TcpSocketEngine_p.cpp
 * compiling TcpSocketEngine_unix_p.cpp
 * compiling TcpSocket_p.cpp
 * compiling SamFormatParser_p.cpp
 * compiling SamFormatPrinter_p.cpp
 * compiling SamHeaderValidator_p.cpp
 * compiling BamException_p.cpp
 * linking lib/libbamtools.a
ar cr lib/libbamtools.a src/api/BamAlignment.o src/api/BamMultiReader.o src/api/BamReader.o src/api/BamWriter.o src/api/SamHeader.o src/api/SamProgram.o src/api/SamProgramChain.o src/api/SamReadGroup.o src/api/SamReadGroupDictionary.o src/api/SamSequence.o src/api/SamSequenceDictionary.o src/api/internal/bam/BamHeader_p.o src/api/internal/bam/BamMultiReader_p.o src/api/internal/bam/BamRandomAccessController_p.o src/api/internal/bam/BamReader_p.o src/api/internal/bam/BamWriter_p.o src/api/internal/index/BamIndexFactory_p.o src/api/internal/index/BamStandardIndex_p.o src/api/internal/index/BamToolsIndex_p.o src/api/internal/io/BamDeviceFactory_p.o src/api/internal/io/BamFile_p.o src/api/internal/io/BamFtp_p.o src/api/internal/io/BamHttp_p.o src/api/internal/io/BamPipe_p.o src/api/internal/io/BgzfStream_p.o src/api/internal/io/ByteArray_p.o src/api/internal/io/HostAddress_p.o src/api/internal/io/HostInfo_p.o src/api/internal/io/HttpHeader_p.o src/api/internal/io/ILocalIODevice_p.o src/api/internal/io/RollingBuffer_p.o src/api/internal/io/TcpSocketEngine_p.o src/api/internal/io/TcpSocketEngine_unix_p.o src/api/internal/io/TcpSocket_p.o src/api/internal/sam/SamFormatParser_p.o src/api/internal/sam/SamFormatPrinter_p.o src/api/internal/sam/SamHeaderValidator_p.o src/api/internal/utils/BamException_p.o
ranlib lib/libbamtools.a

- Building in src/utils/BamTools-Ancillary
  * compiling BamAncillary.cpp
  * compiling BamAncillary.cpp

- Building in src/utils/sequenceUtilities
  * compiling sequenceUtils.cpp

- Building in src/utils/sqlite3
  * compiling sqlite3.c

- Building in src/lumpy
  * compiling lumpy.cpp
  * compiling SV_Pair.cpp
  * compiling SV_Evidence.cpp
[01m[KSV_Evidence.cpp:[m[K In member function â€˜[01m[Kvirtual void SV_Evidence::set_bp_interval_probability(breakpoint_interval*)[m[Kâ€™:
[01m[KSV_Evidence.cpp:81:21:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     for (j = 0; j < size; ++j) {
[01;32m[K                     ^[m[K
  * compiling SV_BreakPoint.cpp
[01m[KSV_BreakPoint.cpp:[m[K In member function â€˜[01m[Kbool SV_BreakPoint::merge(SV_BreakPoint*)[m[Kâ€™:
[01m[KSV_BreakPoint.cpp:266:33:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Ka_overlap_intr[m[Kâ€™ set but not used [-Wunused-but-set-variable]
     struct breakpoint_interval *a_overlap_intr, *b_overlap_intr;
[01;32m[K                                 ^[m[K
[01m[KSV_BreakPoint.cpp:266:50:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kb_overlap_intr[m[Kâ€™ set but not used [-Wunused-but-set-variable]
     struct breakpoint_interval *a_overlap_intr, *b_overlap_intr;
[01;32m[K                                                  ^[m[K
[01m[KSV_BreakPoint.cpp:[m[K In static member function â€˜[01m[Kstatic void SV_BreakPoint::trim_interval(log_space*, unsigned int, int*, int*)[m[Kâ€™:
[01m[KSV_BreakPoint.cpp:704:24:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmax_i[m[Kâ€™ may be used uninitialized in this function [-Wmaybe-uninitialized]
     if ((l == r) && (l == max_i))
[01;32m[K                        ^[m[K
[01m[KSV_BreakPoint.cpp:[m[K In static member function â€˜[01m[Kstatic int SV_BreakPoint::get_product(std::vector<SV_BreakPoint*>&, CHR_POS*, CHR_POS*, CHR_POS*, CHR_POS*, log_space**, log_space**)[m[Kâ€™:
[01m[KSV_BreakPoint.cpp:1662:39:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kr_max_i[m[Kâ€™ may be used uninitialized in this function [-Wmaybe-uninitialized]
         CHR_POS abs_max_r = m_start_r + r_max_i;
[01;32m[K                                       ^[m[K
[01m[KSV_BreakPoint.cpp:1650:39:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kl_max_i[m[Kâ€™ may be used uninitialized in this function [-Wmaybe-uninitialized]
         CHR_POS abs_max_l = m_start_l + l_max_i;
[01;32m[K                                       ^[m[K
  * compiling SV_Bedpe.cpp
  * compiling SV_SplitRead.cpp
[01m[KSV_SplitRead.cpp:[m[K In member function â€˜[01m[Kbool SV_SplitRead::is_sane()[m[Kâ€™:
[01m[KSV_SplitRead.cpp:538:40:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
     if ( min_mapping_quality < reader->min_mapping_threshold )
[01;32m[K                                        ^[m[K
  * compiling SV_SplitReadReader.cpp
  * compiling SV_PairReader.cpp
  * compiling SV_BedpeReader.cpp
  * compiling SV_BamReader.cpp
[01m[KSV_BamReader.cpp:[m[K In member function â€˜[01m[Kvirtual void SV_BamReader::process_input_chr_pos(std::string, CHR_POS, UCSCBins<SV_BreakPoint*>&)[m[Kâ€™:
[01m[KSV_BamReader.cpp:208:30:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
             ( bam.Position < pos ) ) {
[01;32m[K                              ^[m[K
  * compiling SV_InterChromBamReader.cpp
  * compiling SV_EvidenceReader.cpp
  * compiling SV_Tools.cpp
[01m[KSV_Tools.cpp:[m[K In function â€˜[01m[Kint read_distro_file(std::string, double**, int*, int*)[m[Kâ€™:
[01m[KSV_Tools.cpp:156:13:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Klast[m[Kâ€™ may be used uninitialized in this function [-Wmaybe-uninitialized]
  *end = last;
[01;32m[K             ^[m[K
  * compiling SV_VcfVariant.cpp
  * compiling log_space.cpp
  * linking lumpy

make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/lumpy-sv'
cp src/lumpy-sv/scripts/pairend_distro.py bin
cp src/lumpy-sv/bin/lumpy bin
cp src/lumpy-sv/bin/lumpyexpress bin
cp src/lumpy-sv/scripts/vcfToBedpe bin
cp src/sambamba bin
make -C src/samblaster
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/samblaster'
make[2]: Nothing to be done for `SAMBLASTER'.
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/samblaster'
cp src/samblaster/samblaster bin
cp src/vawk/vawk bin
cp src/bamkit/bamtofastq.py bin
cp src/bamkit/bamheadrg.py bin
cp src/bamkit/bamgroupreads.py bin
cp src/bamkit/bamfilterrg.py bin
cp src/bamkit/bamcleanheader.py bin
cp src/bamkit/bamlibs.py bin
make -C src/tabix
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
gcc -g -Wall -O2 -fPIC  -o tabix main.o -L. -ltabix -lm  -lz
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/tabix'
cp src/tabix/tabix bin
cp src/tabix/bgzip bin
cp src/svtyper/svtyper bin
cd src/samtools-1.3.1 && ./configure
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking location of HTSlib source tree... htslib-1.3.1
checking for NcursesW wide-character library... yes
checking for working ncursesw/curses.h... yes
checking for working ncursesw.h... no
checking for working ncurses.h... yes
checking for zlib.h... yes
checking for inflate in -lz... yes
configure: creating ./config.status
config.status: creating config.mk
config.status: creating config.h
=== configuring in htslib-1.3.1 (/ihome/ckaplan/amv69/speedseq/src/samtools-1.3.1/htslib-1.3.1)
configure: running /bin/sh ./configure --disable-option-checking '--prefix=/usr/local'  --cache-file=/dev/null --srcdir=.
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for ranlib... ranlib
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for stdlib.h... (cached) yes
checking for unistd.h... (cached) yes
checking for sys/param.h... yes
checking for getpagesize... yes
checking for working mmap... yes
checking for gmtime_r... yes
checking for zlib.h... yes
checking for inflate in -lz... yes
configure: creating ./config.status
config.status: creating config.mk
config.status: creating config.h
make -C src/samtools-1.3.1
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/samtools-1.3.1'
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_index.o bam_index.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_plcmd.o bam_plcmd.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o sam_view.o sam_view.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_cat.o bam_cat.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_md.o bam_md.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_reheader.o bam_reheader.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_sort.o bam_sort.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bedidx.o bedidx.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o kprobaln.o kprobaln.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_rmdup.o bam_rmdup.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_rmdupse.o bam_rmdupse.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_mate.o bam_mate.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_stat.o bam_stat.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_color.o bam_color.c
echo '#define SAMTOOLS_VERSION "1.3.1"' > version.h
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bamtk.o bamtk.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam2bcf.o bam2bcf.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam2bcf_indel.o bam2bcf_indel.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o errmod.o errmod.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o sample.o sample.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o sam_opts.o sam_opts.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o cut_target.o cut_target.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o phase.o phase.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam2depth.o bam2depth.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o padding.o padding.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bedcov.o bedcov.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bamshuf.o bamshuf.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o faidx.o faidx.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o dict.o dict.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o stats.o stats.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o stats_isize.o stats_isize.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_flags.o bam_flags.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_split.o bam_split.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_tview.o bam_tview.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_tview_curses.o bam_tview_curses.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_tview_html.o bam_tview_html.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_lpileup.o bam_lpileup.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_quickcheck.o bam_quickcheck.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_addrprg.o bam_addrprg.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_aux.o bam_aux.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam.o bam.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_import.o bam_import.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o sam.o sam.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o sam_header.o sam_header.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o bam_plbuf.o bam_plbuf.c
ar -csru libbam.a bam_aux.o bam.o bam_import.o sam.o sam_header.o bam_plbuf.o
cd htslib-1.3.1 && make lib-static
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/samtools-1.3.1/htslib-1.3.1'
gcc -g -O2 -I.  -c -o kfunc.o kfunc.c
gcc -g -O2 -I.  -c -o knetfile.o knetfile.c
gcc -g -O2 -I.  -c -o kstring.o kstring.c
gcc -g -O2 -I.  -c -o bgzf.o bgzf.c
gcc -g -O2 -I.  -c -o faidx.o faidx.c
gcc -g -O2 -I.  -c -o hfile.o hfile.c
gcc -g -O2 -I.  -c -o hfile_net.o hfile_net.c
echo '#define HTS_VERSION "1.3.1"' > version.h
gcc -g -O2 -I.  -c -o hts.o hts.c
gcc -g -O2 -I.  -c -o md5.o md5.c
gcc -g -O2 -I.  -c -o regidx.o regidx.c
gcc -g -O2 -I.  -c -o sam.o sam.c
gcc -g -O2 -I.  -c -o synced_bcf_reader.o synced_bcf_reader.c
gcc -g -O2 -I.  -c -o vcf_sweep.o vcf_sweep.c
gcc -g -O2 -I.  -c -o tbx.o tbx.c
gcc -g -O2 -I.  -c -o vcf.o vcf.c
gcc -g -O2 -I.  -c -o vcfutils.o vcfutils.c
gcc -g -O2 -I.  -c -o cram/cram_codecs.o cram/cram_codecs.c
gcc -g -O2 -I.  -c -o cram/cram_decode.o cram/cram_decode.c
gcc -g -O2 -I.  -c -o cram/cram_encode.o cram/cram_encode.c
gcc -g -O2 -I.  -c -o cram/cram_external.o cram/cram_external.c
gcc -g -O2 -I.  -c -o cram/cram_index.o cram/cram_index.c
gcc -g -O2 -I.  -c -o cram/cram_io.o cram/cram_io.c
gcc -g -O2 -I.  -c -o cram/cram_samtools.o cram/cram_samtools.c
gcc -g -O2 -I.  -c -o cram/cram_stats.o cram/cram_stats.c
gcc -g -O2 -I.  -c -o cram/files.o cram/files.c
gcc -g -O2 -I.  -c -o cram/mFILE.o cram/mFILE.c
gcc -g -O2 -I.  -c -o cram/open_trace_file.o cram/open_trace_file.c
gcc -g -O2 -I.  -c -o cram/pooled_alloc.o cram/pooled_alloc.c
gcc -g -O2 -I.  -c -o cram/rANS_static.o cram/rANS_static.c
gcc -g -O2 -I.  -c -o cram/sam_header.o cram/sam_header.c
gcc -g -O2 -I.  -c -o cram/string_alloc.o cram/string_alloc.c
gcc -g -O2 -I.  -c -o cram/thread_pool.o cram/thread_pool.c
gcc -g -O2 -I.  -c -o cram/vlen.o cram/vlen.c
gcc -g -O2 -I.  -c -o cram/zfio.o cram/zfio.c
ar -rc libhts.a kfunc.o knetfile.o kstring.o bgzf.o faidx.o hfile.o hfile_net.o hts.o md5.o regidx.o sam.o synced_bcf_reader.o vcf_sweep.o tbx.o vcf.o vcfutils.o cram/cram_codecs.o cram/cram_decode.o cram/cram_encode.o cram/cram_external.o cram/cram_index.o cram/cram_io.o cram/cram_samtools.o cram/cram_stats.o cram/files.o cram/mFILE.o cram/open_trace_file.o cram/pooled_alloc.o cram/rANS_static.o cram/sam_header.o cram/string_alloc.o cram/thread_pool.o cram/vlen.o cram/zfio.o 
ranlib libhts.a
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/samtools-1.3.1/htslib-1.3.1'
gcc -pthread -rdynamic   -o samtools bam_index.o bam_plcmd.o sam_view.o bam_cat.o bam_md.o bam_reheader.o bam_sort.o bedidx.o kprobaln.o bam_rmdup.o bam_rmdupse.o bam_mate.o bam_stat.o bam_color.o bamtk.o bam2bcf.o bam2bcf_indel.o errmod.o sample.o sam_opts.o cut_target.o phase.o bam2depth.o padding.o bedcov.o bamshuf.o faidx.o dict.o stats.o stats_isize.o bam_flags.o bam_split.o bam_tview.o bam_tview_curses.o bam_tview_html.o bam_lpileup.o bam_quickcheck.o bam_addrprg.o libbam.a htslib-1.3.1/libhts.a -lncursesw -lm -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o misc/ace2sam.o misc/ace2sam.c
gcc  -o misc/ace2sam misc/ace2sam.o -lz -ldl 
gcc -g -O2 -DMAQ_LONGREADS -I. -Ihtslib-1.3.1  -c -o misc/maq2sam-long.o misc/maq2sam.c
gcc  -o misc/maq2sam-long misc/maq2sam-long.o -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o misc/maq2sam-short.o misc/maq2sam.c
gcc  -o misc/maq2sam-short misc/maq2sam-short.o -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o misc/md5fa.o misc/md5fa.c
gcc -rdynamic   -o misc/md5fa misc/md5fa.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o misc/md5sum-lite.o misc/md5sum-lite.c
gcc -rdynamic   -o misc/md5sum-lite misc/md5sum-lite.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o misc/wgsim.o misc/wgsim.c
gcc  -o misc/wgsim misc/wgsim.o -lm -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/merge/test_bam_translate.o test/merge/test_bam_translate.c
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/test.o test/test.c
gcc -pthread -rdynamic   -o test/merge/test_bam_translate test/merge/test_bam_translate.o test/test.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/merge/test_rtrans_build.o test/merge/test_rtrans_build.c
gcc -pthread -rdynamic   -o test/merge/test_rtrans_build test/merge/test_rtrans_build.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/merge/test_trans_tbl_init.o test/merge/test_trans_tbl_init.c
gcc -pthread -rdynamic   -o test/merge/test_trans_tbl_init test/merge/test_trans_tbl_init.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/split/test_count_rg.o test/split/test_count_rg.c
gcc -pthread -rdynamic   -o test/split/test_count_rg test/split/test_count_rg.o test/test.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/split/test_expand_format_string.o test/split/test_expand_format_string.c
gcc -pthread -rdynamic   -o test/split/test_expand_format_string test/split/test_expand_format_string.o test/test.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/split/test_filter_header_rg.o test/split/test_filter_header_rg.c
gcc -pthread -rdynamic   -o test/split/test_filter_header_rg test/split/test_filter_header_rg.o test/test.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/split/test_parse_args.o test/split/test_parse_args.c
gcc -pthread -rdynamic   -o test/split/test_parse_args test/split/test_parse_args.o test/test.o sam_opts.o htslib-1.3.1/libhts.a -lz -ldl 
gcc -g -O2 -I. -Ihtslib-1.3.1  -c -o test/vcf-miniview.o test/vcf-miniview.c
gcc -pthread -rdynamic   -o test/vcf-miniview test/vcf-miniview.o htslib-1.3.1/libhts.a -lz -ldl 
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/samtools-1.3.1'

WARNING: CNVnator not compiled because the ROOT package is not installed.
Please see the README for instructions on manually installing ROOT.
which: no samtools in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
make[1]: Leaving directory `/ihome/ckaplan/amv69/speedseq'
make realign
make[1]: Entering directory `/ihome/ckaplan/amv69/speedseq'
make -C src/bwa
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/bwa'
make[2]: Nothing to be done for `all'.
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/bwa'
cp src/bwa/bwa bin
cp src/sambamba bin
make -C src/samblaster
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/samblaster'
make[2]: Nothing to be done for `SAMBLASTER'.
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/samblaster'
cp src/samblaster/samblaster bin
cd src/parallel; ./configure --prefix=/ihome/ckaplan/amv69/speedseq
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating config.h
config.status: config.h is unchanged
make -C src/parallel
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make  all-recursive
make[3]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
Making all in src
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel/src'
pod2man --release='20131022' --center='parallel' \
	--section=1 ./parallel.pod > ./parallel.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./sem.pod > ./sem.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./sql > ./sql.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./niceload.pod > ./niceload.1
pod2man --release='20131022' --center='parallel' \
	--section=1 ./parallel_tutorial.pod > ./parallel_tutorial.1
pod2html ./parallel.pod > ./parallel.html
rm -f ./pod2htm*
pod2html ./parallel_tutorial.pod > ./parallel_tutorial.html
rm -f ./pod2htm*
pod2html ./sem.pod > ./sem.html
rm -f ./pod2htm*
pod2html ./sql > ./sql.html
rm -f ./pod2htm*
pod2html ./niceload.pod > ./niceload.html
rm -f ./pod2htm*
pod2pdf --output-file ./parallel.pdf ./parallel.pod --title "GNU Parallel" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./sem.pdf ./sem.pod --title "GNU sem" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./niceload.pdf ./niceload.pod --title "GNU niceload" || true
/bin/sh: pod2pdf: command not found
pod2pdf --output-file ./parallel_tutorial.pdf ./parallel_tutorial.pod --title "GNU Parallel Tutorial" || true
/bin/sh: pod2pdf: command not found
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel/src'
make[4]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[4]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[3]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/parallel'
cp src/parallel/src/parallel bin
cd src/mbuffer; ./configure --prefix=/ihome/ckaplan/amv69/speedseq
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for gcc option to accept ISO C99... -std=gnu99
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc -std=gnu99 accepts -g... (cached) yes
checking for gcc -std=gnu99 option to accept ISO C89... (cached) none needed
checking for C/C++ restrict keyword... __restrict
checking for inline... inline
checking whether gcc -std=gnu99 supports -g -O2 -O2 -Wall -m64... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /usr/bin/rm
checking for mt... ./configure: line 4086: WARNING:: command not found
no
checking return type of signal handlers... void
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking how to run the C preprocessor... gcc -std=gnu99 -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for struct stat.st_blksize... yes
checking whether to enable assertions... yes
checking for pthread_mutex_init in -lpthread... yes
checking for library containing clock_gettime... none required
checking for library containing sem_init... none required
checking for library containing rint... -lm
checking for library containing seteuid... none required
checking for library containing atoll... none required
checking for library containing hstrerror... none required
checking for library containing getaddrinfo... none required
checking for library containing socket... none required
checking for library containing gethostbyname... none required
checking for library containing sendfile... none required
checking sys/sendfile.h usability... yes
checking sys/sendfile.h presence... yes
checking for sys/sendfile.h... yes
checking for size_t... yes
checking for working alloca.h... yes
checking for alloca... yes
checking for library containing mhash_init... no
checking for library containing MD5Init... no
checking for library containing MD5_Init... -lcrypto
configure: creating ./config.status
config.status: creating Makefile
config.status: creating mbuffer.1
config.status: creating config.h
make -C src/mbuffer
make[2]: Entering directory `/ihome/ckaplan/amv69/speedseq/src/mbuffer'
gcc -std=gnu99 -g -O2 -O2 -Wall -m64 -DHAVE_CONFIG_H -I. -I.   -c -o log.o log.c
gcc -std=gnu99 -g -O2 -O2 -Wall -m64 -DHAVE_CONFIG_H -I. -I.   -c -o network.o network.c
gcc -std=gnu99 -g -O2 -O2 -Wall -m64 -DHAVE_CONFIG_H -I. -I.   -c -o mbuffer.o mbuffer.c
[01m[Kmbuffer.c:65:3:[m[K [01;35m[Kwarning: [m[K#warning sendfile is unable to send from buffers [-Wcpp]
  #warning sendfile is unable to send from buffers
[01;32m[K   ^[m[K
[01m[Kmbuffer.c:[m[K In function â€˜[01m[KinputThread[m[Kâ€™:
[01m[Kmbuffer.c:760:19:[m[K [01;35m[Kwarning: [m[Kcast to pointer from integer of different size [-Wint-to-pointer-cast]
      pthread_exit((void *) in);
[01;32m[K                   ^[m[K
[01m[Kmbuffer.c:761:12:[m[K [01;35m[Kwarning: [m[Kcast to pointer from integer of different size [-Wint-to-pointer-cast]
     return (void *) in;
[01;32m[K            ^[m[K
[01m[Kmbuffer.c:[m[K In function â€˜[01m[KterminateSender[m[Kâ€™:
[01m[Kmbuffer.c:858:15:[m[K [01;35m[Kwarning: [m[Kcast to pointer from integer of different size [-Wint-to-pointer-cast]
  pthread_exit((void *) ret);
[01;32m[K               ^[m[K
[01m[Kmbuffer.c:[m[K In function â€˜[01m[KterminateOutputThread[m[Kâ€™:
[01m[Kmbuffer.c:1142:15:[m[K [01;35m[Kwarning: [m[Kcast to pointer from integer of different size [-Wint-to-pointer-cast]
  pthread_exit((void *)status);
[01;32m[K               ^[m[K
gcc -std=gnu99 -g -O2 -O2 -Wall -m64 -DHAVE_CONFIG_H -I. -I.  log.o network.o mbuffer.o -lcrypto -lm -lpthread  -o mbuffer
make[2]: Leaving directory `/ihome/ckaplan/amv69/speedseq/src/mbuffer'
cp src/mbuffer/mbuffer bin
cp src/bamkit/bamtofastq.py bin
cp src/bamkit/bamheadrg.py bin
cp src/bamkit/bamgroupreads.py bin
cp src/bamkit/bamfilterrg.py bin
cp src/bamkit/bamcleanheader.py bin
cp src/bamkit/bamlibs.py bin
which: no samtools in (/ihome/ckaplan/amv69/miniconda3/bin:/ihome/ckaplan/amv69/miniconda3/condabin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/ihome/crc/wrappers:/ihome/ckaplan/amv69/.local/bin:/ihome/ckaplan/amv69/bin:/ihome/crc/wrappers)
make[1]: Leaving directory `/ihome/ckaplan/amv69/speedseq'
]0;amv69@login0b:~/speedseq(base) [amv69@login0b speedseq]$ ls Lys2
ls: cannot access Lys2: No such file or directory
]0;amv69@login0b:~/speedseq(base) [amv69@login0b speedseq]$ cd ..
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls Lys2/
[0m[01;32malignment.sh[0m             [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME015_S15_raw.bw[0m           [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII_est.txt            [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME015_S15.sorted.bam[0m       [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa                 [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m   [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
[01;32mfragment_lengths.sh[0m      [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m  [01;32mreadme.txt[0m
[01;32mfragmentSizes_input.png[0m  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ speed [Kseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ./[K[K~/Lys2/chrII[KI.fa ~/Lys2/lys2-1
lys2-128delta_ME013_S13_raw.bw        lys2-173R2_ME015_S15_raw.bw           lys2-173R2_ME016_S16_R2_001.fastq.gz
lys2-128delta_ME014_S14_raw.bw        lys2-173R2_ME015_S15.sorted.bam       lys2-173R2_ME016_S16_raw.bw
lys2-173R2_ME015_S15_R1_001.fastq.gz  lys2-173R2_ME015_S15.sorted.bam.bai   lys2-173R2_ME016_S16.sorted.bam
lys2-173R2_ME015_S15_R2_001.fastq.gz  lys2-173R2_ME016_S16_R1_001.fastq.gz  lys2-173R2_ME016_S16.sorted.bam.bai
(base) [amv69@login0b ~]$ speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-1
lys2-128delta_ME013_S13_raw.bw        lys2-173R2_ME015_S15_raw.bw           lys2-173R2_ME016_S16_R2_001.fastq.gz
lys2-128delta_ME014_S14_raw.bw        lys2-173R2_ME015_S15.sorted.bam       lys2-173R2_ME016_S16_raw.bw
lys2-173R2_ME015_S15_R1_001.fastq.gz  lys2-173R2_ME015_S15.sorted.bam.bai   lys2-173R2_ME016_S16.sorted.bam
lys2-173R2_ME015_S15_R2_001.fastq.gz  lys2-173R2_ME016_S16_R1_001.fastq.gz  lys2-173R2_ME016_S16.sorted.bam.bai
(base) [amv69@login0b ~]$ speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys 2/lys-17[K[K[K2-17eR[K[KE[K#[K3R2_ME015_S15_r[KR2_001.fastq.gz  -o akl[K[Kligned.fq[K[K[K[K[K[K[K[K[K[K[K[K[K
bash: speedseq: command not found
]0;amv69@login0b:~(base) [amv69@login0b ~]$ export PATH=![K~/speedseq[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls speedseq/
[0m[01;34mannotations[0m  [01;34mbin[0m  [01;34metc[0m  [01;34mexample[0m  install.log  LICENSE  Makefile  README.md  [01;34msrc[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls speedseq/speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys22/lys2-173R2_ME015_S15_R2_001.fastq.gz  [Als speedseq/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[Kexport PATH=~/speedseq/bin:$PATH
]0;amv69@login0b:~(base) [amv69@login0b ~]$ speedse[K[K[K[K[K[K[Kexport PATH=~/speedseq/bin:$PATH[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[20Pls speedseq/speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys22/lys2-173R2_ME015_S15_R2_001.fastq.gz  
Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Warning: Reference file not indexed with BWA. Indexing now...
[bwa_index] Pack FASTA... 0.00 sec
[bwa_index] Construct BWT for the packed sequence...
[bwa_index] 0.15 seconds elapse.
[bwa_index] Update BWT... 0.00 sec
[bwa_index] Pack forward-only FASTA... 0.01 sec
[bwa_index] Construct SA from BWT and Occ... 0.08 sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa index /ihome/ckaplan/amv69/Lys2/chrII.fa
[main] Real time: 0.298 sec; CPU: 0.245 sec
Done
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/full lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster --excludeDups --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin
^Z
[1]+  Stopped                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~(base) [amv69@login0b ~]$ bg
[1]+ speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@login0b ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@login0b ~]$ killall jobs
jobs: no process found
]0;amv69@login0b:~(base) [amv69@login0b ~]$ jobs killal
bash: jobs: killal: no such job
]0;amv69@login0b:~(base) [amv69@login0b ~]$ jobs killall
bash: jobs: killall: no such job
]0;amv69@login0b:~(base) [amv69@login0b ~]$ kill jobs 1
bash: kill: jobs: arguments must be process or job IDs
bash: kill: (1) - Operation not permitted
]0;amv69@login0b:~(base) [amv69@login0b ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@login0b ~]$ kill %
]0;amv69@login0b:~(base) [amv69@login0b ~]$ parallel: SIGTERM received. No new jobs will be started.
parallel: Waiting for these 3 jobs to finish. Send SIGTERM again to stop now.
parallel:         gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="\t" lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc_pipe |             /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin |             /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin
parallel:         /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG\tID:id\tSM:samplename\tLB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz |             /ihome/ckaplan/amv69/speedseq//bin/samblaster --excludeDups --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc_pipe |             /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin |             /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin
parallel:         gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="\t" lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl_pipe |             /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin |             /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.546 CPU sec, 3.546 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.472 CPU sec, 3.472 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.452 CPU sec, 3.452 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.468 CPU sec, 3.467 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.457 CPU sec, 3.457 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.456 CPU sec, 3.456 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.462 CPU sec, 3.462 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.449 CPU sec, 3.449 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.448 CPU sec, 3.448 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.448 CPU sec, 3.448 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.471 CPU sec, 3.471 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.455 CPU sec, 3.455 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.453 CPU sec, 3.453 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.542 CPU sec, 3.542 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.548 CPU sec, 3.548 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.588 CPU sec, 3.588 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.525 CPU sec, 3.524 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.482 CPU sec, 3.482 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.484 CPU sec, 3.484 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.466 CPU sec, 3.466 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.455 CPU sec, 5.406 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.469 CPU sec, 3.469 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.482 CPU sec, 3.482 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.517 CPU sec, 3.517 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.494 CPU sec, 3.493 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.462 CPU sec, 3.462 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.436 CPU sec, 3.436 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.453 CPU sec, 3.453 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.457 CPU sec, 3.457 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.464 CPU sec, 3.464 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.447 CPU sec, 3.447 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.468 CPU sec, 3.468 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.464 CPU sec, 3.464 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
^C
]0;amv69@login0b:~[1]+  Terminated              speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
(base) [amv69@login0b ~]$ k[Kls
[0m[01;34mfasta[0m  [01;34mGithub[0m  [34;42mLys2[0m  [01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU[0m  [01;34mminiconda3[0m  [01;34mreads[0m  rnaSeq.py  [01;34mspeedseq[0m  [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@login0b ~]$ rm lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/
rm: cannot remove â€˜lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/â€™: Is a directory
]0;amv69@login0b:~(base) [amv69@login0b ~]$ rm -rf lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/
]0;amv69@login0b:~(base) [amv69@login0b ~]$ srun -n 1 -t 4:00:00 --pty bash
]0;amv69@login0b:~[?1034h(base) [amv69@n440 ~]$ exitgit pushcommit -m "$(date +%F) Work"add *[Kcommit -am "$(date +%F) Work"speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_M E015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME0[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME01[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME01[1@5[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CR"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME0[1@1[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME0[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME01[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_0[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_00[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.f[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fa[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fas[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fast[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.g[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz[1P ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz [1P~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~[1P/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/[1PLys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/L[1Pys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Ly[1Ps2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys[1P2/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2[1P/lys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/[1Plys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/l[1Pys2-173R2_ME015_S15_R2_001.fastq.gz[Aspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/ly[1Ps2-173R2_ME015_S15_R2_001.fastq.gz[A

Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/full lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster --excludeDups --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin
^Z
[1]+  Stopped                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~(base) [amv69@n440 ~]$ bg
[1]+ speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@n440 ~]$ [K(base) [amv69@n440 ~]$ [K(base) [amv69@n440 ~]$ [K(base) [amv69@n440 ~]$ [K(base) [amv69@n440 ~]$ [K(base) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(base) [amv69@n440 ~]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.973 CPU sec, 4.973 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.936 CPU sec, 4.936 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.867 CPU sec, 4.867 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.934 CPU sec, 4.935 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.916 CPU sec, 4.917 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.829 CPU sec, 4.829 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.883 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.882 CPU sec, 4.883 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.916 CPU sec, 4.916 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.882 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.886 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.883 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.945 CPU sec, 4.946 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.906 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.869 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.872 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.869 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.884 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 6.294 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.939 CPU sec, 4.940 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.871 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.896 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.869 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.951 CPU sec, 4.952 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.867 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.943 CPU sec, 4.943 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.896 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.823 CPU sec, 4.823 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.828 CPU sec, 4.829 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.858 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.829 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.904 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.898 CPU sec, 4.898 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.869 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.909 CPU sec, 4.909 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.929 CPU sec, 4.930 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 5.012 CPU sec, 5.013 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.938 CPU sec, 4.939 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.939 CPU sec, 4.940 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.927 CPU sec, 4.927 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.920 CPU sec, 4.921 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.939 CPU sec, 4.939 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.922 CPU sec, 4.922 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.923 CPU sec, 4.924 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.936 CPU sec, 4.937 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.920 CPU sec, 4.921 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.907 CPU sec, 4.908 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.921 CPU sec, 4.921 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.959 CPU sec, 4.959 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.944 CPU sec, 4.944 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.873 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.955 CPU sec, 4.956 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.858 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.877 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.897 CPU sec, 4.897 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.861 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.548 CPU sec, 2.548 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 852.709 sec; CPU: 759.423 sec
samblaster: Output 14577 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 26700k memory in 18.194S CPU seconds and 14M12S(852S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Done

]0;amv69@login0b:~[1]+  Done                    speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
(base) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m                                         lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      [01;34mreads[0m
[01;34mGithub[0m                                        lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  rnaSeq.py
[34;42mLys2[0m                                          lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        [01;34mspeedseq[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam      lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai    [01;35mtest.png[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai  [01;34mminiconda3[0m
]0;amv69@login0b:~(base) [amv69@n440 ~]$ speed [Ks[K[K[K[K[K[Kspeedeq[K[Kseq sv -o Lys@Tes[K[K[K[K2Test -x Lys2/
alignment.sh                          fragment_lengths.sh                   lys2-173R2_ME015_S15.sorted.bam
chrII_est.txt                         fragmentSizes_input.png               lys2-173R2_ME015_S15.sorted.bam.bai
chrII.fa                              input_adjusted_reads_per_million.sh   lys2-173R2_ME016_S16_R1_001.fastq.gz
chrII.fa.amb                          lys2-128delta_ME013_S13_raw.bw        lys2-173R2_ME016_S16_R2_001.fastq.gz
chrII.fa.ann                          lys2-128delta_ME014_S14_raw.bw        lys2-173R2_ME016_S16_raw.bw
chrII.fa.bwt                          lys2-173R2_ME015_S15_R1_001.fastq.gz  lys2-173R2_ME016_S16.sorted.bam
chrII.fa.pac                          lys2-173R2_ME015_S15_R2_001.fastq.gz  lys2-173R2_ME016_S16.sorted.bam.bai
chrII.fa.sa                           lys2-173R2_ME015_S15_raw.bw           readme.txt
(base) [amv69@n440 ~]$ speedseq sv -o Lys2Test -x Lys2/Chr_es[K[K[KII[K[K[K[K[KchrII_est.txt  -g -d -B 
.bash_history                                             lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
.bash_logout                                              lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
.bash_profile                                             lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
.bashrc                                                   miniconda3/
.cache/                                                   .mozilla/
.conda/                                                   .nn.py.swp
.condarc                                                  .parallel/
.config/                                                  .pki/
.emacs                                                    reads/
.emacs.d/                                                 rnaSeq.py
fasta/                                                    speedseq/
.gitconfig                                                .ssh/
Github/                                                   test.png
.java/                                                    .tmux/
.kshrc                                                    .tmux.conf
.local/                                                   .tmux.conf.local
Lys2/                                                     .vim/
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  .viminfo
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              .Xauthority
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      .zshrc
(base) [amv69@n440 ~]$ speedseq sv -o Lys2Test -x Lys2/chrII_est.txt  -g -d -B lys2-173R2_ME015_S15_R1_001.fastq.gz.b am -D lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam -S lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...

usage:   speedseq sv [options]

sv options:
         -B FILE  full BAM file(s) (comma separated) (required)
         -S FILE  split reads BAM file(s) (comma separated) (required)
         -D FILE  discordant reads BAM files(s) (comma separated) (required)
         -R FILE  indexed reference genome fasta file (required)
         -o STR   output prefix [fullBam.bam]
         -t INT   threads [1] 
         -x FILE  BED file to exclude
         -g       genotype SV breakends with svtyper
         -d       calculate read-depth with CNVnator
         -w INT   CNVnator window size [100]
         -A       annotate the vcf with VEP
         -a       VEP assembly to use [GRCh37]
         -P       output LUMPY probability curves in VCF
         -m INT   minimum sample weight for a call [4]
         -r FLOAT trim threshold [0]
         -T DIR   temp directory [./output_prefix.XXXXXXXXXXXX]
         -k       keep temporary files

global options:
         -K FILE  path to speedseq.config file (default: same directory as speedseq)
         -v       verbose
         -h       show this message

Error: cnvnator executable not found. Please set path in /ihome/ckaplan/amv69/speedseq/bin/speedseq.config file

]0;amv69@login0b:~(base) [amv69@n440 ~]$ curl -OL ftp://root.cern.ch/root/root_v5.34.20.source.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:45 --:--:--     0^Z
[1]+  Stopped                 curl -OL ftp://root.cern.ch/root/root_v5.34.20.source.tar.gz
]0;amv69@login0b:~(base) [amv69@n440 ~]$ fg
curl -OL ftp://root.cern.ch/root/root_v5.34.20.source.tar.gz
  0     0    0     0    0     0      0      0 --:--:--  0:01:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:51 --:--:--     0^C
]0;amv69@login0b:~(base) [amv69@n440 ~]$ wget https://root.cern/download/root_v6.18.00.source.tar.gz
--2019-07-23 09:28:42--  https://root.cern/download/root_v6.18.00.source.tar.gz
Resolving root.cern (root.cern)... 137.138.13.143, 2001:1458:201:45::100:b
Connecting to root.cern (root.cern)|137.138.13.143|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 165917160 (158M) [application/x-gzip]
Saving to: â€˜root_v6.18.00.source.tar.gzâ€™

 0% [                                                                            ] 0           --.-K/s               0% [                                                                            ] 24,576      84.6KB/s              0% [                                                                            ] 73,728       127KB/s              0% [                                                                            ] 106,496      122KB/s              0% [                                                                            ] 155,648      141KB/s              0% [                                                                            ] 204,800      147KB/s              0% [                                                                            ] 270,336      160KB/s              0% [                                                                            ] 352,256      178KB/s              0% [                                                                            ] 434,176      195KB/s              0% [                                                                            ] 516,096      210KB/s              0% [                                                                            ] 614,400      227KB/s              0% [                                                                            ] 712,704      242KB/s              0% [                                                                            ] 827,392      259KB/s  eta 10m 21s 0% [                                                                            ] 958,464      280KB/s  eta 10m 21s 0% [                                                                            ] 1,105,920    302KB/s  eta 10m 21s 0% [                                                                            ] 1,253,376    324KB/s  eta 10m 21s 0% [                                                                            ] 1,433,600    349KB/s  eta 10m 21s 0% [                                                                            ] 1,646,592    411KB/s  eta 7m 4s   1% [                                                                            ] 1,875,968    468KB/s  eta 7m 4s   1% [                                                                            ] 2,170,880    530KB/s  eta 7m 4s   1% [>                                                                           ] 2,449,408    588KB/s  eta 7m 4s   1% [>                                                                           ] 2,809,856    687KB/s  eta 7m 4s   1% [>                                                                           ] 3,170,304    759KB/s  eta 4m 39s  2% [>                                                                           ] 3,645,440    863KB/s  eta 4m 39s  2% [>                                                                           ] 4,104,192    978KB/s  eta 4m 39s  2% [=>                                                                          ] 4,694,016   1.08MB/s  eta 4m 39s  3% [=>                                                                          ] 5,251,072   1.20MB/s  eta 4m 39s  3% [=>                                                                          ] 5,840,896   1.32MB/s  eta 3m 0s   4% [==>                                                                         ] 6,692,864   1.50MB/s  eta 3m 0s   4% [==>                                                                         ] 7,462,912   1.70MB/s  eta 3m 0s   5% [==>                                                                         ] 8,298,496   1.87MB/s  eta 3m 0s   5% [===>                                                                        ] 9,412,608   2.12MB/s  eta 3m 0s   6% [===>                                                                        ] 10,461,184  2.39MB/s  eta 1m 54s  7% [====>                                                                       ] 11,624,448  2.65MB/s  eta 1m 54s  7% [====>                                                                       ] 12,967,936  2.92MB/s  eta 1m 54s  8% [=====>                                                                      ] 14,606,336  3.39MB/s  eta 1m 54s  9% [======>                                                                     ] 16,293,888  3.76MB/s  eta 1m 54s 10% [=======>                                                                    ] 18,096,128  4.15MB/s  eta 71s    12% [========>                                                                   ] 20,193,280  4.73MB/s  eta 71s    13% [=========>                                                                  ] 22,716,416  5.30MB/s  eta 71s    14% [==========>                                                                 ] 24,567,808  5.82MB/s  eta 71s    16% [===========>                                                                ] 27,566,080  6.50MB/s  eta 71s    17% [============>                                                               ] 29,663,232  6.92MB/s  eta 45s    19% [=============>                                                              ] 31,662,080  7.46MB/s  eta 45s    20% [==============>                                                             ] 33,644,544  7.79MB/s  eta 45s    21% [===============>                                                            ] 35,708,928  8.09MB/s  eta 45s    22% [================>                                                           ] 37,937,152  8.58MB/s  eta 45s    24% [=================>                                                          ] 40,312,832  8.93MB/s  eta 34s    25% [==================>                                                         ] 42,606,592  9.17MB/s  eta 34s    27% [===================>                                                        ] 44,834,816  9.54MB/s  eta 34s    28% [====================>                                                       ] 47,226,880  9.78MB/s  eta 34s    29% [=====================>                                                      ] 49,627,136  9.95MB/s  eta 34s    31% [======================>                                                     ] 52,092,928  10.3MB/s  eta 26s    32% [=======================>                                                    ] 54,452,224  10.3MB/s  eta 26s    34% [=========================>                                                  ] 56,827,904  10.3MB/s  eta 26s    35% [==========================>                                                 ] 59,359,232  10.5MB/s  eta 26s    37% [===========================>                                                ] 61,644,800  10.4MB/s  eta 26s    38% [============================>                                               ] 64,217,088  10.6MB/s  eta 20s    40% [=============================>                                              ] 66,953,216  10.8MB/s  eta 20s    41% [==============================>                                             ] 69,328,896  10.9MB/s  eta 20s    43% [===============================>                                            ] 71,802,880  11.0MB/s  eta 20s    44% [=================================>                                          ] 74,326,016  11.1MB/s  eta 20s    46% [==================================>                                         ] 76,865,536  11.2MB/s  eta 16s    47% [===================================>                                        ] 79,536,128  11.4MB/s  eta 16s    49% [====================================>                                       ] 82,108,416  11.5MB/s  eta 16s    51% [=====================================>                                      ] 84,795,392  11.6MB/s  eta 16s    52% [======================================>                                     ] 87,252,992  11.7MB/s  eta 16s    54% [========================================>                                   ] 89,792,512  11.7MB/s  eta 13s    55% [=========================================>                                  ] 92,413,952  11.9MB/s  eta 13s    57% [==========================================>                                 ] 95,019,008  11.9MB/s  eta 13s    58% [===========================================>                                ] 97,837,056  12.0MB/s  eta 13s    60% [=============================================>                              ] 100,540,416 12.1MB/s  eta 13s    62% [==============================================>                             ] 103,112,704 12.1MB/s  eta 10s    63% [===============================================>                            ] 105,701,376 12.2MB/s  eta 10s    65% [================================================>                           ] 108,371,968 12.1MB/s  eta 10s    66% [=================================================>                          ] 110,993,408 12.2MB/s  eta 10s    68% [===================================================>                        ] 113,778,688 12.3MB/s  eta 10s    70% [====================================================>                       ] 116,449,280 12.3MB/s  eta 7s     71% [=====================================================>                      ] 119,152,640 12.3MB/s  eta 7s     73% [======================================================>                     ] 121,774,080 12.4MB/s  eta 7s     74% [=======================================================>                    ] 124,411,904 12.3MB/s  eta 7s     76% [=========================================================>                  ] 127,049,728 12.4MB/s  eta 7s     78% [==========================================================>                 ] 129,753,088 12.4MB/s  eta 5s     79% [===========================================================>                ] 132,440,064 12.4MB/s  eta 5s     81% [============================================================>               ] 135,110,656 12.4MB/s  eta 5s     82% [==============================================================>             ] 137,666,560 12.5MB/s  eta 5s     84% [===============================================================>            ] 140,320,768 12.5MB/s  eta 5s     86% [================================================================>           ] 142,942,208 12.4MB/s  eta 3s     87% [=================================================================>          ] 145,596,416 12.4MB/s  eta 3s     89% [==================================================================>         ] 148,447,232 12.5MB/s  eta 3s     91% [====================================================================>       ] 151,166,976 12.5MB/s  eta 3s     92% [=====================================================================>      ] 153,722,880 12.5MB/s  eta 3s     94% [======================================================================>     ] 156,393,472 12.4MB/s  eta 1s     95% [=======================================================================>    ] 159,014,912 12.4MB/s  eta 1s     97% [=========================================================================>  ] 161,652,736 12.4MB/s  eta 1s     98% [==========================================================================> ] 164,192,256 12.4MB/s  eta 1s     100%[===========================================================================>] 165,917,160 12.5MB/s   in 21s    

2019-07-23 09:29:07 (7.62 MB/s) - â€˜root_v6.18.00.source.tar.gzâ€™ saved [165917160/165917160]

]0;amv69@login0b:~(base) [amv69@n440 ~]$ tar -xf[K[Kzxf 
.bash_history                                             lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
.bash_logout                                              lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
.bash_profile                                             miniconda3/
.bashrc                                                   .mozilla/
.cache/                                                   .nn.py.swp
.conda/                                                   .parallel/
.condarc                                                  .pki/
.config/                                                  reads/
.emacs                                                    rnaSeq.py
.emacs.d/                                                 root_v6.18.00.source.tar.gz
fasta/                                                    speedseq/
.gitconfig                                                .ssh/
Github/                                                   test.png
.java/                                                    .tmux/
.kshrc                                                    .tmux.conf
.local/                                                   .tmux.conf.local
Lys2/                                                     .vim/
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  .viminfo
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              .Xauthority
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      .zshrc
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  
(base) [amv69@n440 ~]$ tar -zxf root_v6.18.00.source.tar.gz 
]0;amv69@login0b:~(base) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m                                                     lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mGithub[0m                                                    [01;34mminiconda3[0m
[34;42mLys2[0m                                                      [01;34mreads[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  rnaSeq.py
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              [01;34mroot-6.18.00[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      [01;31mroot_v6.18.00.source.tar.gz[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  [01;34mspeedseq[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@n440 ~]$ cd root-6.18.00/
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ ./configure --prefix=$PWD

  ROOT is built with CMake, see https://root.cern/building-root
  Please run
      mkdir obj; cd obj; cmake ..; make -j 4

]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ make
make: *** No targets specified and no makefile found.  Stop.
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ Cm[KMake
bash: CMake: command not found
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ module load CMake
[1;31mLmod has detected the following error: [0m The following module(s) are unknown: "CMake"

Please check the spelling or version number. Also try "module spider ..."



]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ ./configure

  ROOT is built with CMake, see https://root.cern/building-root
  Please run
      mkdir obj; cd obj; cmake ..; make -j 4

]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ mkdir;[K obj; cdobj; cmake.[K ..; make -j 4
bash: cdobj: command not found
bash: cmake: command not found
make: *** No targets specified and no makefile found.  Stop.
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ mkdir obj; cdobj; cmake ..; make -j 4[1@ 
mkdir: cannot create directory â€˜objâ€™: File exists
bash: cmake: command not found
make: *** No targets specified and no makefile found.  Stop.
]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ module load cmake
]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ module load cmakekdir obj; cd obj; cmake ..; make -j 4[C[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[C[1P
-- The C compiler identification is GNU 4.8.5
-- The CXX compiler identification is GNU 4.8.5
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found Git: /usr/bin/git (found version "1.8.3.1") 
-- ROOT default compression algorithm: zlib
-- Found GCC. Major version 4, minor version 8
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found a 64bit system
-- Found GNU compiler collection
-- Performing Test GLIBCXX_USE_CXX11_ABI
-- Performing Test GLIBCXX_USE_CXX11_ABI - Failed
-- ROOT Platform: linux
-- ROOT Architecture: linuxx8664gcc
-- Build Type: RelWithDebInfo
-- Compiler Flags:  -std=c++11 -pipe  -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread 
-- Looking for ZLib
-- Found ZLIB: /usr/lib64/libz.so (found version "1.2.7") 
-- Looking for Freetype
-- Could NOT find Freetype (missing: FREETYPE_LIBRARY FREETYPE_INCLUDE_DIRS) 
-- FreeType not found. Switching on builtin_freetype option
-- Building freetype version 2.6.1 included in ROOT itself
-- Looking for PCRE
-- Found PCRE: /usr/include (found version "8.32") 
-- Looking for LZMA
-- LZMA not found. Switching on builtin_lzma option
-- Building LZMA version 5.2.4 included in ROOT itself
-- Looking for xxHash
-- Could NOT find xxHash (missing: xxHash_LIBRARY xxHash_INCLUDE_DIR) 
-- xxHash not found. Switching on builtin_xxhash option
-- Looking for LZ4
-- Could NOT find LZ4 (missing: LZ4_LIBRARY LZ4_INCLUDE_DIR) 
-- LZ4 not found. Switching on builtin_lz4 option
-- Looking for X11
-- Looking for XOpenDisplay in /usr/lib64/libX11.so;/usr/lib64/libXext.so
-- Looking for XOpenDisplay in /usr/lib64/libX11.so;/usr/lib64/libXext.so - found
-- Looking for gethostbyname
-- Looking for gethostbyname - found
-- Looking for connect
-- Looking for connect - found
-- Looking for remove
-- Looking for remove - found
-- Looking for shmat
-- Looking for shmat - found
-- Found X11: /usr/lib64/libX11.so
-- X11_INCLUDE_DIR: /usr/include
-- X11_LIBRARIES: /usr/lib64/libX11.so;/usr/lib64/libXext.so
CMake Error at cmake/modules/SearchInstalledSoftware.cmake:262 (message):
  libXpm and Xpm headers must be installed.
Call Stack (most recent call first):
  CMakeLists.txt:159 (include)


-- Configuring incomplete, errors occurred!
See also "/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeOutput.log".
See also "/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeError.log".
make: *** No targets specified and no makefile found.  Stop.
]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ cmake
Usage

  cmake [options] <path-to-source>
  cmake [options] <path-to-existing-build>
  cmake [options] -S <path-to-source> -B <path-to-build>

Specify a source directory to (re-)generate a build system for it in the
current working directory.  Specify an existing build directory to
re-generate its build system.

Run 'cmake --help' for more information.

]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ cd ..
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ ./configure

  ROOT is built with CMake, see https://root.cern/building-root
  Please run
      mkdir obj; cd obj; cmake ..; make -j 4

]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ rm -rf obj
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ mkdir obj; cd obj; cmake ..; make -j 4
-- The C compiler identification is GNU 4.8.5
-- The CXX compiler identification is GNU 4.8.5
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found Git: /usr/bin/git (found version "1.8.3.1") 
-- ROOT default compression algorithm: zlib
-- Found GCC. Major version 4, minor version 8
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found a 64bit system
-- Found GNU compiler collection
-- Performing Test GLIBCXX_USE_CXX11_ABI
-- Performing Test GLIBCXX_USE_CXX11_ABI - Failed
-- ROOT Platform: linux
-- ROOT Architecture: linuxx8664gcc
-- Build Type: RelWithDebInfo
-- Compiler Flags:  -std=c++11 -pipe  -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread 
-- Looking for ZLib
-- Found ZLIB: /usr/lib64/libz.so (found version "1.2.7") 
-- Looking for Freetype
-- Could NOT find Freetype (missing: FREETYPE_LIBRARY FREETYPE_INCLUDE_DIRS) 
-- FreeType not found. Switching on builtin_freetype option
-- Building freetype version 2.6.1 included in ROOT itself
-- Looking for PCRE
-- Found PCRE: /usr/include (found version "8.32") 
-- Looking for LZMA
-- LZMA not found. Switching on builtin_lzma option
-- Building LZMA version 5.2.4 included in ROOT itself
-- Looking for xxHash
-- Could NOT find xxHash (missing: xxHash_LIBRARY xxHash_INCLUDE_DIR) 
-- xxHash not found. Switching on builtin_xxhash option
-- Looking for LZ4
-- Could NOT find LZ4 (missing: LZ4_LIBRARY LZ4_INCLUDE_DIR) 
-- LZ4 not found. Switching on builtin_lz4 option
-- Looking for X11
-- Looking for XOpenDisplay in /usr/lib64/libX11.so;/usr/lib64/libXext.so
-- Looking for XOpenDisplay in /usr/lib64/libX11.so;/usr/lib64/libXext.so - found
-- Looking for gethostbyname
-- Looking for gethostbyname - found
-- Looking for connect
-- Looking for connect - found
-- Looking for remove
-- Looking for remove - found
-- Looking for shmat
-- Looking for shmat - found
-- Found X11: /usr/lib64/libX11.so
-- X11_INCLUDE_DIR: /usr/include
-- X11_LIBRARIES: /usr/lib64/libX11.so;/usr/lib64/libXext.so
CMake Error at cmake/modules/SearchInstalledSoftware.cmake:262 (message):
  libXpm and Xpm headers must be installed.
Call Stack (most recent call first):
  CMakeLists.txt:159 (include)


-- Configuring incomplete, errors occurred!
See also "/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeOutput.log".
See also "/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeError.log".
make: *** No targets specified and no makefile found.  Stop.
]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ more c[KCm[KMakeFiles/CMakeError.log 
Determining if the pthread_create exist failed with the following output:
Change Dir: /ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_84cad/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_84cad.dir/build.make CMakeFiles/cmTC_84cad.dir/build
gmake[1]: Entering directory `/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_84cad.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_84cad.dir/CheckSymbolExists.c.o   -c /ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFil
es/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_84cad
/ihome/crc/install/cmake/3.13.3/bin/cmake -E cmake_link_script CMakeFiles/cmTC_84cad.dir/link.txt --verbose=1
/usr/bin/cc      CMakeFiles/cmTC_84cad.dir/CheckSymbolExists.c.o  -o cmTC_84cad 
CMakeFiles/cmTC_84cad.dir/CheckSymbolExists.c.o: In function `main':
CheckSymbolExists.c:(.text+0x16): undefined reference to `pthread_create'
collect2: error: ld returned 1 exit status
gmake[1]: *** [cmTC_84cad] Error 1
gmake[1]: Leaving directory `/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp'
gmake: *** [cmTC_84cad/fast] Error 2

File /ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
[7m--More--(37%)[27m#else[K
  (void)argc;
  return 0;
#endif
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_86f93/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_86f93.dir/build.make CMakeFiles/cmTC_86f93.dir/build
gmake[1]: Entering directory `/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_86f93.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTC_86f93.dir/CheckFunctionExists.c.o   -c /iho
me/crc/install/cmake/3.13.3/share/cmake-3.13/Modules/CheckFunctionExists.c
Linking C executable cmTC_86f93
/ihome/crc/install/cmake/3.13.3/bin/cmake -E cmake_link_script CMakeFiles/cmTC_86f93.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTC_86f93.dir/CheckFunctionExists.c.o  -o cmTC_86f
93 -lpthreads 
/usr/bin/ld: cannot find -lpthreads
collect2: error: ld returned 1 exit status
gmake[1]: *** [cmTC_86f93] Error 1
gmake[1]: Leaving directory `/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp'
gmake: *** [cmTC_86f93/fast] Error 2


Performing C++ SOURCE FILE Test GLIBCXX_USE_CXX11_ABI failed with the following output:
Change Dir: /ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp
[7m--More--(74%)[27m[K
Run Build Command:"/usr/bin/gmake" "cmTC_785ff/fast"
/usr/bin/gmake -f CMakeFiles/cmTC_785ff.dir/build.make CMakeFiles/cmTC_785ff.dir/build
gmake[1]: Entering directory `/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_785ff.dir/src.cxx.o
/usr/bin/c++    -std=c++11 -pipe  -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DGLIBCXX_USE_CXX11_A
BI   -std=c++11 -o CMakeFiles/cmTC_785ff.dir/src.cxx.o -c /ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp/s
rc.cxx
/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp/src.cxx:4:4: error: #error NOCXX11
   #error NOCXX11
    ^
gmake[1]: *** [CMakeFiles/cmTC_785ff.dir/src.cxx.o] Error 1
gmake[1]: Leaving directory `/ihome/ckaplan/amv69/root-6.18.00/obj/CMakeFiles/CMakeTmp'
gmake: *** [cmTC_785ff/fast] Error 2

Source file was:

#include <string>
#if _GLIBCXX_USE_CXX11_ABI == 0
  #error NOCXX11
#endif
int main() {}

]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ ls
[0m[01;34mbuiltins[0m  CMakeCache.txt  [01;34mCMakeFiles[0m  [01;34mFREETYPE-prefix[0m  [01;34mLZMA-prefix[0m  recmake_initial.sh  recmake_replay.sh
]0;amv69@login0b:~/root-6.18.00/obj(base) [amv69@n440 obj]$ cd ..
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ ls
[0m[01;34mbindings[0m        [01;34mconfig[0m           [01;34mdocumentation[0m  [01;34mgraf3d[0m  [01;34minterpreter[0m  [01;34mmacros[0m  [01;34mmontecarlo[0m  README.md  [01;34mtmva[0m
[01;34mbuild[0m           [01;32mconfigure[0m        [01;34metc[0m            [01;34mgui[0m     [01;34mio[0m           [01;34mmain[0m    [01;34mnet[0m         [01;34mroofit[0m     [01;34mtree[0m
[01;34mbuiltins[0m        CONTRIBUTING.md  [01;34mfonts[0m          [01;34mhist[0m    [01;34mjs[0m           [01;34mman[0m     [01;34mobj[0m         [01;34mrootx[0m      [01;34mtutorials[0m
[01;34mcmake[0m           [01;34mcore[0m             [01;34mgeom[0m           [01;34mhtml[0m    LGPL2_1.txt  [01;34mmath[0m    [01;34mproof[0m       [01;34msql[0m        [01;34mui5[0m
CMakeLists.txt  [01;34mdoc[0m              [01;34mgraf2d[0m         [01;34micons[0m   LICENSE      [01;34mmisc[0m    [01;34mREADME[0m      [01;34mtest[0m
]0;amv69@login0b:~/root-6.18.00(base) [amv69@n440 root-6.18.00]$ cd ..
]0;amv69@login0b:~(base) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m                                                     lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mGithub[0m                                                    [01;34mminiconda3[0m
[34;42mLys2[0m                                                      [01;34mreads[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  rnaSeq.py
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              [01;34mroot-6.18.00[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      [01;31mroot_v6.18.00.source.tar.gz[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  [01;34mspeedseq[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        [01;35mtest.png[0m
]0;amv69@login0b:~(base) [amv69@n440 ~]$ rm -rf root*[K-6.18.00/
]0;amv69@login0b:~(base) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m                                                     lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mGithub[0m                                                    [01;34mminiconda3[0m
[34;42mLys2[0m                                                      [01;34mreads[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  rnaSeq.py
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              [01;31mroot_v6.18.00.source.tar.gz[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      [01;34mspeedseq[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  [01;35mtest.png[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
]0;amv69@login0b:~(base) [amv69@n440 ~]$ 
]0;amv69@login0b:~(base) [amv69@n440 ~]$ ^C
]0;amv69@login0b:~(base) [amv69@n440 ~]$ mo[Ksam[K(base) [amv69@n440 ~]$ msam[K[K(base) [amv69@n440 ~]$ samtools -view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
bash: samtools: command not found
]0;amv69@login0b:~(base) [amv69@n440 ~]$ samtools -view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kconda activate renas[K[K[K[Knsaeq
Could not find conda environment: rnsaeq
You can list all discoverable environments with `conda info --envs`.

]0;amv69@login0b:~(base) [amv69@n440 ~]$ conda activate rnsaeq\[K[K[K[K[Kaseq
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ conda activate rnaseqsaeqsamtools -view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
[main] unrecognized command '-view'
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ samtools -view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[1P
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ samtools view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam-lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CHlys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
@HD	VN:1.3	SO:coordinate
@SQ	SN:chrII	LN:813184
@RG	ID:id	LB:lib	SM:samplename
@PG	ID:bwa	PN:bwa	CL:/ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz	VN:0.7.10-r789
@PG	ID:SAMBLASTER	CL:samblaster -i stdin -o stdout --excludeDups --addMateTags -d lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/disc_pipe -s lys2-173R2_ME015_S15_R1_001.fastq.gz.25DRf9giuXxJ/spl_pipe --maxSplitCount 2 --maxUnmappedBases 50 --minIndelSize 50 --minNonOverlap 20	VN:0.1.22
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ samtools view -H lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Plys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@-[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cconda activate rnaseq[Ksaeqsamtools -view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Krm -rf root-6.18.00/ls[Kcd ..[3Plscd ..[3Plsmore CMakeFiles/CMakeError.log [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ckdir obj; cd obj; cmake ..; make -j 4[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm -rf obj[K./configure[6Pcd ..make ..; make -j 4[2Pmodule load cmakekdir obj; cd obj; cmake ..; make -j 4[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./configure[Kmodule load CMakeCMake[K[1Pmake./configure --prefix=$PWD[9Pcd root-6.18.00/ls[Ktar -zxf root_v6.18.00.source.tar.gz [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwget https://root.cern/download/root_v6.18.00.source.tar.gz[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfg[Kcurl -OL ftp://root.cern.ch/root/root_v5.34.20.source.tar.gz[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq sv -o Lys2Test -x Lys2/chrII_est.txt  -g -d -B lys2-173R2_ME015_S15_R1_0001.fastq.gz.bam -D lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam -S lys2-173R2_ME015_S15_R1_001.fasttq.gz.splitters.bam[A[A[C[C[C[C[C[Cls[K
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjobs[2Pbgspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2--173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[C[C[C[C[C[C[C[C[C[C[C[C[C[C -i $[K&
[1] 30459
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/full lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster --excludeDups --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin

]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m
[01;34mGithub[0m
[34;42mLys2[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
[01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mminiconda3[0m
[01;34mreads[0m
rnaSeq.py
[01;31mroot_v6.18.00.source.tar.gz[0m
[01;34mspeedseq[0m
[01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls L[Klys[K[K[K[K[K[Kls -lah
total 1.4G
drwxr-xr-x 21 amv69 ckaplan 1.4K Jul 23 09:49 [0m[01;34m.[0m
drwxr-xr-x  9 root  root     162 Jul 17 09:25 [01;34m..[0m
-rw-------  1 amv69 ckaplan  23K Jul 22 16:34 .bash_history
-rw-r--r--  1 amv69 ckaplan   18 Sep  6  2018 .bash_logout
-rw-r--r--  1 amv69 ckaplan  193 Sep  6  2018 .bash_profile
-rw-r--r--  1 amv69 ckaplan  803 Jul 22 12:10 .bashrc
drwxr-xr-x  5 amv69 ckaplan   78 Feb 18 13:36 [01;34m.cache[0m
drwxrwsr-x  2 amv69 ckaplan   34 Jul 17 12:35 [01;34m.conda[0m
-rw-r--r--  1 amv69 ckaplan   64 Jul 17 12:58 .condarc
drwxr-xr-x  5 amv69 ckaplan   82 Jul 17 14:14 [01;34m.config[0m
-rw-r--r--  1 amv69 ckaplan  334 Sep  6  2018 .emacs
drwx------  2 amv69 ckaplan    0 Jul 17 14:04 [01;34m.emacs.d[0m
drwxr-xr-x  2 amv69 ckaplan   84 Jul 19 09:07 [01;34mfasta[0m
-rw-r--r--  1 amv69 ckaplan   54 Jul 17 14:03 .gitconfig
drwxr-xr-x  6 amv69 ckaplan  128 Jul 19 17:09 [01;34mGithub[0m
drwxr-xr-x  3 amv69 ckaplan   23 Jul 18 10:56 [01;34m.java[0m
-rw-r--r--  1 amv69 ckaplan  172 Sep  6  2018 .kshrc
drwxr-xr-x  3 amv69 ckaplan   23 Feb 18 13:36 [01;34m.local[0m
drwxrwxrwx  2 amv69 ckaplan 1001 Jul 23 09:01 [34;42mLys2[0m
-rw-r--r--  1 amv69 ckaplan 888M Jul 23 09:22 lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
-rw-r--r--  1 amv69 ckaplan 2.6K Jul 23 09:22 lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
-rw-r--r--  1 amv69 ckaplan 701K Jul 23 09:19 lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
-rw-r--r--  1 amv69 ckaplan 1.9K Jul 23 09:22 lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
drwx------  5 amv69 ckaplan  118 Jul 23 09:49 [01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok[0m
-rw-r--r--  1 amv69 ckaplan  437 Jul 23 09:19 lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
-rw-r--r--  1 amv69 ckaplan   24 Jul 23 09:22 lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
drwxr-xr-x 17 amv69 ckaplan  406 Jul 17 12:35 [01;34mminiconda3[0m
drwxr-xr-x  4 amv69 ckaplan   53 Sep  6  2018 [01;34m.mozilla[0m
-rw-r--r--  1 amv69 ckaplan  12K Sep 17  2018 .nn.py.swp
drwxr-xr-x  3 amv69 ckaplan   21 Jul 23 09:01 [01;34m.parallel[0m
drwxr-----  3 amv69 ckaplan   23 Jul 18 16:19 [01;34m.pki[0m
drwxr-xr-x  3 amv69 ckaplan 1.2K Jul 22 08:49 [01;34mreads[0m
-rw-r--r--  1 amv69 ckaplan 6.3K Jul 22 08:05 rnaSeq.py
-rw-r--r--  1 amv69 ckaplan 159M Jun 25 05:26 [01;31mroot_v6.18.00.source.tar.gz[0m
drwxr-xr-x  8 amv69 ckaplan  303 Jul 23 08:51 [01;34mspeedseq[0m
drwx------  2 amv69 ckaplan   81 Jul 17 14:20 [01;34m.ssh[0m
-rw-r--r--  1 amv69 ckaplan  53K Jul 22 14:12 [01;35mtest.png[0m
drwxr-xr-x  3 amv69 ckaplan  205 Jul 22 15:00 [01;34m.tmux[0m
lrwxrwxrwx  1 amv69 ckaplan   16 Jul 22 14:58 [01;36m.tmux.conf[0m -> .tmux/.tmux.conf
-rw-r--r--  1 amv69 ckaplan  11K Jul 22 14:58 .tmux.conf.local
drwxr-xr-x  2 amv69 ckaplan   28 Jul 22 14:54 [01;34m.vim[0m
-rw-------  1 amv69 ckaplan 5.0K Jul 22 16:00 .viminfo
-rw-------  1 amv69 ckaplan 1.2K Jul 18 20:42 .Xauthority
-rw-r--r--  1 amv69 ckaplan  658 Sep  6  2018 .zshrc
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.849 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.946 CPU sec, 4.946 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.906 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.909 CPU sec, 4.910 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.919 CPU sec, 4.919 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.886 CPU sec, 4.886 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.869 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.867 CPU sec, 4.867 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.940 CPU sec, 4.941 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.873 CPU sec, 4.873 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.847 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.901 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.914 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.877 CPU sec, 4.878 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.913 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 5.458 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 5.088 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.994 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 5.035 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.972 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.910 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 5.316 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 5.656 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 9.077 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 8.827 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 5.360 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.917 CPU sec, 5.290 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 6.223 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.910 CPU sec, 5.754 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 6.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.874 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 5.022 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 7.872 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 7.580 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.867 CPU sec, 10.271 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 5.224 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.849 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.914 CPU sec, 6.279 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 5.015 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 6.272 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.939 CPU sec, 4.940 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.869 CPU sec, 4.971 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 5.886 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 7.029 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 5.180 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 6.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.828 CPU sec, 4.829 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.815 CPU sec, 4.816 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.805 CPU sec, 4.806 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.806 CPU sec, 4.815 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.782 CPU sec, 4.782 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.874 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.795 CPU sec, 4.795 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.801 CPU sec, 4.801 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.777 CPU sec, 4.777 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.874 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.784 CPU sec, 4.784 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.791 CPU sec, 4.792 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.783 CPU sec, 4.784 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.783 CPU sec, 4.784 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.797 CPU sec, 4.798 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.822 CPU sec, 4.822 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.780 CPU sec, 4.780 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.515 CPU sec, 2.516 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 908.030 sec; CPU: 757.560 sec
samblaster: Output 14577 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.HqRJsWjrmDok/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 25056k memory in 18.223S CPU seconds and 15M8S(908S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Done

]0;amv69@login0b:~[1]+  Done                    speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i
(rnaseq) [amv69@n440 ~]$ head[K[K[K[Kls
[0m[01;34mfasta[0m
[01;34mGithub[0m
[34;42mLys2[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mminiconda3[0m
[01;34mreads[0m
rnaSeq.py
[01;31mroot_v6.18.00.source.tar.gz[0m
[01;34mspeedseq[0m
[01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ hea[K[K[Ksamtools view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls -hal
total 1.4G
drwxr-xr-x 20 amv69 ckaplan 1.3K Jul 23 10:08 [0m[01;34m.[0m
drwxr-xr-x  9 root  root     162 Jul 17 09:25 [01;34m..[0m
-rw-------  1 amv69 ckaplan  23K Jul 22 16:34 .bash_history
-rw-r--r--  1 amv69 ckaplan   18 Sep  6  2018 .bash_logout
-rw-r--r--  1 amv69 ckaplan  193 Sep  6  2018 .bash_profile
-rw-r--r--  1 amv69 ckaplan  803 Jul 22 12:10 .bashrc
drwxr-xr-x  5 amv69 ckaplan   78 Feb 18 13:36 [01;34m.cache[0m
drwxrwsr-x  2 amv69 ckaplan   34 Jul 17 12:35 [01;34m.conda[0m
-rw-r--r--  1 amv69 ckaplan   64 Jul 17 12:58 .condarc
drwxr-xr-x  5 amv69 ckaplan   82 Jul 17 14:14 [01;34m.config[0m
-rw-r--r--  1 amv69 ckaplan  334 Sep  6  2018 .emacs
drwx------  2 amv69 ckaplan    0 Jul 17 14:04 [01;34m.emacs.d[0m
drwxr-xr-x  2 amv69 ckaplan   84 Jul 19 09:07 [01;34mfasta[0m
-rw-r--r--  1 amv69 ckaplan   54 Jul 17 14:03 .gitconfig
drwxr-xr-x  6 amv69 ckaplan  128 Jul 19 17:09 [01;34mGithub[0m
drwxr-xr-x  3 amv69 ckaplan   23 Jul 18 10:56 [01;34m.java[0m
-rw-r--r--  1 amv69 ckaplan  172 Sep  6  2018 .kshrc
drwxr-xr-x  3 amv69 ckaplan   23 Feb 18 13:36 [01;34m.local[0m
drwxrwxrwx  2 amv69 ckaplan 1001 Jul 23 09:01 [34;42mLys2[0m
-rw-r--r--  1 amv69 ckaplan 888M Jul 23 10:08 lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
-rw-r--r--  1 amv69 ckaplan 2.6K Jul 23 10:08 lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
-rw-r--r--  1 amv69 ckaplan 701K Jul 23 10:05 lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
-rw-r--r--  1 amv69 ckaplan 1.9K Jul 23 10:08 lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
-rw-r--r--  1 amv69 ckaplan  438 Jul 23 10:05 lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
-rw-r--r--  1 amv69 ckaplan   24 Jul 23 10:08 lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
drwxr-xr-x 17 amv69 ckaplan  406 Jul 17 12:35 [01;34mminiconda3[0m
drwxr-xr-x  4 amv69 ckaplan   53 Sep  6  2018 [01;34m.mozilla[0m
-rw-r--r--  1 amv69 ckaplan  12K Sep 17  2018 .nn.py.swp
drwxr-xr-x  3 amv69 ckaplan   21 Jul 23 09:01 [01;34m.parallel[0m
drwxr-----  3 amv69 ckaplan   23 Jul 18 16:19 [01;34m.pki[0m
drwxr-xr-x  3 amv69 ckaplan 1.2K Jul 22 08:49 [01;34mreads[0m
-rw-r--r--  1 amv69 ckaplan 6.3K Jul 22 08:05 rnaSeq.py
-rw-r--r--  1 amv69 ckaplan 159M Jun 25 05:26 [01;31mroot_v6.18.00.source.tar.gz[0m
drwxr-xr-x  8 amv69 ckaplan  303 Jul 23 08:51 [01;34mspeedseq[0m
drwx------  2 amv69 ckaplan   81 Jul 17 14:20 [01;34m.ssh[0m
-rw-r--r--  1 amv69 ckaplan  53K Jul 22 14:12 [01;35mtest.png[0m
drwxr-xr-x  3 amv69 ckaplan  205 Jul 22 15:00 [01;34m.tmux[0m
lrwxrwxrwx  1 amv69 ckaplan   16 Jul 22 14:58 [01;36m.tmux.conf[0m -> .tmux/.tmux.conf
-rw-r--r--  1 amv69 ckaplan  11K Jul 22 14:58 .tmux.conf.local
drwxr-xr-x  2 amv69 ckaplan   28 Jul 22 14:54 [01;34m.vim[0m
-rw-------  1 amv69 ckaplan 5.0K Jul 22 16:00 .viminfo
-rw-------  1 amv69 ckaplan 1.2K Jul 18 20:42 .Xauthority
-rw-r--r--  1 amv69 ckaplan  658 Sep  6  2018 .zshrc
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ [Als -halsamtools view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kjobsls -lah[Kspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2--173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i &[K-m 10 &[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[14Pamtools view -H lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Plys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-H lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2--173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.f[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -lah[3Pjobs[2Plssamtools view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -hal[K[A[K[K[Kmkdir lys2Test
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ cd lys22[KTest/
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ cd lys2Test/mkdir lys2Test[7Pls -halsamtools view lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kjobsls -lah[Kspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lyss2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.f -[K[Kastq.gz -i -m 10 &[K-c 10 &
[1] 32363
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/full lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster --excludeDups --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin

]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ cd .
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ cd ..
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls[K[Kjobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i -m 10 -c 10 &  (wd: ~/lys2Test)
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m
[01;34mGithub[0m
[34;42mLys2[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mlys2Test[0m
[01;34mminiconda3[0m
[01;34mreads[0m
rnaSeq.py
[01;31mroot_v6.18.00.source.tar.gz[0m
[01;34mspeedseq[0m
[01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls lys2Test/
[0m[01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i -m 10 -c 10 &  (wd: ~/lys2Test)
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m
[01;34mGithub[0m
[34;42mLys2[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mlys2Test[0m
[01;34mminiconda3[0m
[01;34mreads[0m
rnaSeq.py
[01;31mroot_v6.18.00.source.tar.gz[0m
[01;34mspeedseq[0m
[01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i -m 10 -c 10 &  (wd: ~/lys2Test)
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i -m 10 -c 10 &  (wd: ~/lys2Test)
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls[K[Ksamblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.823 CPU sec, 4.824 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.940 CPU sec, 4.940 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.900 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.907 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.916 CPU sec, 4.916 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.847 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.906 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.847 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.880 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.884 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.828 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.869 CPU sec, 4.869 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.828 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.828 CPU sec, 4.828 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.871 CPU sec, 4.878 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.816 CPU sec, 4.817 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.826 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.803 CPU sec, 4.804 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.801 CPU sec, 4.802 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.820 CPU sec, 4.820 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.787 CPU sec, 4.788 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.789 CPU sec, 4.790 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.785 CPU sec, 4.785 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.797 CPU sec, 4.797 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.807 CPU sec, 4.807 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.791 CPU sec, 4.791 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.794 CPU sec, 4.794 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.788 CPU sec, 4.788 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.827 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.784 CPU sec, 4.785 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.794 CPU sec, 4.795 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.812 CPU sec, 4.813 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.820 CPU sec, 4.820 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.828 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.793 CPU sec, 4.793 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.800 CPU sec, 4.801 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.825 CPU sec, 4.826 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.789 CPU sec, 4.789 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.787 CPU sec, 4.787 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.793 CPU sec, 4.793 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.806 CPU sec, 4.807 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.819 CPU sec, 4.820 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.803 CPU sec, 4.804 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.799 CPU sec, 4.799 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.802 CPU sec, 4.802 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.797 CPU sec, 4.797 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.790 CPU sec, 4.790 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.794 CPU sec, 4.794 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.803 CPU sec, 4.803 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.774 CPU sec, 4.774 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.792 CPU sec, 4.792 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.782 CPU sec, 4.782 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.782 CPU sec, 4.782 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.792 CPU sec, 4.793 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.787 CPU sec, 4.788 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.808 CPU sec, 4.809 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.778 CPU sec, 4.778 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.803 CPU sec, 4.804 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.788 CPU sec, 4.788 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.776 CPU sec, 4.776 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.812 CPU sec, 4.812 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.775 CPU sec, 4.776 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.819 CPU sec, 4.819 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.804 CPU sec, 4.804 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.828 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.803 CPU sec, 4.803 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.778 CPU sec, 4.779 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.803 CPU sec, 4.803 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.818 CPU sec, 4.818 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.812 CPU sec, 4.812 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.810 CPU sec, 4.810 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.808 CPU sec, 4.808 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.815 CPU sec, 4.815 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.813 CPU sec, 4.813 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.818 CPU sec, 4.818 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.813 CPU sec, 4.813 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.824 CPU sec, 4.825 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.829 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.809 CPU sec, 4.809 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.809 CPU sec, 4.810 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.815 CPU sec, 4.815 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.824 CPU sec, 4.824 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.818 CPU sec, 4.818 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.820 CPU sec, 4.821 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.815 CPU sec, 4.815 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.813 CPU sec, 4.814 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.811 CPU sec, 4.812 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.824 CPU sec, 4.825 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.826 CPU sec, 4.826 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.824 CPU sec, 4.825 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.816 CPU sec, 4.816 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.813 CPU sec, 4.813 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.898 CPU sec, 4.899 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.829 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.829 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.809 CPU sec, 4.809 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.914 CPU sec, 4.915 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.815 CPU sec, 4.815 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.828 CPU sec, 4.829 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.818 CPU sec, 4.819 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.818 CPU sec, 4.818 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.806 CPU sec, 4.806 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.524 CPU sec, 2.524 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 845.054 sec; CPU: 752.982 sec
samblaster: Output 14577 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.khCte3DapfI3/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 25228k memory in 18.075S CPU seconds and 14M5S(845S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam

]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ Done
jobs[2Plsjobsls lys2Test/[K\\[K[K[K[K
]0;amv69@login0b:~[1]+  Done                    speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i -m 10 -c 10  (wd: ~/lys2Test)
(wd now: ~)
(rnaseq) [amv69@n440 ~]$ jobs[2Plsjobsls lys2Test/[Kjobscd ..[Kspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2--173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz -i -m 10 -c 10 &[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII.fa ~/Lys2/lys2[1@-[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- ~/Lys2/chrII.fa ~/Lys2/lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci ~/Lys2/chrII.fa ~/Lys2/ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII.fa ~/Lys2/l[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd .[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" -i  ~/Lys2/chrII.fa ~/Lys2/llys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
[1] 1670
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/full lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin

]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" -i ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" -i ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.819 CPU sec, 4.820 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.942 CPU sec, 4.943 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.915 CPU sec, 4.915 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.886 CPU sec, 4.887 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.822 CPU sec, 4.823 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.907 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.873 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.886 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.943 CPU sec, 4.943 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.849 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.873 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.896 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.910 CPU sec, 4.910 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.847 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.877 CPU sec, 4.878 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.849 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.899 CPU sec, 4.899 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.823 CPU sec, 4.823 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.849 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.830 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.880 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.828 CPU sec, 4.829 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.905 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.826 CPU sec, 4.827 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.900 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.833 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.908 CPU sec, 4.909 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.928 CPU sec, 4.928 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.832 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.833 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.922 CPU sec, 4.922 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.828 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.936 CPU sec, 4.937 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.877 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.536 CPU sec, 2.536 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 847.714 sec; CPU: 756.938 sec
samblaster: Output 15036 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.g1EEDED6Wikm/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 27708k memory in 17.962S CPU seconds and 14M8S(848S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Done

]0;amv69@login0b:~[1]+  Done                    speedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" -i ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
(rnaseq) [amv69@n440 ~]$ ls
[0m[01;34mfasta[0m
[01;34mGithub[0m
[34;42mLys2[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mlys2Test[0m
[01;34mminiconda3[0m
[01;34mreads[0m
rnaSeq.py
[01;31mroot_v6.18.00.source.tar.gz[0m
[01;34mspeedseq[0m
[01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ l[Kls Lys2
[0m[01;32malignment.sh[0m   [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII_est.txt  [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa       [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.amb   [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.ann   [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.bwt   [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.pac   [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII.fa.sa    [01;32mlys2-173R2_ME015_S15_raw.bw[0m           [01;32mreadme.txt[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls[K[Kmore Lys2/fragment_lengths.sh 
cd /Volumes/G_DRIVE/maellison_spt6_50_ChIPseq/william_demultiplex/sc_bam

mkdir fragment_length


bamPEFragmentSize \
-b `ls *.bam` \
-hist fragment_length/fragmentSizes_all.png \
-T "Fragment Sizes" \
--maxFragmentLength 1000 > fragment_length/stats_all.txt


bamPEFragmentSize \
-b ME013_S13.sorted.bam ME014_S14.sorted.bam ME015_S15.sorted.bam ME016_S16.sorted.bam \
-hist fragment_length/fragmentSizes_input.png \
-T "Fragment Sizes" \
--maxFragmentLength 1000 > fragment_length/stats_input.txt


bamPEFragmentSize \
-b ME013_S13.sorted.bam ME015_S15.sorted.bam \
-hist fragment_length/fragmentSizes_inputrep1.png \
-T "Fragment Sizes" \
--maxFragmentLength 1000 > fragment_length/stats_input_rep1.txt


bamPEFragmentSize \
-b ME014_S14.sorted.bam ME016_S16.sorted.bam \
-hist fragment_length/fragmentSizes_input_rep2.png \
-T "Fragment Sizes" \
[7m--More--(92%)[27m--maxFragmentLength 1000 > fragment_length/stats_input_rep2.txt

]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ more Lys2/fragment_lengths.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls Lys2[K
[0m[01;32malignment.sh[0m   [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII_est.txt  [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa       [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.amb   [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.ann   [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.bwt   [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.pac   [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII.fa.sa    [01;32mlys2-173R2_ME015_S15_raw.bw[0m           [01;32mreadme.txt[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls Lys2more Lys2/fragment_lengths.sh [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Klys2-173R2_ME016_S16_r1[K[KR1_001.fastq.gz [C[C[C[C[1P[1P[1P[1P[1@g[1@u[1@n[1@z[1@i[1@p[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C | more

^C^C^C^X^C
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ gunzip Lys2/lys2-173R2_ME016_S16_R1_001.fastq.gz  | more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls Lys2[Kmore Lys2/fragment_lengths.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls Lys2[K[Kjobsspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" -i  ~/Lys2/chrII.fa ~/Lys2/llys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C~/Lys2/chrII.fa ~/Lys2/ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII.fa ~/Lys2/lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII.fa ~/Lys2/lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C~/Lys2/chrII.fa ~/Lys2/lys2-[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2[1@-[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/l[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/[1@l[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjobs[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[Kcd lyswT[K[K[K[K[K[K[K[Krm -rf lys2Test/
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ cd lys[K[K[K[K[K[Kmk di[K[K[Kdir lys2Test
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ cd lys2Test/
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ cd lys2Test/mkdir lys2Testrm -rf lys2Test/gunzip Lys2/lys2-173R2_ME016_S16_R1_001.fastq.gz  | more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls Lys2[Kmore Lys2/fragment_lengths.sh ls Lys2[K[Kjobsspeedseq align -R -i -m 10 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrIII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.f[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa [1@~[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.f[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.[1@f[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -i -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII[1@.[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[1] 3609
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/full lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 2 --minNonOverlap 10 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin

]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$  ls[K[K[Kls Lys2
ls: cannot access Lys2: No such file or directory
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ cd ..
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls Lys2
[0m[01;32malignment.sh[0m   [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII_est.txt  [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa       [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.amb   [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.ann   [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.bwt   [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.pac   [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII.fa.sa    [01;32mlys2-173R2_ME015_S15_raw.bw[0m           [01;32mreadme.txt[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ more l[KLys2/chrII.fa
>chrII
AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGA
TGTTCAACCAAAAGCTACTTACTACCTTTATTTTATGTTTACTTTTTATA
GGTTGTCTTTTTATCCCACTTCTTCGCACTTGTCTCTCGCTACTGCCGTG
CAACAAACACTAAATCAAAACAATGAAATACTACTACATCAAAACGCATT
TTCCCTAGAAAAAAAATTTTCTTACAATATACTATACTACACAATACATA
ATCACTGACTTTCGTAACAACAATTTCCTTCACTCTCCAACTTCTCTGCT
CGAATCTCTACATAGTAATATTATATCAAATCTACCGTCTGGAACATCAT
CGCTATCCAGCTCTTTGTGAACCGCTACCATCAGCATGTACAGTGGTACC
CTCGTGTTATCTGCAGCGAGAACTTCAACGTTTGCCAAATCAAGCCAATG
TGGTAACAACCACATCTCCGAAATCTGCTCCAAAAGATATTCCAGTTTCT
GCCGAAATGTTTTATTGTAGAACAGCCCTATCAGCATCGACAGGAATGCC
GTCCAATGCGGCACTTTAGATGGGGTAACTCCCAGCGCAAGCTGATCTCG
CAAGTGCATTCCTAGACTTAATTCATATCTGCTCCTCAACTGTCGATGAT
GCCTGCTAAACTGCAGCTTGACGTACTGCGGACCCTGCAGTCCAGCGCTC
GTCATGGAACGCAAACGCTGAAAAACTCCAACTTTCTCGAGCGCTTCCAC
AAAGACCGTATCGTCTTTTGCCTCCCATTCTTCCCGGCACTTTTTTTCGT
CCCAGTTCAAAAAGTACTGCAGCACCTCTGTCTTCGATTCACGCAAGTTG
CTCCATACTTTATAATACAACTCTTTGATCTGCCTTCCAGACATGCGGAA
AACTTGGCTCCCTTGCTTGCCTCTTGTCGAATCCAATACACTAATTGTTT
CTCTTCTTCTAGTAATGGCCAGGTACCAAGCATAATTTCTCTGTATCTGA
GAGTAGATCTCTCTCCTTTTTACGCTAAAATATTTCAAATATCCTACAGG
GTCCCCATGATATGGCTCGATGTCTTCCAAGTATTCTTTGTATTCCTCAT
CATTTCGCAGCATTCTCTCCACAGCTAGTGCTTCCCAAGCTATCCTCCGA
TACGATACTTTCTGGCCAGCCCAACAGACACAGAGCCCGAACATCTTTTG
ACAGCCCTTGCATAATCCGTATTGTGTGAATACTCCCTCTGGGCAGAAGT
ATATGTCAATACCATAGAGGAAAAGATGTTTAATTTCGTCAGACCGAAAT
CCAAGAAACTGTAAGACATTCATATTCTCGGAAGTATTGGGAAATTGTGC
TTTCAGTTTCTTTCTCTCTAGGAAAACCATTTGACTCCCTTTCCGCTTAT
ACGACTCTTTGTTAATGTCGGTGACTGGATGGAATCTATTATCCTCAGCA
[7m--More--(0%)[27m[K]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ wc Lys2/chrII.fa
 16265  16265 829455 Lys2/chrII.fa
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ jobs
[1]+  Running                 speedseq align -i -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &  (wd: ~/lys2Test)
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.833 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.946 CPU sec, 4.947 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.906 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.880 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.909 CPU sec, 4.909 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.919 CPU sec, 4.920 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.888 CPU sec, 4.889 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.872 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.889 CPU sec, 4.890 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.858 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.830 CPU sec, 4.831 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.913 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.889 CPU sec, 4.890 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.944 CPU sec, 4.945 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.877 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.871 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.900 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.880 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.914 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.850 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.903 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.851 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.827 CPU sec, 4.827 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.886 CPU sec, 4.886 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.867 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.834 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.908 CPU sec, 4.909 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.831 CPU sec, 4.832 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.903 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.871 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.837 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.841 CPU sec, 4.841 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.842 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.839 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.932 CPU sec, 4.932 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.846 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.840 CPU sec, 4.840 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.835 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.839 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.849 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.847 CPU sec, 4.847 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.844 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.836 CPU sec, 4.836 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.925 CPU sec, 4.925 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.849 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.834 CPU sec, 4.835 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.937 CPU sec, 4.937 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.838 CPU sec, 4.838 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.842 CPU sec, 4.843 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.845 CPU sec, 4.845 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.538 CPU sec, 2.538 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 848.517 sec; CPU: 757.457 sec
samblaster: Output 15036 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.vMJiPgbEH3MG/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 26424k memory in 18.012S CPU seconds and 14M9S(849S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Done

]0;amv69@login0b:~[1]+  Done                    speedseq align -i -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  (wd: ~/lys2Test)
(wd now: ~)
(rnaseq) [amv69@n440 ~]$ jobswc Lys2/chrII.fa[2@more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Pls Lys2[2Pcd ..ls Lys2speedseq align -i -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/LLys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls Lys2[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pcd ..ls Lys2more Lys2/chrII.fa[2Pwc[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjobs[K[Kcd l[K[K[K[Krm -rf lysw[K2Test/*
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls 
[0m[01;34mfasta[0m
[01;34mGithub[0m
[34;42mLys2[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[01;34mlys2Test[0m
[01;34mminiconda3[0m
[01;34mreads[0m
rnaSeq.py
[01;31mroot_v6.18.00.source.tar.gz[0m
[01;34mspeedseq[0m
[01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ cd lys2Te
bash: cd: lys2Te: No such file or directory
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ cd lys2Test/
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ cd lys2Test/[K[6Pls rm -rf lys2Test/*jobs[Kwc Lys2/chrII.fa[2@more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Pls Lys2[2Pcd ..ls Lys2speedseq align -i -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrIII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrI[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chr[C[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cc -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/ch[1@r[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/c[1@h[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C5 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/[1@c[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[1] 5249
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/full lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 50 --minNonOverlap 10 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin

]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n440 lys2Test]$ ls Lys2[K[K[K[K[K[K[Kcd ..
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ ls Lys2/
[0m[01;32malignment.sh[0m   [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII_est.txt  [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa       [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.amb   [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.ann   [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.bwt   [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.pac   [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII.fa.sa    [01;32mlys2-173R2_ME015_S15_raw.bw[0m           [01;32mreadme.txt[0m
]0;amv69@login0b:~(rnaseq) [amv69@n440 ~]$ mor[K[K[Khead [K[K[K[K[Kcd Lys2/
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ head chrII.fa
>chrII
AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGA
TGTTCAACCAAAAGCTACTTACTACCTTTATTTTATGTTTACTTTTTATA
GGTTGTCTTTTTATCCCACTTCTTCGCACTTGTCTCTCGCTACTGCCGTG
CAACAAACACTAAATCAAAACAATGAAATACTACTACATCAAAACGCATT
TTCCCTAGAAAAAAAATTTTCTTACAATATACTATACTACACAATACATA
ATCACTGACTTTCGTAACAACAATTTCCTTCACTCTCCAACTTCTCTGCT
CGAATCTCTACATAGTAATATTATATCAAATCTACCGTCTGGAACATCAT
CGCTATCCAGCTCTTTGTGAACCGCTACCATCAGCATGTACAGTGGTACC
CTCGTGTTATCTGCAGCGAGAACTTCAACGTTTGCCAAATCAAGCCAATG
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cat [K[K[K[Kgrep -v "^>" chrII.fa | wc
  16264   16264  829448
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ grep -v "^>" chrII.fa | wc[K[Khead
AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGA
TGTTCAACCAAAAGCTACTTACTACCTTTATTTTATGTTTACTTTTTATA
GGTTGTCTTTTTATCCCACTTCTTCGCACTTGTCTCTCGCTACTGCCGTG
CAACAAACACTAAATCAAAACAATGAAATACTACTACATCAAAACGCATT
TTCCCTAGAAAAAAAATTTTCTTACAATATACTATACTACACAATACATA
ATCACTGACTTTCGTAACAACAATTTCCTTCACTCTCCAACTTCTCTGCT
CGAATCTCTACATAGTAATATTATATCAAATCTACCGTCTGGAACATCAT
CGCTATCCAGCTCTTTGTGAACCGCTACCATCAGCATGTACAGTGGTACC
CTCGTGTTATCTGCAGCGAGAACTTCAACGTTTGCCAAATCAAGCCAATG
TGGTAACAACCACATCTCCGAAATCTGCTCCAAAAGATATTCCAGTTTCT
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ grep -v "^>" chrII.fa | head[K[K[K[K[K[K> chrII+[K_seq.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ tail chrII_seq.fa 
GAAAGTAGGGTAAGTTTGAGATGGTATATACTGTAGCATCCGTGTGCGTA
TGACATATCAGTAGAAGTGAAGGTGAGTGTGGCAAGTGGCGGTGGTGGTA
GTGGTGGTATAGAGTGGTAGGGTAAGTATGTATGTATTATTTACGATCAT
TTGTTAACGTTTCAATATGGAGGGTAGAACAACAGTACAGTGAGTAGGAC
ATGGTGGATGGTAGGGTAATAGTAGGGTAAGTGGTAGTGGAGTTGGATAT
GGGTAATTGGAGGGTAACGGTTATGGTGGACGGTGGTTAGTGGTAAGTAG
AGAGATGATGGATGGTGGTTGGGAGTGGTATGGTTGAATGAGACAGGGTA
ACGAGTGGGGAGGTAGGGTAATGGAGGGTAGGTTTGGAGACAGGTTCATC
AGGGTTAGAATAGGGTACTGTTAGGATTGTGTTAGGGTGTGTGGGTGTGG
GTGTGGTGTGTGTGGGTGTGGTGTGTGGGTGTGT
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ tail -500 chrII.[K_seq.fa 
GTAATTTGAAAGGTCTACTGGATGAAAACAAGATAAAGAAACTTATTGTT
CAGCTTAGTGCAAACTCCTCATATATTGGATCTTTACATGGCGAAGTTAA
AAACACAGTCATAAAGAGTTTTGATGAGGCAACAAAGAGGGCTCATCTAA
TGTCTACATTACTCTCTTCATTGGCCCTGATACTCTGCATCCTTAAAGAC
AATCTGGCGAAACCTAAAACAAGAAGATAAACAATATATACCTATGCCCT
TGACCGACTCAATTGATACATTAACAGTATTGAAACTAGATATTCTACTT
GACACTAAACTTTTTTTGTATTTCGTGGAATTGCAACGTTTCTAATTGAC
CGACAGTGCTGAACTGTGAGCGAATGCAACTATCTCTATAGTTTTTTTAT
CCTCTGTAAACTTTAACTAAATACATACTACTTTCATAATCTGTGAATAA
GATGTGGCTGTGATAACCTAAAATAGTCACAAACCAATGAAAAAAGGCTT
CAGAAAACTTGCTGTAAAGTCCCCCCACTTTTTTGTGTTACCGCCACCTC
GAGTGCACTTTTTTTAATAAAGATCTCGTGTAATTGTCCAAATCTGACTT
TTTCTTATAGTCTCGCTGGAACCACAGTGCGGCTTTGCAATTTTGCAAAT
CGGAATTTGAGTCACAGATCCCAGAAAAACTCCACACCTTCCCCACGCAG
CAAGCGATAACGAACAAGTTGTCAAATTAGACCCATAATAATTTTGAACA
CTTCTACCTGTTCATGTCTTTTCTCGAACACTGTCATTTGAAATTATGCA
CTGTGAAAAAAAGAAACAAAGACCAAAAGAATAATATAAATAGTGAAGTA
AAATGTGTTGTAATGCACATGGATCTTGTACTGCTCAAACTTAATATTTC
TATTGTAGAAAAATTTTCGATTTAAAATTGTGAAACCGATTATATAAAAG
TATATTAGCTGACATTAACGTCTCAAAACCAGGTCAATAGCTTTAAAAAT
AAAAATAAATCCCTGCAGAATACTCGGAAAGAATATGTCACGTAAGAGCT
CGACTGAATATGTGCATAATCAGGAGGATGCTGATATCGAAGTATTTGAA
TCAGAATACCGCACATATAGGGAATCTGAGGCGGCAGAAAACAGAGACGG
ACTTCACAATGGTGATGAGGAAAATTGGAAGGTTAATAGTAGTAAGCAGA
AATTTGGGGTAACGAAAAATGAGCTATCAGATGTCCTGTACGATTCCATT
CCAGCGTATGAAGAGAGCACAGTCACTTTGAAGGAGTACTATGATCATTC
TATCAAAAACAATCTAACTGCGAAATCGGCAGGAAGTTACCTCGTATCTC
TTTTTCCTATTATAAAATGGTTTCCTCATTATAACTTTACGTGGGGCTAT
GCTGATTTAGTGGCAGGAATTACAGTTGGCTGCGTACTCGTGCCCCAATC
TATGTCATACGCACAAATCGCTAGTTTATCTCCTGAATATGGTTTGTATT
CCTCCTTTATTGGTGCGTTTATATATTCTTTGTTTGCCACATCGAAAGAT
GTTTGTATTGGTCCGGTCGCTGTAATGTCACTACAAACTGCCAAAGTCAT
TGCTGAAGTTCTAAAAAAATATCCCGAAGACCAGACAGAAGTTACAGCTC
CTATCATTGCAACTACCCTTTGTTTGCTTTGTGGGATTGTCGCCACTGGG
TTGGGTATACTGCGTTTAGGCTTTTTAGTGGAACTTATTTCTCTAAATGC
TGTTGCTGGCTTCATGACCGGTTCCGCATTTAACATCATCTGGGGTCAAA
TTCCGGCTCTCATGGGATACAACTCATTAGTGAATACCAGAGAAGCAACG
TATAAGGTTGTAATTAACACTCTGAAACATTTACCAAACACAAAGTTAGA
CGCCGTTTTTGGCTTGATTCCGTTGGTAATCCTCTATGTATGGAAATGGT
GGTGTGGTACATTTGGTATAACTTTGGCAGATAGATATTATCGAAATCAA
CCAAAGGTAGCAAATAGACTGAAATCCTTCTATTTCTATGCACAAGCTAT
GAGAAATGCCGTCGTCATAGTAGTTTTTACTGCCATATCGTGGAGCATAA
CAAGAAACAAATCTTCAAAAGACCGTCCAATCAGTATTCTGGGTACAGTT
CCCTCGGGCTTAAATGAGGTGGGAGTTATGAAAATCCCAGACGGTCTGCT
ATCTAATATGAGTTCAGAAATACCTGCTTCAATTATCGTTCTGGTGTTAG
AACACATCGCTATTTCAAAATCCTTTGGTAGAATTAACGACTACAAGGTT
GTCCCTGACCAAGAACTTATTGCGATTGGTGTGACAAATTTGATAGGGAC
ATTTTTTCACTCATATCCAGCAACTGGGTCATTTTCCAGATCTGCTTTGA
AAGCAAAATGTAACGTGCGCACTCCGTTTTCTGGGGTATTCACTGGCGGT
TGCGTTCTATTAGCACTTTATTGTTTAACTGACGCCTTCTTTTTCATTCC
TAAAGCGACACTATCGGCGGTTATTATTCATGCTGTTTCTGATTTGCTGA
CTTCTTACAAAACCACCTGGACCTTCTGGAAGACCAACCCGTTAGATTGT
ATCTCATTTATCGTTACAGTGTTCATCACAGTATTTTCATCCATTGAAAA
TGGTATATATTTTGCAATGTGTTGGTCATGTGCAATGTTACTATTGAAAC
AGGCTTTCCCTGCTGGTAAATTCCTTGGTCGTGTTGAGGTGGCAGAAGTA
TTGAACCCAACAGTACAAGAGGATATTGATGCTGTGATATCATCTAATGA
ATTACCTAATGAACTGAATAAACAGGTTAAGTCTACTGTTGAGGTTTTAC
CAGCCCCAGAGTATAAGTTTAGCGTAAAGTGGGTTCCGTTCGATCATGGA
TACTCAAGAGAATTGAATATCAATACCACAGTTCGGCCTCCTCCACCAGG
TGTCATAGTCTATCGTTTGGGTGATAGCTTTACTTACGTGAACTGCTCAA
GGCATTATGACATTATATTTGATCGTATTAAGGAAGAAACAAGGCGAGGC
CAACTTATAACCTTAAGGAAAAAGTCAGACCGTCCATGGAATGATCCTGG
TGAATGGAAAATGCCAGATTCTTTGAAATCACTATTTAAATTTAAACGTC
ATTCAGCAACAACGAATAGTGACCTACCGATATCGAATGGAAGCAGTAAC
GGAGAAACATATGAAAAGCCGCTACTGAAAGTCGTCTGCCTGGATTTTTC
CCAAGTTGCTCAAGTGGATTCAACCGCTGTTCAAAGCCTGGTTGATCTGA
GAAAAGCTGTGAATAGGTATGCGGATAGACAAGTCGAATTCCATTTTGCC
GGAATTATATCTCCATGGATCAAAAGAAGTCTTTTGAGTGTTAAATTCGG
AACTACAAATGAGGAATATAGTGACGACTCTATTATCGCTGGCCATTCTA
GTTTTCACGTTGCAAAAGTTTTGAAGGATGATGTGGATTATACTGATGAA
GACAGCCGTATAAGCACATCTTACAGTAACTATGAAACATTATGTGCTGC
AACTGGGACAAATTTACCGTTTTTTCATATCGATATACCCGATTTTTCTA
AATGGGACGTTTAGTGTAGTAGATAGTAAGTACTTTAATTACCCCCCCTG
TTTTTAGTTATACATGAAAAGATAATTGTGTTATTAATGTAGATTACCAT
CAAATAGCTGGAATATTTATTATTTTGAGTATGTTGAATGGCGAAAGTAA
AAATAAATTTTATAATTTCCTGAAAGCATTAGTACACGAAAAGGGCCGTT
TTCAGTAGTTTAAGGCGCTGAAAAGACATGGTCTAGAAGTTAACTTGAGC
TTGAGCCTATTTTCTACAAATGTCCTTTGAAAATACAAAAATAAAAATAA
AAATGCATTTAAGTATTAAGCTTATGCTAGATAGAGCAACATTTTCCTAA
TTTTTTTTGAATTTATTTCATGGTTTTTAGGCGGAAAGAGTTTGGACGGC
TTGTCTCTCCTAATGTGGAAGAAATTATGTTTTGTTATGAATCTGAAAAG
AAAAATACTATTTTAGCAATACAATGAATTTTAAAAAGTTACCCTGTACT
TTAATCCTTCAATTAAAACACTTCTTAAAATAGTATATTTTGAAGATCAT
CGATATATATACAGAGGCAGTTTTGCAAGGCAGATAACGTTATTGAGTTG
TATGTAGGCTGTGTGATTTTAATCTCATAAATCAATAATGGAATAATTTT
CTTATTGTTAATATCGATTTATATTTTCCAACAATACAATGAAGTAAGTA
CTATTTCTATTTGGAAGGAATTCATTCCCCATTTTAGCTCCTCGAGCGGA
TGAATCCATCACTGTTTTGAAGAAAACCAACAAAGTGTCAAATAGTTGTC
TTTTTGAAATTGGTTCTGAAGAGTTTTCGGAAAATGATCTGATAACAGGC
CTTTCTAAAAATATAAGGTTGAACGAATGTATGGGTTAGGTAATCAAAAT
TTAGGCGCCAACAAGGAATTTTTCTTTAAAATCGCATGAAAAGCCTACAC
TTGGCATAAATAAGGTGCAATTATAAATATAAAAGCAAGATATTTTCGAG
ATGCTTCCAGGATTTATACAATGAAAGAGCCCAAAGCTGCTGATAACGAT
GAAGCCGGAAAAACTCTTCTCCGGTTTAGGTACCAGCGATGGCGAGTATG
GAGTGGTAAATAGCGAGAACATATCAATAGATGCTATGCAAGATAATAGA
GGCGAGTGTCATCGTAGATCCATAGAAATGCATGCTAATGACAATCTGGG
ATTGGTCTCCCAGCGAGACTGTACCAATCGGCCCAAAATTACTCCTCAGG
AATGTTTGAGTGAGACTGAGCAGATATGCCATCATGGCGAGAATAGGACT
AAGGCTGGGTTAGATGTAGACGATGCTGAAACCGGTGGTGATCACACCAA
TGAATCCCGTGTAGATGAATGTTGTGCTGAGAAAGTGAACGACACTGAGA
CTGGCTTGGATGTGGACAGCTGTTGCGGCGATGCTCAAACAGGTGGTGAC
CACACCAATGAATCCTGTGTTGATGGATGCTGCGTTAGAGATTCTTCAGT
GATGGTCGAGGAAGTTACAGGCAGCTGCGAAGCTGTATCTTCTAAAGAAC
AATTGCTGACCAGCTTTGAAGTTGTTCCAAGCAAATCTGAAGGTCTGCAA
TCTATTCATGATATTAGAGAGACAACTCGCTGCAATACCAATTCCAACCA
ACACACAGGGAAGGGTAGGCTTTGCATCGAATCAAGTGACTCTACACTCA
AGAAAAGAAGTTGTAAAGTTAGCAGACAGAAAATTGAGGTTTCCAGTAAG
CCTGAGTGCTGCAACATTTCATGTGTTGAGCGGATTGCATCTCGTAGCTG
TGAAAAGAGGACTTTTAAAGGTAGCACCAATGTTGGAATTTCTGGGAGTA
GCTCTACCGACAGTTTAAGCGAGAAGTTCTTCAGCGAACAGTACTCTAGA
ATGTACAATCGTTACTCCTCAATTTTGAAAAATTTAGGTTGTATCTGTAA
CTATTTGCGTACTTTGGGAAAAGAATCTTGTTGTCTCCCAAAGGTGCGTT
TTTGTAGCGGGGAGGGTGCTTCTAAAAAGACAAAATACTCCTACCGCAAC
AGTTCTGGATGTTTAACAAAGAAAAAGACCCATGGAGACAAAGAAAGGTT
GAGCAATGACAATGGCCATGCTGATTTTGTTTGTTCTAAAAGTTGTTGCA
CTAAAATGAAGGATTGTGCTGTTACCTCAACTATTTCTGGACACTCTTCG
AGTGAAATTTCAAGAATCGTATCAATGGAACCAATTGAAAATCATCTTAA
TCTTGAGGCAGGATCTACCGGTACCGAGCACATTGTTCTTAGTGTTTCAG
GAATGTCCTGTACTGGTTGTGAATCAAAACTTAAGAAATCATTTGGCGCG
CTCAAATGTGTTCACGGTTTGAAGACCAGTTTAATATTATCGCAAGCTGA
ATTTAATCTGGATCTTGCTCAGGGATCTGTCAAGGATGTTATCAAGCACT
TGAGCAAAACTACTGAATTCAAGTACGAACAGATTTCAAATCATGGTTCA
ACTATAGATGTTGTTGTTCCTTATGCAGCAAAAGATTTTATTAATGAGGA
ATGGCCACAAGGTGTCACAGAGCTGAAAATTGTTGAGAGAAATATCATTC
GTATTTACTTTGACCCAAAGGTTATAGGTGCCAGAGATCTTGTCAATGAA
GGATGGAGCGTGCCTGTTAGTATTGCTCCATTCAGTTGTCATCCAACCAT
TGAAGTGGGAAGGAAGCATTTAGTTCGTGTAGGCTGCACGACCGCTTTAT
CCATAATATTGACGATCCCGATTCTCGTGATGGCTTGGGCTCCACAGCTT
CGTGAAAAAATTTCCACTATCTCCGCGTCAATGGTGCTAGCAACTATTAT
TCAATTTGTTATTGCAGGACCGTTTTACTTAAATGCCTTGAAGAGTTTGA
TATTTTCCAGGCTCATTGAAATGGATCTACTAATAGTTTTAAGCACTAGC
GCTGCCTACATATTTTCGATTGTATCATTTGGATATTTCGTTGTTGGACG
CCCGTTATCTACGGAGCAGTTTTTTGAAACCAGCTCTTTGCTTGTAACTC
TCATCATGGTTGGTCGCTTTGTGAGTGAACTAGCTAGACATAGGGCTGTA
AAGTCAATATCAGTACGTTCCTTACAGGCCTCTTCTGCTATTCTGGTGGA
TAAAACTGGTAAAGAGACGGAAATTAATATTAGACTTCTCCAATATGGCG
ATATTTTTAAGGTTTTACCTGATTCAAGAATCCCAACTGATGGAACAGTC
ATTTCTGGGTCTTCTGAAGTCGACGAAGCGTTAATCACAGGTGAATCTAT
GCCAGTCCCGAAAAAGTGTCAATCAATTGTTGTTGCAGGATCGGTGAATG
GCACTGGTACTTTGTTTGTGAAGCTGAGCAAGCTTCCAGGGAACAATACT
ATTAGTACCATAGCCACGATGGTTGATGAAGCAAAATTAACTAAGCCAAA
GATCCAAAATATCGCTGATAAAATTGCAAGTTATTTCGTGCCAACTATCA
TTGGAATCACTGTCGTCACCTTTTGCGTTTGGATAGCGGTTGGAATCCGT
GTGGAAAAGCAATCCCGCTCCGATGCCGTAATTCAGGCCATTATATATGC
CATTACGGTACTTATCGTTTCGTGTCCCTGCGTGATTGGACTTGCCGTTC
CTATCGTATTTGTTATTGCAAGTGGCGTCGCTGCGAAAAGAGGGGTAATC
TTCAAATCAGCAGAGAGTATAGAAGTTGCTCACAACACTTCGCATGTTGT
CTTCGATAAAACGGGTACCCTAACTGAAGGAAAACTTACTGTAGTACATG
AAACTGTTAGGGGTGATCGTCATAATTCTCAATCTTTGTTGCTTGGATTA
ACTGAAGGAATAAAACACCCAGTTTCCATGGCAATAGCATCCTATCTCAA
AGAAAAAGGTGTTTCTGCTCAAAATGTTTCTAATACAAAAGCTGTGACTG
GTAAGCGGGTAGAAGGAACATCATACTCTGGTTTGAAGTTACAAGGAGGG
AACTGTCGTTGGCTTGGTCATAACAATGATCCTGACGTTCGAAAAGCCCT
TGAACAAGGATATTCTGTATTCTGTTTTAGTGTTAATGGTTCAGTCACTG
CAGTTTATGCATTAGAGGACTCTTTACGGGCAGATGCTGTCTCCACTATT
AACTTGTTACGCCAAAGAGGGATTTCACTACACATTTTATCAGGGGATGA
CGATGGAGCCGTTCGTTCTATGGCAGCCCGTCTTGGAATTGAAAGCTCCA
ATATTCGTTCTCACGCAACGCCTGCAGAAAAGAGTGAATATATTAAGGAT
ATTGTCGAAGGAAGAAATTGCGATAGTTCTTCGCAGTCAAAAAGACCGGT
TGTTGTTTTTTGCGGTGACGGAACAAACGACGCAATTGGTTTGACTCAAG
CAACGATTGGAGTTCATATCAATGAGGGAAGTGAGGTTGCCAAGCTAGCT
GCTGATGTAGTTATGTTAAAGCCAAAGCTCAACAATATTTTGACTATGAT
AACTGTAAGTCAAAAGGCCATGTTTAGGGTCAAATTGAATTTCTTATGGA
GTTTTACTTACAACTTATTTGCTATCCTTTTGGCGGCTGGTGCCTTTGTT
GACTTTCATATTCCACCAGAGTATGCGGGTTTAGGGGAACTAGTTAGTAT
CCTCCCTGTAATTTTTGTAGCTATACTTCTGCGTTATGCAAAGATTTAGT
CCAGGTACTGCTGCTATTTGATTGTAGATTTTCTTTTTTCTTTTCTTTTT
TTTTTTTGACGACTCTGTAATACTCTATTTATTATTTAGTTTAGTTTTCT
ATTTAATATGATGGAATTCATAAAAAAAAAAAATACACATAGCCATGCCA
GGTAATTGCAGATCAACTGATAAATTAGAAAAAAATTAATGCATCTTTAA
GGTTTTAAATTAGAAATGTTTTAACTTTAAAGTCACTGAGCAATAAAAGT
TCTACCTAATGTTGTAAAACTGTATTCATAACCGAAACACATTATGATTA
TGTCATTTGGTATTCCACACCAAAGCGAGGAGCATTCAAAATGATACCAT
TTATGATACCGGCAATCAAACCAGCAATTGGTAAAGTTAAAAACCAACCA
GAATAACACCAGGCTACCATTCTCCAATTAACTGATTTGAGATCCTTGTT
ACATAAACCAACAGCGACAATACCACCAACGGCGATCTGGGTTGTTGAGG
TAGGAATACCTAATTGGGTAGCCATGACAGTAGTAATAGCAACAGCTAGT
TCAATTGAAAAGCCTCTTGATGGCGACTGCAAAATCATCTTATTACCTAG
ATTTTTGATAATATTGTAACCATAAGTCCAGCAACCAATAACTAAGGCAA
CACCACCATAAGCCAGAACCCACACGGGAACTTCGGACTTTGCCCCAATA
GTGTTAGTTTTCCAGATCACATACACAGCAGACAAAGGACCAGTAGCGTT
GGCAACGTCATTAGCTCCATGAGCAAAAGACATAGTGGCTGCAGTAATGG
CTTGGAGAACCGAATAGATATATTCTACTCTATTGTCGTAAAATTTAGAT
CTTTCGTACATTCCTTTCAGGTCACCAGATAACATATCTCTATCATTAAC
TTGAGCATGAATGACGTCTTGAGTCCAACCATGAGAGATTACTAACCAGA
ACAATAAGGGCCATTTTTTAGGTCCTTGCTTTAATAATGACCACCAATAT
TGTTTCGTTGACAACTTTGTTTCTGGTTCAGTTTCAGTTCTAACCAGGTC
CACTTCCTGGATGTCTTCTTTGTTTTTGACGGAATCATTAGAATTACTCG
CTGCCTTATTTTCTTCGTCTTCAACAGAAACAGTTGTTCCAAGATTTCTT
CTGCCCTCGTAATAATCGATTGTTAATTGATGGCCTTCTGGCATTGGTGG
GATATCATCAGTGGACTTAAAGTAAAAAGATGGACCTCTGAAAATATCAA
TCAACTTTAGTGTCCAATCTTGGTCCAAAACTTTTCTTCTGTAGAATGGG
TAGAAAAAGATGAAGTAAACGATCGAAGCAATTGCACCTGTGAGAACAAT
AGATACGGCAGTTTCAGTTTCAGATAAATCGTCCAAGTGTAGGTTTGGAG
AACCCTTCCAGACAATCAACATTGTTAAGATAGAGAAAGTGGCGAATACT
AAAACACCAACCAGCAGTAAAGCATTCTTAATCGATCTTTCCAAAGACTT
AACTTCAAGGACAGAAAACCTAGAAATTGAAAAAACTATAGCTGCGATCG
CGCCTGCCAAAATCGGAGCAATGAACCATGACGCAATAATTTGAGAAACA
CCACTCCAACCCCAAACGACACCGTTAGCTCCACCGGCTGCAATCCCAGC
GCCAATTGTACCACCAACAATGGAATGTGTAGTAGAAACTGGCATTCCGA
TTGCAGTAGCAAATGTTAACCAACAAGACGAGCCAATCAAAGCACTGGTC
ATAGTAAGCATTAAAACAGCGGGGTCGTTGGTAAAAATGGAGGAATCTAT
AATGTTGTTCTTGATAGTACCAGAAACTCTTGCGCCTGCCAAGACAGCAC
CCAAGAACTCACAGAGACCCGCCAAAACCATGGCTTGCCAGTATTTTAGA
GATCTAGAAGAGATCGACGACGCGAATGAGTTCGCCACGTCGTTTGCCCC
GATGTTAAAGGCATCCAAAAATGCAAATAACATGGCAATGGCAAAAATAT
AGTCAAATTGATGTAAAGCCATTTTTGCTTAATCTTTGTTTATATTGATT
CGATTAGATACGCTCCAGTATTCTCACCTTTGATCTATGTCACTCATTCT
ATGACAATTCATGTAAAATAACCTCAATGTAAAGATCATCTTCAGCAGGT
TTATATATAATTTTCTTCATATCGAAAACCGGGCTTAGTGACATGAATTG
TTTGGAGATGTCCACCCAGTAGACATTGTAAAAAAAATCTGCTATTGACT
GAGTTAATCTAATGATTTACATAATAGAAGGATCCAAAGTGGCTGTGACA
TCTAGTATTGATAGATTAGTATTATTACTATTTGTCTCCCACGTGCTGCA
TTGTCATATGCAATTTATTAAGATTACATAAACTCCTTTGTACGGTATAT
TCTTAAAGCCTTTCAATGACTCGGGCCAATTTTTAGCAATATTTCGACAT
TTAAGGGCCCACTAACAAATTAATGGCACAACGTGGGGATGACGAAAAAG
CAGAAAAAGAAAAAAAAGGTCTATCGCACAGCCACACACCCTTGTGGTGA
AGCCGTTTTGTGATCGGTGTGGCGCGATCTGTGAAATTTAAACTTTTTTG
CGGGTGAAACCGAGATTTCTGAAACTAGATTTTCTGGCTTCGCCAAAGAA
AGATGCATCGAATTAATGAAATTAAACGGATGTAAGGAATGAAATTATAA
CGATTCCGCTAATGTTCTTTACTGACGAGTGTCACTGAAGTACTTACTCG
TGAACAAAAATTAACCTATATCAGTAATTTTGATATTGTTAAAAGTAGGT
ATCTCTATCAAAAGAGATTATAAGACCCATCGGCAAAACTCGAAATATCG
TCTTGAGAAAATCATTATACAGTACATGGTGCAATTTTAAATGATTTTTA
AATACTATTATATAATCGATACATTTAGTACACGCGAAGACAACGTAGTG
TTGAGATTCAAAGAGGTTACAGTTGAATACGTGACAAAGCTGACGAGAGT
ACTGTGAATTCAACAAACCATAAATGGTCACTCCAAGTAACGGTATTGTG
ATTTCAACAGAAAACACAAGCATTGTGTTAGCGTGCTCGTAAAATATTAT
TTCAGCGGTGAAGCAGATATGCGTTAAAGGTGGGCTCGCTATTAAATCAT
GAACGAAAAAACAGTTATGTCGTTACTGGTGTGAGTCGATATTACGAAAC
CACTGGCAGGTAGATGGATAGAATGGGACTGATTGGAACAGCGCAAGTTT
TTTTCCGTGGTCGGAATTCTCGTAGTAATATTGGAAAATAGTTGGAAGAA
AAATTGTGTGAAAAAATACATGCTGAAATAGTCAAACGAAGAGAGGTGAA
GAATAGATAAAGCTGTTGAGAGGCAAGACAATGTTTTCAAGATGATCAGA
AAAGGATACGGTCCAATATCTATTTATATTCATTGCCCTACCGTGGTATG
TTAAAAAAATATGTTACATTTATTGCTCCCATTGGATTTTGCACAGGTGT
GAAAGAGCTCAGTTGTCAAGATTTAGTCATTAAGAAGGGCCGCAGCAGCT
TTTTGTATAATAGAGCGTCTTTTTTGTTTGTGAAAAAAATTTTATGGTGA
GATATTGTTCGATTCTACGAAGTCATTTTACTAGTTTATGGACTCTGATA
TAAGACAGAGTTGACAAGGAAATGGTGCCGTGATTGTTTCCGTGTACAGC
TTTTGAGAACTTCCTTGAAAACCAATCATCTAGCACTTTCATTTCTGGGG
AAAAACCTGGAACCAAATCTTGAAAAATAAATTCCCCAGAAGTTTTCCTT
ATTCCGTGTTCTAATCTTCTCGTTCACTTTGCAGTGACATTCCACGGCCA
TGCGCAATTTACCCCGCCCCCGGATTTTATTGTCCGTACCGCCATTTTTC
AATAGATTAAAAAGGAACAAAAAATCATTTCAGAAGGTTTCTTTCTCGGG
AAAACACTAGAGTGTAAATATTGAATATCAAACATCGAACGAGAGCATCT
TGAAGATATTTATGTTCTAAATATGACTTTAGTCAAGTATGCATGCGACT
ATTGTCGTGTCCGTCGAGTAAAGTGTGATGGTAAAAAACCATGTAGTCGC
TGTATTGAGCACAATTTCGATTGCACATATCAGCAACCATTAAAAAAAAG
AGGCTCAAAGCCTATTGGAACTAGAAGCTTAAAGTATATACCAAAGGCCA
AAATGTTTATAGATAATAAAAGTTGTACGGCAGCGGCAGAAATATTAATG
AAGGTTCCTAAAAAGGTGATTGATCAGTGTTTGAGGCTTTATCACGACAA
TCTATATGTTATCTGGCCTTTACTCTCTTATGATGACCTTCACAAGCTTT
TGGACGAAGAATACAATGACCATTACGTTTATTGGTTTCTCGTAGCTCTT
TCAGCAGCCAATCTTAGCGATCTACAAAGCGAATTAGAATCTGAGGGGGG
ATTTTCGTTTACTGGAAAACAATTAGCCGTTCTCTGTATGTCCTCACGCC
AACAATTTGATGACCTTAGCGGCAGAGACATTTTCCGAATTATGACATAT
TATTGCTTGCTACGTTGTTTTTCACAGTCTTCTGATGTAAGAAATTCATA
CAGACTTTGTCGTGAAGCTATTGGCCTTGTTATTGTAGCAGGGTTACATC
GTGAAAAAGCATACGAATCACTATCATTTCGTGAGCAACAGCTTTTACGC
AAGGTGTATTATTTGCTTCTCTTGACGGAAAGATACTATTCCGTATATGT
TCATTGTGTTACAAGTTTGGATACCACAATAGCTCCACCTCAGCCAGAGT
TCGTAACGGACCCTCGACTTTCTTTGGATAGCTTTTTTGAGATGATTAGA
GTATTTACTGTACCAGGTAAATGCTTTTTTGATGCTTTGGCTACGGAGTC
TACTAGCGGTTCTTGCACTGAAGACTCACTGAAAAAAATATGGAAAGAGC
TTCACACAGCATCCCTTGAAATAGAACCATGGTCTTATGGCTATGTGGAC
ATTTCATTTTCTCGACATTGGATTAGGGCGCTGGCTTGGAAGCTAGTGTT
TCAGATGAATGGTACCAAGTTTTTCTCAAACGCCAATAATGCTCACATAT
TGGTCGAAATTGCAAAGGATATGCTGGACGACATATTCTTAACTCCAAAC
AACCTGTATGATGTACATGGTCCTGGAATACCAATGAAATCATTGGAAGT
AGCCAATGCATTGGTAGATATCGTAAATAAGTATGATCACAATATGAAGT
TGGAGGCTTGGAATATTTTGTGCGATGTATCCAAGTTCGTTTTCTCCCTG
AAACATTGCAATCATAAAATGTTTCAAAGGTTTTCAACTAAATGTCAGAG
TGCTCTAATCGATTTGCCTATCTCTAGACCACTGCGCCTAAATGATGATT
CCAAAGATGAAGACGACATAATTCCTTAATTTATTGTTCACGCCGTTCAC
TTATACGAGATAGATATACTGATAGAGTGTGAGTGATATTCTTAAGTCTT
GCTTTTCGAGGGTGTAAGAAGCTATGTTCTTCAGGCGAGATTATTCTACT
CCTGCCTTACTTGTTTGTAATATTTAGTTCTGATGGTCATGATAATTCTA
TATACAGTTACATTAAGTATATACTTAAGCGGGCAGCTTACTAATATAAA
TTTTGTGGCATTTTTGTTGGGATATGAGAATCATGTATCGTTGATTTACA
AAGCGAATTTACGTTACCAGGAATAGGGAATACTCTCTTGAATTCTAACA
TAAGCACAGAAATGCTGAAAGAATACGTCAAAAAGTAAATTTACAGAATT
AAAAAAAAAATAATTGTTGCCGGAACATGAATAGAGTGTATCAATATACA
ATATAAAAATTCAAGCATTTTCATTAACGGGAATGAAAAAATTGTATATT
AGTACTTCTTTTTGCAAGATATTTAAATCTAGGACCCTCATCACAATGAT
TCATTTAAATCATTAACGTTTTTTCAGAACAAAATAATAACCTCTAGTTG
AAAAAACTTCAAAGCCGCAACAAAACCAAAAAAAAGTCATAATGTCGAGT
AAAAATAAACTCGATGTGTTAAGTACTAGTTATATAAAATAAAATTAAAT
AACGCCGTATCTACCTACTGGCTAAAAAAATCATTTGTTCACAACAGATG
AGGTGTTTCGCCCTTCATCTACCACAGAAGTTTCCAAATCTTCCTTCGGA
TCTTTAACATTAATTTCTGCAGCTGCTGCTTTGGCAGCTGCAAAAGGGTC
GACTTTAGTCGACTTGAACTTTCTTGCTGGAACACCAAGTCTAAACAATT
CATTTATCTCAATAAAAGTCCTGCCAGCGGTTTCTGGTAAATCGACAACA
GCCCAAGCTAAAGTGGCCAGACAAAATCCTCCCCAGAAAAAGCCTGATTT
AGCACCCCAATTCCATTTCTCTGAGTTCAATTGGTACATGATCAAAACTG
TAACTACAACTTGGATCACATTGTAAGCATTACGAGCCAAAATAATTGTT
TTGGTTCTTAGCCTTGAAGACGGTATTTCAGACACTAAGCAAAAAACAAC
AGGTGCAATACCGAGGTTGTAAAAGAACGCGACAACCATTAGAAGAGCAC
CACTACCCATTTTAGCGCCATGAGTGTCTGAACATCCTAAACCACCGATA
ATGAAGAACATAATAGCCTGAAAAGCCAGCCCAAAAGCATAAAGGTCAAA
TCTGCCACAATATTTTGAAGCCCACCAGGATATAAACGTTGCAGCAATAC
CAAGACAATATTGGATAATACTGAAAGTAAAAGCCGTATCAGTGCTAACA
CCAGCTTTTTCATAAAAGTAAGTTGAATAACCAATTAATGATGCACCACA
GGAGCATTGACCGATCCAACATAAACAAGCTATTCTCGTTCTTCTCCTGT
TAATACCATCTTTCACACAATCCCAGTAAGTTCCTTCATCAGACATTTTC
TGCTCCTTTTCTATAGTAGTTTTGATTTTATCGAGTTCCATACTCACTAG
TAATTCTTTCTCGGGTCCTTTACCACTTAATGTTCTTTCAAGTGATCTCC
TCGCTTGATCAATCCTTCCTTTTTTAACCAGCCACCATGGAGACTCTGGT
GCAAAAAAAATACCTACCGCCAAAGGAAGGGGCCAGATCCACTGCAAAGC
AAAAGGTAGCTTATATCCTAGTTCTGAGTTGGCATATTTGTTCTGGGAAT
TTTTCATAATACCAGCAGCGAAAAGTTGACCGAACGCCCAACATAAATTA
GAATAAGTCGTCAAATAGTATCTTAGGGCCAAAGGACAAATTTCAGAAGC
ATAAGAAACGGTCAAACATTGGAAACAACCCCATGGCATACCACACAATG
CCTGTCCCACGGCAATCATACCCAAACTCTTGCAAAAATACAGAATGAAA
ATGAAAGCCGCTAAAAAGAACAACGCCATGATCAGAGTGTAACGGTTGCC
CATGTAATCTACAGAAGGCCCAGTCATTTGCAAACCGACAATCTCACCTG
CCATGTAGCATAGACATAGACCGATTTGCCAGGAAACTGAAATTTCATAA
TCTCCTGTATTGCTATTCAAAGAACCATATTTTTTTTGAAAAACAGGCAG
GGCATAGAAAGCTCCTAGAATGGCTGTGTCATAACCCTCTTGAATCAATG
TTGTGGAAACTAATAGTGACCAAGCAGCAGCTTTTGGATATGTCTTCAAA
GCTGTCATGAGTGGCATTCCCCTCTCACTTTCATCTGCCTCTTTGGCGTC
CTGCATAGCTTCATCGAGAAGGTCGGGGACTTCTTCATTATTATCGTTTG
GTATTAGTGAACCTGGACCGTACTCAAGATGGGAAAGATCAAAATCACTT
TTCTTACCTTGCTCCTCCATCTCTATCGAGTTGAATTCGGTAGCGTTCAC
GCCATTCTCGATCTCATCTAAGTGTGAGTCGTTCCTGTCTTTTTTTCTGT
TTATTAATGAGGATAATCCCTTCATAGTTAATTAATAGTCTTGGATGTAA
TTCTTATTGTTATACTGAATACGCTAAAACCACTCACAACAAGTATGGAG
TATATTGTGTCTCTTTATATACTGAGTACTTATGCAATATGCGCTCACTC
AGGATGAAATGTACACAGCCGAAAGTATATTGAAAGCTGCCTCTGTGGAA
ACTTCTATCTAATGTTGTCTCCAGATGTAGACTATGAGGCCTGAAGAAGT
CTTTAAACACCTGTTGGAGAGTATAAGGAGACTGCTACAACAACGTCTTC
CCCACAAAAATTATGTGGAGGCCGGTATGATACCTGCACAAACGTTAAGT
TACACATGAAAAAGAGACTGACATAACTTTGATCTCTGAAAATATGTTTT
CCCCTGAGTAGCTTCACTGCTTGGATACCAATACGAATAGACCTTGGCTA
TAGTAAGTTGCATCTGTACCGTAGAGATTCTTGCAACCTCGCTTAAACTC
TCGCTTTTATATAATATTTCTCCTTATTGCGCGCTTCGTTGAAAATTTCG
CTAAACACGGGGTTTAAGTTTAAGTTTACAGGATTTATCCGGAAGTTTTC
GCGGACCCCACACAATTAAGAATTGGCTCGAAGAGTGATAACGCATACTT
TTCTTTTCTTTTTTCAGTTCCTAGCGTACCTAACGTAGGTAACATGATTT
GGATCGTGGGATGATACAAACAACGTAAGATGAGTAGTTCCTTCCTCAAT
TCTTCTTTCAGCATCATTTTCTTGAGGCGCTCTGGGCAAGGTATAAAAAG
TTCCATTAATACGTCTCTAAAAAATTAAACCATCTATCTCTTAAGCAGTT
TTTTTGATAATCTCAAATGTACATCAGTCAAGCGTAACTAAAATACATAA
ATGACTATTTCTGATCATCCAGAAACAGAACCAAAGTGGTGGAAAGAGGC
CACAATCTATCAAATTTACCCAGCAAGTTTTAAAGACTCCAATAACGATG
GCTGGGGTGATTTAAAAGGTATCACTTCCAAGTTGCAGTATATTAAAGAT
CTTGGCGTTGATGCTATTTGGGTTTGTCCGTTTTATGACTCTCCTCAACA
AGATATGGGGTATGATATATCTAACTACGAAAAGGTCTGGCCCACATACG
GTACCAACGAGGACTGTTTTGAGCTAATTGACAAGACTCATAAGCTGGGT
ATGAAATTCATCACCGATTTGGTTATCAACCACTGTTCTACAGAACACGA
ATGGTTCAAAGAGAGCAGATCCTCGAAGACCAATCCGAAGCGTGACTGGT
TCTTCTGGAGACCTCCTAAAGGTTATGACGCCGAAGGCAAGCCAATTCCT
CCAAACAATTGGAAATCTTTCTTTGGTGGTTCAGCTTGGACTTTTGATGA
AACTACAAATGAATTTTACCTCCGTTTGTTTGCGAGTCGTCAAGTTGACT
TGAATTGGGAGAATGAAGACTGCAGAAGGGCAATCTTTGAAAGTGCTGTT
GGATTTTGGCTGGACCATGGTGTAGATGGTTTTAGAATCGATACCGCTGG
TTTGTATTCGAAACGTCCTGGTTTACCAGATTCCCCAATTTTTGACAAAA
CCTCGAAATTACAACATCCAAATTGGGGGTCTCACAATGGTCCTAGGATT
CATGAATATCATCAAGAACTACACAGATTTATGAAAAACAGGGTGAAAGA
TGGTAGAGAAATAATGACAGTCGGTGAAGTTGCCCATGGAAGTGATAATG
CTTTATACACCAGTGCAGCTAGATACGAAGTCAGCGAAGTTTTCTCCTTC
ACGCACGTTGAACTTGGTACCTCGCCATTTTTCCGTTATAACATAGTGCC
CTTCACCTTGAAACAATGGAAAGAAGCCATTGCATCGAACTTTTTGTTCA
TTAACGGTACTGATAGTTGGGCTACCACCTACATCGAGAATCACGATCAA
GCCCGGTCAATTACGAGATTTGCTGACGATTCGCCAAAGTACCGTAAAAT
ATCTGGTAAGCTGTTAACATTGCTAGAATGTTCATTGACAGGTACGTTGT
ATGTCTATCAAGGTCAGGAGATAGGCCAGATCAATTTCAAGGAATGGCCT
ATTGAAAAGTATGAGGACGTTGATGTGAAAAACAACTACGAGATTATCAA
AAAAAGTTTTGGTAAAAACTCGAAGGAAATGAAGGATTTTTTTAAAGGAA
TCGCCCTACTTTCTAGAGATCATTCGAGAACTCCCATGCCATGGACGAAA
GATAAGCCCAATGCTGGATTTACTGGCCCAGATGTTAAACCTTGGTTTTT
CTTGAATGAATCTTTTGAGCAAGGAATCAATGTTGAGCAGGAATCCAGAG
ATGATGACTCAGTTCTCAATTTTTGGAAAAGGGCCTTGCAAGCCAGAAAG
AAATATAAGGAACTTATGATTTATGGTTACGATTTCCAATTCATTGATTT
AGACAGTGACCAGATCTTTAGCTTCACTAAAGAGTACGAAGACAAGACGC
TGTTTGCTGCTTTGAATTTCAGTGGCGAAGAAATTGAATTCAGCCTCCCA
AGAGAAGGTGCTTCTTTATCTTTTATTCTTGGAAATTATGATGATACTGA
CGTTTCCTCCAGAGTTTTGAAACCATGGGAAGGTAGAATCTACCTCGTCA
AATAAAATTAGTGCCGACTTTTTTTTAGCGCGTACTTTAACGAAATAACA
GATGATTTTTCACATGATTTTTGTTAGATAAATTTTTTATATGTAAATGA
TGATAACGTAAAAGCACTGTTGATAATTTGTTTCACCATTATGGGTAAAT
GTGTTTTTCTACATGATCCTCGTTCATTATGATATTTAGCGTGTATATAA
ATGTGAATTCCAAATTATTAATGAAGCATAAGAAGCACTATCCTTTCTCT
TCGGATGAAAACAAGGGAGAAGAAACCTGTGCTGGTATTAATGCTGGAAT
GTCTTGCTAAGAATCATACAAGGTGGTAGTTTTATTTAATAAAGAAAAGA
AAAGGACTAGATATAAAAAGTGAAATGAATATAAGATAGCGTTAAGAGAT
GCCCACAGTACTTGACACATAATTTAGCGTTTTCTCGGGAAGCTCTGTGA
TTTTATGATTCAATAACACAGCGTAATTGATTTCGTGATGGTTCGATCCT
ATATGTAATCTCATGTAACACTCAGGCGAGTTACAAAATCGATTCAACAT
TGCCGGCTTATGCGTTTACGTCAAGTCTGAGCATGCCTACCCCCTTCCGA
ACCCGCCTTTTATTGTCTAGCCTTCAGATGAACTAAACCAATCATCTGTC
CATAATCCATATGCTTTAGACAGTGTGATTAAGCAAAAGAAAATAAGCGC
ATAAGAATCTTGCTACTTCGGTAACTCTACAACATTAACACCCCACAATC
AATATATAAAAGCCAACGAAGTGAAGAGAAGAGGTGGAATGACGCTCTTA
TCCTTTGAGAAATTTGACTACGAAAATCTGTGTCCCCTATGCCATTAGTT
ATTGAGCTATAACTATATATCAGAGAAGTGTAGTTATTCTTCAGCAACGG
GCCTATAATCTGGATACGTATGATTACTTATCGCTGTAATAATTGTAAAT
TCCTGGAAGAAAAACACATGACCAGAATGATAGACATATTGAAACGGTGA
ATAAAAGGGAGAAAAAGGCTTAAAGGCTTTCTGTATTAGTAACACTAAGC
CCTCTATCAATTTCATCCAAACAGAAAGACTGCAGGTACATCCATAGGAT
AGAAGTTCTGTATGTAAGCCGCCACTTTTTGTCTCCTTCACTTACCATAT
AATGAATAGAGAAACGTAGACCTAGGCGGCAACCGTTGCCTAACATACGA
AGCGCTGGTGCTGTTCTCCGATTATTAGTATTACAAAAAAAATTATATAA
TACTTATTAAGATGTTGATTTATCAATTTCCGGTATAGTTTCCGGTATGG
CCAGCTTGATCCAGTGGAAGTTCCGCTGTTTCAGAACTAGGGCTTCGTAG
CACCTCGAATGCTCATTTATTCTTGTCAACATTTTTGCTGGCAGTGTATA
AGACTGTAGGCACCTACAATATACGACTCCGGTATTCGATAAGTCTTTCA
CTTTCTATTTTAAGAAAAACAGAATCGACAATTTTCCCGTAGCAACCGTT
TAGAGCACAAAGATTAGGTGGCCTCTTAACGAGGGTTCAAAGCAAATTTG
GTTTTGGCTTTTTCTTGGCCAAAAGCTGCAGCTGCATCTCTGAAGGCACC
CTAAAGGGATTCTTCGGAAGTATGTACACTGTGAGAAAACATTCTTGTGC
CTTGGAAATGCAATAAAAGGTATAGGCACTATGAAGCGTGCGCCTCGTAT
ACGGGACCTATGAAAGACGCATCGTTCAAGTACAGAAGCACCGTAATAAT
ATGAATAATGAATGTGGGATGAAAATTGTACACTGAGGCATTTTAGGTGA
GAGATGGGTGCCAGATGATAACTCGTTTGTGCCAGGGAAGTTGGCAAGAC
ATTCATATAAATAGAGCTGCTGTAGCTATCCATCTTTGAGGTATGCGCTT
TCATTTCACTATTTCTTGTTAAGCTTACATCAGCACTAAAAAACAAAACA
AATACAATGGTCAAACTAACTTCAATCGCTGCTGGTGTTGCCGCCATCGC
TGCTACTGCTTCCGCAACCACCACTCTAGCTCAATCTGACGAAAGAGTCA
ACTTGGTTGAATTGGGTGTCTACGTCTCTGATATCAGAGCTCACTTGGCC
CAATACTACTCTTTCCAAGTCGCTCATCCAACTGAAACCTACCCAGTTGA
AATCGCTGAAGCCGTTTTCAACTACGGTGACTTCACCACCATGTTGACCG
GTATTGCCCCAGACCAAGTGACCAGAATGATCACCGGTGTCCCATGGTAC
TCCAGCAGATTAAAGCCAGCCATCTCTAGTGCTCTATCCAAGGACGGTAT
CTACACTATCGCAAACTAGAGACTGATGCCTTTACGAATGAAATTCCATA
AACCTTAAGAAATAACGGAAAAAAAAAAAAAAGCTTTTTTTTTTTTTGAT
AGTATAAATAGTTGATTATATGTAAGTGTATATTAATATTGTTACTACTG
GTCAATCGTGATATTTATGAACAACTTGGCGGAGCAAGGACAAGAATCCT
CTCTTCCTTTTGTGGTATTCTTCGATGTGTGTCCACTTCAACGACATGGG
TCATCAATATCTATGTTAAAAAATCATATTTTAGACTCACTTGCTAGTAA
ACCGGTTGATGCTATTGTTAATATATAACGACAAATGTTCAAGCAATTAT
ATAACCATTTTCTTCCATATTCACCTTAAACGAGGTCGCCTTTATTTTTT
TTTTTTTTTTTTTCAGGGCATCGATCGGCCCGGAGTCGTCGCCTTCAAAT
GTGTCAAATTTTTAAGATTAAAGTTATCGATCTTGAAGTTTTTCGTGGCA
GGAGGGTTTCTATTTAGTGTTCAATAAAGGCTTTCATGAGCTTTTGTATA
TTCCTTGATTAACAATAAATGTGGAAAACAAGAAGGGTAATTGTGAAAGA
GTCCGATTGTAGTTGATGAACAGTAAAATCACTTATTATTTAAGGATTCC
GCTGCGGTATGCGTTTTCTACTGATGTGTGGAGCAAGCCACGCCATGTGA
TTAACCTTGCTTGATAAAAACACAAACCATCGTTCAGAATATGCATGGAA
TATAGCATCACTGGGAGGAGAAAGACAATAAGTTTTGCGCATATGGTAGG
ATGGTGGCACATCGAGTTCTCTCAACCAGTGAGAAATAGGGAAAAAGAAA
ATGGTTGTAATGGTAAAAAGTAGTCTCGTTTTGGTAATTCGCAGCTGACA
AACTACAAAATATATAAATTGAAAAAGTTGTATTTATCTCTACACTAAGA
GCACCTCACTGCGGGATAATTGCGCTTCTTTAATGTATGGCCATAGTTCC
ACATTCAATGGTAAAGGCCACATAGATTTCTTCGCAGATAGAACGCGGTA
GAAGAAGTGGTTAAAAAACCATTCACAGTCAATCCCGTCGAAGAAAAACT
CTTCATTCTTCCAGGCTTTTTTCTCAAACAAGTACCTATTCATTTTCCTT
GCAATTTCGTCCCATCCATTCGCACCACTTTCTTGCTCATTTATAATAGT
CGACAAGAACTGCATCTTGTGTTCCATGCTCATAATCAAAACCCTTATAT
TTTGGAAACCTTGTACCAACATGAAAAGAATCCACCCGAGATACAAGGTG
CGTAATAGAAGGCACATTCCCCGTGACACATATATGCAGCACAAAAAATT
AAGGAATGGTATCAACATAAAAATATTGGAAATCCTCTTTAAAAACCAAG
TAAGCTTAAATCGGTAAGCTTCCTTGGGAAGTTTAGCATCTTCCAGGCCA
ACAGGGCTCCATGATTTTTCAGTATTAAACAATTTCCATTGTTTTTCAAC
TTCTGTAAAATAAACTCCCAATGCTTCTTCAATGTAAGGGACGGAATCCT
TAAATGACTTAACCTTGGCAGCTTTATCTTTTTTCAAAGAAAATGGTTCG
AGAAGGGTTGTTCTGAACGCTTCTTGACAGACCATGGCATTGAAAAAAAA
GTACTTAGTATTCCAAACGTTATTTTCATATAAGTACGAATTTAGATTTG
CTGCAACAACTTCCCAATCATGAGGATCAGAACTTGGTGTGTTTTCAGTA
ATCTCTTTGCAAAACTGAATGAGTTGTTTCGATAAGGAACGCTTACGAGA
AAGTCCACAAATAACAAGGACAAATATTGGTCCCAGAAACAGGACCAGAA
GTGAAACTATAAGTGGGTAAATACAATTGTTGGAAAGTTTCCACCAGACG
CTAAGTGGTAGCCATAATAGCATCCAGATGCGAAACGCTAAGGACTTGTA
AATTTCATAACAAAACCAGGTAAAGCTGCTTCTGAAAAGATCTTGAGGTA
GAACAATCTTTTGGGATTCGAGCTGTTTGAAGGATAATACATCTACACTC
TTCTCATTTTTAAGTTCATTCTCTTTCATTTTCGGTAGTGAGATGGCAGT
TCGAGGGGTTTTTTATTCGAGATAGTAACTTCTGGCTTTTCGCTTTTATA
CAGCACAGCAGAAAAAAAAAGCCGCCGAGGCGCGCGCGTTCATGCAATGG
CTCAGTAACCTCGTGATAGAAAAAGGGCAACAATATTGGGCTATTTTAGG
CAAAGAAACTCAGCTATTCGAAAAGGGCATCCATTACATTTCCGGTTTTC
TATCTAGCCAACTCGATAATCGTAATAACGAATTTACAAAACTTTAATGC
GGGTACATCACGGTGTGCCGTAACGTTGGTTCACATTTAGGGTGCGACCA
GCAATGTCACTGCTCGTACAGCGGTTACCGCTTGAATGAAATACATATTT
TAAGCGTAGATTTCCTGTGACAAAACTGTGTAAACATCTAGTAGAAAATA
GACGTAGCTGTCACAAATATTTACACAGGAAAGAGTCTGTCCTACGTATC
TGACATGAAGATTCATAGAACCAAGTTACTTCCCAATGTGGACAACCTTT
CGATACCATGTCAATAGCTTCCCCTTATGTTCGGTGTCACTGTAAAACGG
ATCAAAGCAAAACCTAGAGGTACGGTGGTACTCAGATCATGCATGACCTC
TGGGTAATTAGCACTTCTCCCGCTTGTTTTGAGATTCTGTATATAAATAT
TGCAAACAAAAGGATAGAGCGCGGATGGCAGCCCTTACAGTAAAAATTAT
TCGTTTTAATCATGCGTCAGTGTGAGATTCTATGACAATAGTATAAGATG
GGGTGAAGTAAAAGCGTCTGTATGACTATAGAGTACAGTTATATTACAAT
ATATGGAATAGAGCATAGTGGTATGACGATATTAAGGAACTTTAAGTTAA
TGATACCATGATAGTATTAAGACGCAATTAAGTGTGTTTATGTATTATGG
TTGAAGGATAGAATATTTTTATGTTTAGGTGATTTTAGTGGTGATTTTTT
TGTAATATTGGCATAAGTGTATATAAATTGAGTGGTTAGTATACGGTGTA
AAAGTGGTATAACGTATGTATTAAGAGCTGTTATACAATACTTGGGGCCG
CCGAATGAGATATAGATATTAAAATGTGGATAATCGTGGGAGTTATGCGT
AAATGGCACAGGGTATAGACCGCTGAGGCAAGTGCCGTGAATAATGATGT
GAGTGCATTTGGTACTGATTTAGTGAGAATGGGGCCATGGTGTGGAATAT
GAAAGTAGGGTAAGTTTGAGATGGTATATACTGTAGCATCCGTGTGCGTA
TGACATATCAGTAGAAGTGAAGGTGAGTGTGGCAAGTGGCGGTGGTGGTA
GTGGTGGTATAGAGTGGTAGGGTAAGTATGTATGTATTATTTACGATCAT
TTGTTAACGTTTCAATATGGAGGGTAGAACAACAGTACAGTGAGTAGGAC
ATGGTGGATGGTAGGGTAATAGTAGGGTAAGTGGTAGTGGAGTTGGATAT
GGGTAATTGGAGGGTAACGGTTATGGTGGACGGTGGTTAGTGGTAAGTAG
AGAGATGATGGATGGTGGTTGGGAGTGGTATGGTTGAATGAGACAGGGTA
ACGAGTGGGGAGGTAGGGTAATGGAGGGTAGGTTTGGAGACAGGTTCATC
AGGGTTAGAATAGGGTACTGTTAGGATTGTGTTAGGGTGTGTGGGTGTGG
GTGTGGTGTGTGTGGGTGTGGTGTGTGGGTGTGT
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ 259578.[K[K[K[K[K[K[Kcut chrII_sq[Keq.fa -c[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K-c469748-473926 < chrii[K[KII
chrII_est.txt  chrII.fa.amb   chrII.fa.bwt   chrII.fa.sa    
chrII.fa       chrII.fa.ann   chrII.fa.pac   chrII_seq.fa   
(rnaseq) [amv69@n440 Lys2]$ cut -c469748-473926 < chrII_seq.fa [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [K[1P [K[1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [1P [K[1P [1P [1P c a t [C c h r i [1P I I [1P [1P [1P [1P [1P [K[1P [1P [1P c u t [C - c 4 6 9 7 4 8 - 4 7 3 9 2 6 [C c h r I I _ s eq.fa [C > [C c h r I I _ l y s 2 . f a 
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_lys2.fa 
16264 chrII_lys2.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ tail chrII-[K_lys2.fa 










]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ hea[K[K[Ktail[K[K[K[Khead chrII_lys2.fa 










]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ more chrII_lys2.fa 






























[7m--More--(0%)[27m[K





























[7m--More--(0%)[27m[K





























[7m--More--(0%)[27m[K





























[7m--More--(0%)[27m[K





























[7m--More--(0%)[27m[K





























[7m--More--(1%)[27m[K





























[7m--More--(1%)[27m[K





























[7m--More--(1%)[27m[K





























[7m--More--(1%)[27m[K





























[7m--More--(1%)[27m[K





























[7m--More--(2%)[27m[K





























[7m--More--(2%)[27m[K





























[7m--More--(2%)[27m[K





























[7m--More--(2%)[27m[K





























[7m--More--(2%)[27m[K





























[7m--More--(2%)[27m[K





























[7m--More--(3%)[27m[K





























[7m--More--(3%)[27m[K





























[7m--More--(3%)[27m[K





























[7m--More--(3%)[27m[K





























[7m--More--(3%)[27m[K





























[7m--More--(4%)[27m[K





























[7m--More--(4%)[27m[K





























[7m--More--(4%)[27m[K





























[7m--More--(4%)[27m[K





























[7m--More--(4%)[27m[K





























[7m--More--(4%)[27m[K





























[7m--More--(5%)[27m[K]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ rm chrII_lys2.fa 
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ jobs
[1]+  Running                 speedseq align -i -m 10 -c 50 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &  (wd: ~/lys2Test)
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cute [K[K chrII_lys[K[K[K[K[K[K[K[K[Ksamblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.837 CPU sec, 4.839 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.964 CPU sec, 4.965 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.924 CPU sec, 4.929 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.898 CPU sec, 4.899 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.858 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.926 CPU sec, 4.927 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.878 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.935 CPU sec, 4.936 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.905 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.867 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.887 CPU sec, 4.888 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.909 CPU sec, 4.910 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.858 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.877 CPU sec, 4.878 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.872 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.930 CPU sec, 4.930 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.899 CPU sec, 4.899 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.869 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.867 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.906 CPU sec, 4.906 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.884 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.881 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.961 CPU sec, 4.961 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.869 CPU sec, 4.869 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.858 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.897 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.917 CPU sec, 4.917 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.886 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.898 CPU sec, 4.898 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.930 CPU sec, 4.931 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.897 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.857 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.864 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.878 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.874 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.868 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.923 CPU sec, 4.923 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.870 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.843 CPU sec, 4.844 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.873 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.857 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.900 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.883 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.851 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.880 CPU sec, 4.880 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.866 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.849 CPU sec, 4.850 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.882 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.926 CPU sec, 4.926 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.848 CPU sec, 4.848 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.870 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.920 CPU sec, 4.921 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.887 CPU sec, 4.888 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.873 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.854 CPU sec, 4.855 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.873 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.872 CPU sec, 4.872 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.862 CPU sec, 4.862 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.928 CPU sec, 4.929 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.860 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.950 CPU sec, 4.951 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 4.880 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.877 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.853 CPU sec, 4.854 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.878 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.865 CPU sec, 4.866 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.875 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.852 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.855 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.852 CPU sec, 4.853 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.909 CPU sec, 4.910 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.863 CPU sec, 4.863 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.856 CPU sec, 4.856 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.861 CPU sec, 4.861 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.942 CPU sec, 4.943 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.864 CPU sec, 4.865 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.874 CPU sec, 4.874 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.846 CPU sec, 4.847 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.954 CPU sec, 4.955 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.859 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.867 CPU sec, 4.868 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.859 CPU sec, 4.860 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.874 CPU sec, 4.875 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.897 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.858 CPU sec, 4.859 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.553 CPU sec, 2.553 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 850.758 sec; CPU: 759.453 sec
samblaster: Output 15036 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.Nhr6L1wXolmd/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 26588k memory in 18.129S CPU seconds and 14M10S(850S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam

cut: you must specify a list of bytes, characters, or fields
Try 'cut --help' for more information.
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ Done

]0;amv69@login0b:~/Lys2[1]+  Done                    speedseq align -i -m 10 -c 50 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  (wd: ~/lys2Test)
(wd now: ~/Lys2)
(rnaseq) [amv69@n440 Lys2]$ cut jobsrm chrII_lys2.fa [2@more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctail[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@wc -[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[29@cut -c469748-473926 chrII_seq.fa >[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ head chrII_lys2.fa 










]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ ls -hal
total 4.5G
drwxrwxrwx  2 amv69 ckaplan 1.1K Jul 23 11:36 [0m[34;42m.[0m
drwxr-xr-x 21 amv69 ckaplan 1.4K Jul 23 10:57 [01;34m..[0m
-rwxr-xr-x  1 amv69 ckaplan 2.4K Jul 22 15:03 [01;32malignment.sh[0m
-rw-r--r--  1 amv69 ckaplan 243K May 28  2012 chrII_est.txt
-rw-r--r--  1 amv69 ckaplan 811K Sep  2  2011 chrII.fa
-rw-r--r--  1 amv69 ckaplan   11 Jul 23 09:01 chrII.fa.amb
-rw-r--r--  1 amv69 ckaplan   38 Jul 23 09:01 chrII.fa.ann
-rw-r--r--  1 amv69 ckaplan 795K Jul 23 09:01 chrII.fa.bwt
-rw-r--r--  1 amv69 ckaplan 199K Jul 23 09:01 chrII.fa.pac
-rw-r--r--  1 amv69 ckaplan 398K Jul 23 09:01 chrII.fa.sa
-rw-r--r--  1 amv69 ckaplan  16K Jul 23 11:36 chrII_lys2.fa
-rw-r--r--  1 amv69 ckaplan 811K Jul 23 11:18 chrII_seq.fa
-rwxr-xr-x  1 amv69 ckaplan  915 Jul 22 15:03 [01;32mfragment_lengths.sh[0m
-rwxr-xr-x  1 amv69 ckaplan  32K Jul 22 15:03 [01;32mfragmentSizes_input.png[0m
-rwxr-xr-x  1 amv69 ckaplan 6.3K Jul 22 15:03 [01;32minput_adjusted_reads_per_million.sh[0m
-rwxr-xr-x  1 amv69 ckaplan  44M Jul 22 15:04 [01;32mlys2-128delta_ME013_S13_raw.bw[0m
-rwxr-xr-x  1 amv69 ckaplan  45M Jul 22 15:04 [01;32mlys2-128delta_ME014_S14_raw.bw[0m
-rwxr-xr-x  1 amv69 ckaplan 501M Jul 22 15:10 [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m
-rwxr-xr-x  1 amv69 ckaplan 525M Jul 22 15:13 [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m
-rwxr-xr-x  1 amv69 ckaplan  44M Jul 22 15:13 [01;32mlys2-173R2_ME015_S15_raw.bw[0m
-rwxr-xr-x  1 amv69 ckaplan 627M Jul 22 15:07 [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
-rwxr-xr-x  1 amv69 ckaplan  38K Jul 22 15:07 [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
-rwxr-xr-x  1 amv69 ckaplan 468M Jul 22 15:19 [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
-rwxr-xr-x  1 amv69 ckaplan 488M Jul 22 15:21 [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
-rwxr-xr-x  1 amv69 ckaplan  43M Jul 22 15:22 [01;32mlys2-173R2_ME016_S16_raw.bw[0m
-rwxr-xr-x  1 amv69 ckaplan 587M Jul 22 15:16 [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
-rwxr-xr-x  1 amv69 ckaplan  38K Jul 22 15:16 [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
-rwxr-xr-x  1 amv69 ckaplan 1.1K Jul 22 15:22 [01;32mreadme.txt[0m
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ grep '[K"a"[K[KA" C[KchrII_lys2.fa 
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ rm chrII_lys2.fa 
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ w[Khead ChrII.[K[K[K[K[K[KchrII.fa
>chrII
AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGA
TGTTCAACCAAAAGCTACTTACTACCTTTATTTTATGTTTACTTTTTATA
GGTTGTCTTTTTATCCCACTTCTTCGCACTTGTCTCTCGCTACTGCCGTG
CAACAAACACTAAATCAAAACAATGAAATACTACTACATCAAAACGCATT
TTCCCTAGAAAAAAAATTTTCTTACAATATACTATACTACACAATACATA
ATCACTGACTTTCGTAACAACAATTTCCTTCACTCTCCAACTTCTCTGCT
CGAATCTCTACATAGTAATATTATATCAAATCTACCGTCTGGAACATCAT
CGCTATCCAGCTCTTTGTGAACCGCTACCATCAGCATGTACAGTGGTACC
CTCGTGTTATCTGCAGCGAGAACTTCAACGTTTGCCAAATCAAGCCAATG
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ head chrII_seq.fa 
AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGA
TGTTCAACCAAAAGCTACTTACTACCTTTATTTTATGTTTACTTTTTATA
GGTTGTCTTTTTATCCCACTTCTTCGCACTTGTCTCTCGCTACTGCCGTG
CAACAAACACTAAATCAAAACAATGAAATACTACTACATCAAAACGCATT
TTCCCTAGAAAAAAAATTTTCTTACAATATACTATACTACACAATACATA
ATCACTGACTTTCGTAACAACAATTTCCTTCACTCTCCAACTTCTCTGCT
CGAATCTCTACATAGTAATATTATATCAAATCTACCGTCTGGAACATCAT
CGCTATCCAGCTCTTTGTGAACCGCTACCATCAGCATGTACAGTGGTACC
CTCGTGTTATCTGCAGCGAGAACTTCAACGTTTGCCAAATCAAGCCAATG
TGGTAACAACCACATCTCCGAAATCTGCTCCAAAAGATATTCCAGTTTCT
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_seq.fa 
16264 chrII_seq.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_[K.fa
16265 chrII.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII.fa[K[K[K[K[K[K[K[K[K[K[KchrII_seq.fa 
 16264  16264 829448 chrII_seq.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cu[K[Kwc chrII_seq.fa [2P-l chrII.fa_seq.fa [1Phead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5P.farm chrII_lys2.fa [6@grep "A"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -hal[Khead chrII_lys2.fa [31@cut -c 469748-473926 chrII_seq.fa >[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K-c 469748-473926 chrII_seq.fa > chrII_lys2.fa [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cut -c 469748-473926 chrII_seq.fa[C[C[C[C[C[C[C[C[C[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa2 chrII_seq.fa- chrII_seq.fa1 chrII_seq.fa0 chrII_seq.fa
AATAGCCCT
GTTCAACCA
GTTGTCTTT
AACAAACAC
TCCCTAGAA
TCACTGACT
GAATCTCTA
GCTATCCAG
TCGTGTTAT
GGTAACAAC
CCGAAATGT
TCCAATGCG
AAGTGCATT
CCTGCTAAA
TCATGGAAC
AAGACCGTA
CCAGTTCAA
TCCATACTT
ACTTGGCTC
TCTTCTTCT
AGTAGATCT
TCCCCATGA
ATTTCGCAG
ACGATACTT
CAGCCCTTG
TATGTCAAT
CAAGAAACT
TTCAGTTTC
CGACTCTTT
TGCCATCTT
GTAGTGGCA
GCTGGAGTT
TTTCGGTGG
GCACTAGTC
GTCGGTACT
TGGTAGTAG
GTCCTGACG
GCTGGCAGT
TAGCATTAG
ACGTTGGTG
ATTGGTACT
TAGTCCTGA
GTACTTTCA
AGTAGCATT
TGACGTTGA
TCAGTGGTA
ACTAGTCCT
TGATGCTGG
GTACTGGCA
GCTGCAATA
ACGGTAACG
CTGTCCATT
GGAGCCACA
AGTCCATAG
TGGTAATTC
ATAGATAAC
TCAATAATA
AATGTCAAT
TACCGTCAG
AAGCTTCCC
CCAATTCTT
TCTGGTTCA
CTGTGATTC
CGGATTTCT
CCTCTGCTG
CTTGGCCAG
CCTCAGGGG
TCAAGGTTA
AAAGTTGTG
TCCTAAAGG
AAATTAGTG
GCCATCGCA
AACCGCGTC
GGTACAAAC
TATCAAGGG
GTACTGCCA
AACTGATGC
TGCGACGAG
TTACTCTTG
ACTACGTCT
TTCAAGGCC
TCTTTAGTC
CGTTGCGCT
AATTATTTT
GGCAGCACA
TCGTTACAT
TAGATCACG
TTGCTTGGT
AACATGTAG
AAGACTCCT
TCGTAGAGC
AGGACACGG
AGAAAGGGT
ACAACGTGT
GGGATTGGT
CTTTTGTAC
ACCTTTTCC
CCAGACTTT
AAATAAAGT
CCGACTCAA
ACTTTCATT
GCTATGCTT
TTTCCGTCT
GAAGAAGCA
GAAAATTCA
CTTCAAGCA
TCCGGCCTG
CATGGTGCA
CTGTTCGTT
TGGACCTAC
TTACATTTC
CTTTTTGGC
AAATGTATT
ATCAAGTTA
GCTAGATCG
TTGCCTATT
CCTTGTCTA
TAACACTAC
ACTTACCCT
ACCATACCA
AACCGTCCA
ACCACTTAC
CTGTTGTTC
ACACATATA
CTCACCTTC
ATATACCAC
ACCCATCTC
GCACTTGCC
GATTATCCA
TATAACTGC
CCACTCAAA
AAATCACCT
ACACTCAAT
CTTAATATT
TTTCACAGA
CTATATTCA
TATGATACA
CTAAAAGCA
CGAAGAGAC
TGTAGAATT
AGCGCCGTA
CACCCTCTA
AGTTACAGT
TGTCAAAAA
CTCCACTAC
TATGGCCCG
TTTTATGGA
TTGTTTATT
ACAATAGTG
TCACGAACA
ATATAATCG
TTTTTCATT
TCCCTAGTT
TGGCTGGCT
GTCACTTGG
GTTGAAAAC
CGGCTTGGA
TAGACACCC
GGTGGTTGC
GAAGTTAAT
CTTAACAAG
GAAGCAGCT
GATTCGTTA
TCTTTCACA
AATCATACA
TCATGTGTA
CGGGGGGTG
CAGTCAAAA
TACTGTCTA
AACATCTTT
TGCAGGGAG
AGCTGTAAA
AAAATTCCT
TCTATAGCG
CAAAAGGCA
AGTTTGCAA
AGCTGCCAC
GGGATGAAA
ATATTATCA
TTCAAATAT
CTGAATGAC
CTATTATGT
AAAAATCAA
CATATACGG
TTAGTGGAA
ATTAACATA
CAGATTCCC
TCTACATAC
CATCAAAAT
AAATTGTAT
TTATTAAAT
ACTGGTTAC
CTAAGGCGG
ACCTCGCAT
GAATAATAG
CCAAAAAGC
CAGCAATAA
CATATTTTT
CCTATGTAC
ATAGGGCGT
AGTCATTAT
GTTAAAATT
CGTCCAATC
CGTAAGGAT
TTATTACCG
TTCGCAAAA
CTTGCTTCA
CTATAGTTG
AAACCTCAA
TAACTGTGA
GTTTCAAGT
ACCGTCTTT
TCCAAGTTT
ACCGTCACG
AGTAAACTA
TCGCTTCAA
CGAGCAAGG
AACCTACAG
TTCATGGTT
CGTGTCTAA
ATCCATTAC
TCCGTACCG
GCATCCTCG
TACCGCCCA
CTAGCCCAT
AGGATTGTA
GATTCGTTC
AATTTCCCT
TTCAACGTA
CCTTAAGCT
ACGATCATA
AATAAATGA
TGTCCTTAG
ATAGTAACA
TGATATAGT
TTCCTAGAA
ACCTCAAAT
CCCGATATC
CATATTCCA
TTAGAAATG
GTCCAATAT
TATTACTAT
GTACTTGGT
ATCAACTAA
ATTGCAGTG
AATTTGAAA
TGTTTCCGA
TAAGTACTT
CTGTGTGAA
TAAAGCAGA
CACCTTTTA
AGATTTTTT
CCATGCTAA
CTGGGTATA
AGGTTTGTG
TAGAAAATT
GAACCGGTT
TACATTGGT
GGGATTTTC
TACGCTGGC
GAACAGTCT
ACTTCTAGC
AATTATCTT
GACTGAATG
ACCGCCCGG
TGTAGTCAA
ATCGTTCCT
CCTCTCTTT
TGGACATTT
AGGCCAATC
GCTGTTTGG
GAACTATTA
ATAAACCGC
CTCTATTTG
CTGCCAAAA
TTTATGCCG
ACCATTTGA
TCTTCAAAT
CAATTGACA
AGTAGTAAT
AACAGAATG
GAGGTTTTT
TTGCATCAA
AACCCTCTC
TTTATATAA
AATCATCTG
GTCAAAACA
TTGCTCGAA
GTGGTTTCA
AAAGGTTCT
CTTTTCAGG
CTGCCATAT
ACTTCATCT
ATATAGCAG
GCTCTTTTA
GAAGTTCTA
AATTTTTAT
CACGGTATA
TCGGCGGCA
ATGCCACAT
GGTTTTCAG
GTTTTTGTG
GTCATGATT
GCCTGTCAG
TTACCAAGA
TTTAGCCGC
GCGGAGATT
AAGGACACT
TTGAAAGGT
CTATTGTCA
TTCTGTTTG
TTCCCCACT
TCCACAGTT
TGACTATGC
CGTTGGATC
CACCTTCTG
AGTTTCTCA
ATCATGCTG
TTTTATCAT
GCTAATTTG
CCCCAACTG
TTGTGTCTT
CCACAGAAA
ACATTCAGA
CACAGTGAC
TGAGGAATA
AGTTTTAGC
ATAAAAATT
CCACAATAT
GTGGCCATG
GACGATGTA
TGGAATCCT
TGAATTCGT
TTGCTGAAG
CTTCCCTCT
GACCCATCC
CTTCAGCGA
GAGTCGTTC
AACTGGAAT
TTCTGGCTT
TTCCTGGCA
TATTCCAAT
GTTGATTAT
ACGTTAATA
GTATTTGGA
CACCGTCAA
TGCTTTTCC
TCTTTGCGC
ATATGTGTT
TTGCATCGC
GGTCTTCAA
GACGTGCCT
CTAGTCTTT
GGCTATCTT
TAAACTGCT
CTTCTCTCC
ATAGTTTTA
CGTAAGTGT
GTCTCTACT
CTCCTGAAC
CACGCTTGT
GGCTGGGTA
TACGTTTTT
GCAAGATTT
CCTGGAGTG
GGCATGCAT
ACTTCAGTT
TCTGTCTGC
GTTTGACGT
ACCCACAGT
TGTGCTTCA
TCTATAGGC
TAGAAGGTG
CATTGGATA
TTTAGTTCT
AGAATAATT
TCTACTCGT
TGCGGCACT
CGATACCAT
TTTTCAATA
ATCATTCAA
CAGGTTCAT
ATAACTCTC
CTGCCTCCA
CAATAGCGG
ATTTCTACA
TTTTTCATA
CAGATCTGG
ACGTACTTT
ATTTTTCCT
TATCAGAAA
TTTATACCA
ACCAGAAAC
ACCTCCATG
TCAATCATC
TCGCGTCCT
TCCAGAACA
TCATTTTCC
ATCATGTCC
ATAGATTCT
TCATTGTTG
TAAGAGAGA
TTGGCATTC
CCATTATTA
CGTATTTGT
CGTTATCGT
AACCTCCAT
GTTCCTCAC
CTGCACCGG
TTTAAATCA
AGCTAAGGT
GGTTCAGTT
TTGGGGGAT
TACACTGGT
AATAACTAA
ATGTCCCAA
TGCTATAAG
TCTTTGCTC
TGGGTATCC
TGCCTTACC
AGCCCACTG
TTAAAAATC
TTCTGATTC
TGTGTAATT
TAGTGGGTC
ATTATCATA
TTCTATACG
ACCATAGAG
GTGTAGCGC
GTATATGCT
CATCCATTG
ATACAAGTG
CATATCATA
TAACTAACC
TAAATCATA
TTTAGAATA
TAACCAAGA
CTTGCCTAT
ATATTCCGC
TGCGAGTAC
ATATTGAAG
TTTTCCCGC
AGTCAGCTG
TCGGCTTCA
GTTTGTATG
CCGAATCAT
TGTTCATTC
CTCACTATT
TAAAAGGAG
ATCTTCGCC
GGCCAGGTA
TTGGTTTGA
ACCAACTGG
CCTTTCGAC
AAGTTAACC
GTCATATTG
ACCATGCCT
ATGGTGATC
AAGCTTTGT
CATATCAGA
AGTTATACA
AACTCAGCT
ATCCACAGG
GCCCTATGG
GTTCTAAAC
TATGGTCGA
TTAAGTTAT
TCATGCTGT
CTTGTAATC
AAGTTTCCT
TGGTTCTCA
GAAGTAGGT
GTCAACTAA
TGCTCACGT
GTGCAGCCT
CCTGCAGTA
TAGTTTCTG
TTTCAAAAG
GTGACCCGG
TGTACTATA
CGTTCGGTA
CGTTTTTTT
GCGAGGAAC
CGATGGAAT
GAAGACATT
ATATATATC
GAGCCGTCG
CTGTTTTCT
TCCCCGTTC
GGGTCCCTA
GTACTTAAA
TTTTCGCCA
ACGGTGCTG
TTATGCTAT
GCTCTGCTG
ATTCATAGT
TGTTATAAG
GCATGTAGT
AATTATCGT
TTCATCACT
CATGAGAGA
TCTTCATCA
GTTCTGTTT
TACCATTTG
TTGACGGGC
CCTGTCATT
TGCCCGAAA
TTTGAAATA
TCCGGATGG
TAGATAGTA
GGTGAGACA
CGGAGGTGG
CCTGGTTGC
ATATTACCA
TAGAACCTC
TGATTCGTA
TGTAAACTA
TGTTTTCAC
TTGGATCAT
TGACCGGAT
GGCTACGGC
AAGGTGGTA
AACTTCAAT
TTTCGGATT
AGAGATTGT
GTGCCCTTC
TCTTCTCTT
CAACGGGAT
GTGACTCTT
GCATATCGG
CGTATTTCT
CTATTAATA
AGTTCTAAT
ATTCTTCAT
TTACTAAAC
TTCGGTAAG
CTGGCGACA
TTTCTATTG
AGAGGGTAA
CTAAGAATA
ATGGCGTTT
CTCCTCTGT
TGTTTTCAA
TCGAAGTTT
TTCTTCATT
TAACCCTTG
TTAACGGAT
TTCAACAGA
AATTATTTT
CTTTCGGTA
CTGGTCTAT
CATTGAGTC
GTTGGTAAG
CTCATTGGA
ATTCTATGA
AGAGAAGTT
ATCATCAAA
CCCCAGAGA
CGGTTGGTG
GATAGAGCC
GCTGTTTGT
CTGATGTTG
AGGTGAGTG
TGGTGGAGG
GAGGGTTGA
AGAGTGGGA
CCAATAGGG
CACCTTTCC
AAGACAGAC
CGTCCCTTT
GTGGAGAAC
ATGGATATC
TCGGTAGAA
TAGCGATGT
TTTTTTTGC
TGCTTGCGA
AATTAAACA
AGGGAATAT
CAGATGAGA
GCTTTGTTC
AATTTGGTC
TAATAGTAA
TAAAAGTTA
ATCAGCGCT
GTACAGTAC
GTGTTCTTT
TATCTTGTT
CTATTGTCA
GCTCAAATC
TCACGCGTA
TCTGTTGGA
AGTATTCAA
GTGATCAAA
TAAAAATCA
TCATATACG
ATTAGTGGA
TATTAACAT
GCAGATTCC
ATCTACATA
ACATCAAAA
CTAAGGAAG
TTACCGGAA
AACACCTGG
AACCTGCTT
ATGATGACT
ACCATCTAT
AACCGGACC
TCCTCACCT
AGCTAAGAC
CAGAAGAAA
AACTCTAAT
ACAAATGAC
TTGCCCCAT
AATTATGCT
AACTAACAA
ACGACGGAA
ATTCAAAGG
TCAACTAAT
AATATCGTA
CAATTAATA
ATACAAACA
CGACTAACA
AAACCAAGA
AAGGGTGAA
TAAGCGATG
GCCAACACA
TTGATTCAG
CATGCAACA
CATTCCTAT
CCAAAACAT
TTAAGTTTG
AAACACTTT
ATGGAGACT
TCAAAGCTA
TCCATATCC
TTCAGAAGT
ATTGAATGG
CAAAAGCAC
AATCATATG
CATCACTTA
GAAAACCAG
CTATACTCA
AATGCTCGC
CAAAACTCT
CAACCACGG
ACTTTATTA
TCATCTATG
TAGTCTCAC
GGACTGGAC
CAACCATAA
CCTTACATC
TTAAAAAAG
ATCCAAATT
TCAATCGTT
GAGCAGTCA
GATTGAAAT
TGAACCCTT
AAAGAAGTT
ACGATCTCG
GTACCATTG
GCACGAAAC
CTCACAGGA
TGGGTGGTA
AAATACAGG
CAGTGACTC
ATAATACAC
CATGCGACT
TGATTCTAT
CTACGGACA
CAGACTAAT
TACCAAAAG
TATCCCGAG
AGATCGAAG
AATCAAACC
ATGAAGACA
ATTAACCAA
TAGAAATGA
ACAAAAAAC
ATTCAACAC
TCACTATGC
ATATCACAC
GAAGAATTA
ACTACGTTT
GGTATGAAA
GTTCGCGGA
ATTCGTTGA
AAATCATAA
GGTGAAAGT
ATATCAAAG
AAAAATTAC
AGCGCTCCA
AGATGAAGA
GTCTAGCTT
ATCAACACA
CATGACATA
TAATATGGC
ATAAGCGAT
TAACATTTT
CTTCGTTAA
GAAGCTATA
CAAGAAACC
GTATAATTA
ACGAAGGCA
ATACTACAT
TTCCGATAA
TATTACATT
ACTAGTATT
CACAAATGA
GATTGATAA
ATAATATTT
TAAATCCTT
CTTAATCAC
AATAATAGA
AATAACACT
CGAGCAAAA
AGCAATGGA
AGTGTAGAT
GTTGATAAT
TCTTCTTAT
TATTAATTA
TGTGACGAC
AATAGGTCT
TCCTTCTGC
AATATACGA
TAATTACTC
ATGAACAAA
GCTTCAGTA
CTAATAATA
ATTTAGCTC
CATCTGGAG
GCATTCTTT
GCCCGGGTG
AATGGGCCC
ATCTTGTAT
AGACTTCAA
CAAGTAGAG
TGTCTCCAT
TAACTGATT
AAAGAAAAG
TCCTCATCG
CTATCGCAA
AATGTTGGC
ACTCTACCA
AGATTGGCT
GGAAAGAAT
GAGTTCTTG
ATTCAGGCT
TTTGAACTT
GACTGGTTA
GTCCCAGTC
CCCTATTGA
AAGTCAAAG
CAAACCGGT
AAGAGAGTT
TAGACACCA
AAGAAACTT
TGCTCAATT
TTATTGTTG
CCATTTACT
CGCTTTGAT
AATTATCTT
GATGTCTTT
TGAAAAGGA
AAGGTGGTG
GATGGTCAA
TGCCATTAA
TTAAGGCTT
TACAGAGAA
CACCAAGCA
AAAACCAAT
GCCGGTGTT
ATTTGAGTC
TGACCGAAA
CTAAAGAGT
AAAATAAAA
AATTTTAAA
CAAACAATA
TTATTATAT
TCTAAGGAA
TTTTTATTT
TCCATTCTT
CCGAATTTC
GTTAAAAAA
AATCAGTGG
GCATTCTCC
TCCTCGATT
CTATTTCTG
TGTGAACAT
TGACTTGAA
CTATTAATT
TTAGAAAAA
CGAATGGAC
TGAAAACCC
GCATACTCT
TTCACAAGA
CTGAGGAAT
CATTTGCAC
CAGTGACGG
CAGATCTGA
TTTCCCGAT
TATCACTTA
ATGTACCAG
GTTCCATTT
TCTTATGGC
CTGAGTACA
GCAAAAAGG
TTTATTAAG
AGTGGATAC
TCTAGAGCT
AGAATCTCT
AATTTTTGA
GTACGCTAG
TATATATAT
GAAACGGTA
GTATTGTCA
AAATACTCT
CAAAAAAAA
GAAAATAAC
ATCCACCAT
ATAAAATCA
TATGACTTG
AGCATCTGC
ATTCAGTGA
AAGACGAAT
AGGGCTTGG
CTGGTATGC
GTGTACAAC
GATGAAAGA
CCTTGGTTG
TTAAACATA
TACACAAAA
TTGAAAGAG
ATAAGTACT
TTCCATGGA
ATCAAATTG
GTTGTCGAA
CAGATTTGA
ATAATGCAG
CTGTGCTAT
TGATGATAA
TGGCATACT
TGGAAAGTA
CCTGTTGGA
CAACGGACG
GTTCTGGAA
CTTTGCCTC
AGAACGACA
AGAATAACA
TCATAGGAA
GCACAGTTT
GAGCACTTT
AAAGGAGCA
ATCCGTTTG
GGAACAGAT
CGAAGATCA
TTTCGAAAA
ATCAACAAT
CTCTAATGA
AGTTTTCTG
CTAAAGGAC
CAATGAGCA
TAGTGAATT
ATCTTTTTT
GCCTTCGGG
AGTGGATAT
GGATAGATC
TTAAATTAG
GGAGTTGGT
ATTGAATGA
GCCAACCTA
AGCGAGGTT
ATTCAGTGA
GCCTCTTGT
GATGTGAAT
AGGGAATCG
ATGAAGCAT
GTAACTGCA
TACGATTAT
TCATTGAGG
GGAACTAGA
GGAGATGGC
CTTGGTTCA
GTCTCAAAA
TTAAACATA
TCCATGAAC
AAAGCTACT
GTTGGTGTA
ATTGTTACC
CAAACGCCA
TGGTTTGCG
AGAGCAAAG
TATTGCGCA
TGAGGTGGT
TATTTGACC
CTGAAAGAT
TTAGTGCCG
GCCATACAC
ATGTAGTTT
TCCACTCTA
TGCTATTCG
AGATCAGGA
GTTTCTCAA
TATTGTCTC
CGAGGCTGA
TCTTTCCAG
GGAACAGGA
GACAGGGGA
CGGTAAACC
GTATGGTTT
TAAGCAGAG
AGCAGAAGG
AAAATACTT
CAAAGATAA
ACATATAGA
ACGTTTGAT
GATGAAATG
TGTTTACTG
TATGGGAAA
CATTTCCCA
TTTCATTTT
ATTGTCAAG
CCACAGAGT
TTAGAAGAA
TCTAACAAG
AGTCGCTAA
ACGCCGCTG
TTGGCTAGA
TTTGGCTTT
CATTTAATT
AAATCTACC
GTTTTCATT
AACTTTTGT
GTGATGATA
TGGCGCTCT
GTAACACGG
TACTGCTCT
GTTTTGGTA
GTTTTTGGT
ACAATTTGG
CCTCACACA
TCTTTTCAC
AGGGGAGCT
AGGTAGCAA
AACACCAGC
GCTTATATT
TATAAGGTA
TATATAACT
CGCATTTTA
AGCATGCAA
TATCGTTCA
TTCAACGCA
ACAGAACGG
TGGCGCTGT
TAATGAGAA
AAAAGTTTC
CATTTTTGA
ATACTGTGG
ATTGATTTC
TGTCGGTTA
GCGTCCTTT
AGTAAAGGC
CCTTCATCA
GTGAAATGT
ACCTTGAGA
ACTTTCTTG
CCAGGAACG
AGCACCCTT
TCAAATAAC
TGATAGTCC
TTCAATCTT
TCTTTTTGC
TGTTCAACG
GGAATTTTC
CAGTACTTG
CTTTCTTTT
TGAGACCAG
TCACCCATA
AGAATCTCT
AAATTCGGA
GAAGCAACA
GATATTTTA
AATAAACAA
TGGAGAATG
AAGAACAAC
GAACAATAT
GGAAAGTGG
ATGGGCTTC
ATACTAATC
TTTCCGTCT
ATATTTTTT
AAGGAAATA
AAAAGTAAG
TAACTTTGC
GCATTCAAG
CGGAATATG
ACGTACCTA
AATCCGTCA
TGGCGTTGG
TAGTGCAGT
GAGCATCAC
GTTTGTTAT
ATGCTTCTA
ATTTACCAT
TATGGTACC
CAATTTTTG
AATGAGCAA
TGCCATCGT
ATATGACAT
AATTCCATC
GTTAGCATT
TAATTATAT
GCTAGCTTT
GCCAACCCA
GGCATATCA
GCTATTTCA
GGGATCTAC
TAATTGGCT
AAAATATTC
AATGGTAGC
GAGTTTGTA
AAGCATCTG
ACTCAAATT
ACTCTACAC
GCCCTATAA
GCTGACGTT
CGTATTTTT
AAGATATTC
GTAAACTCT
CAAATCCAT
ATGGGGAGT
AGGCTCCCC
CGAGGCCTA
TACGTTTTC
AAAAAAGTT
CTTTCAGCC
CTTGCCTGA
TTGATGTAA
GTCCTAATG
AATACTTTA
CATAATTGC
TCTGCGTTG
AATCCTGTG
GCGGGCTTT
GTAGGGGAA
TTCAAATTA
AGCTAACTC
TTTTCGCAA
TTGACAGCT
TTCATATAG
TGTAAAGAA
TCCTCCATA
CCAGCTCGG
TATTGTCAT
TTATCATAT
ATGCCATAA
AATCTCTAT
TTTCTTTCA
TTTCAAGGT
CTCCATTTG
GTGTAGAAA
ATTGACAAT
CTGAGCTCC
ATGAGTAGC
ATTTTGAGC
GAGACTCCC
TGAGATACT
TTTGCTCAT
CAATTGCCA
AAATATTTC
ATTCATTAA
CTATTGTAT
TGGGGGAAG
AATAATCGC
GTCGAGAAT
AAACCAACG
TTTGGAATC
AATTCCATT
CTTGTCAAC
CTTTTCCTC
TGAAAAGAA
AAAACACCC
GTCATTTAT
TTATGTTTG
TCTTTTATT
ATATATGCG
TTTTAATTA
TGCAGCAAC
GCTTTTCGG
ATTCACAAA
GGAGGTATA
TAGCCAGCA
ATGATTCCA
TCCTTGTCC
CCTAAAACA
ACGTTAGAA
TCAGCTTCT
TTCGGGATG
TAAAGTTTG
GAAAGAGCA
AACATGGTG
CGATTTTTG
AATACAACA
TTCATAAAT
ATTTCCAAG
GCCTGCTGG
TATTTTGCA
TGTCAGCCA
ATTTGTGTA
AGTTGATGA
ACTCCCTTG
TCTGTAATA
TTCATGAGC
TATGAAGTG
TATGGCGAA
TTCAGTAAG
GTAGACGGT
GGCAATATA
TGGAATACA
CAGTAATCG
GAAAAGTAG
AATATCGGC
AAGTAGGGA
CAATATTCG
TTTGTTCAG
ATGTCATCA
GACAACATG
CTGAGGCGG
TCTTATAGC
ATAATATTG
GACTCTCTG
GAAGTAGGC
GTGAAAGAA
GCAGTCCGA
TTGCTTCGA
TAGTGGTTG
GATTTTGTT
AAACAGTGC
AATTCCAAT
CCATAGGTA
GAAATCTAC
GAAGAGGCT
TTTTTGCAT
CAAGCACTA
AAAAATGAT
TATTAAGGT
CTCCACAAA
TTTTGTAGT
GTAAAGAAT
TAAAAAAGG
AAAAGAAAT
ATCCCAACA
AAGGGTTCT
AACTGATCC
TAGCCACTC
AGTCTTTAC
GTAACTAAT
CTGATTGAT
AGTTGGCTA
AATGGTAAG
GCATTCTTT
AGCATTGGA
GCAAAACTT
TAATCCTAG
TAAGAAATG
GAATCACAT
GTTCAATGC
ACCACACCG
AACCATGAA
GTTTACGGT
ACTCACGGT
TTCTCTTGA
CATAACATC
AGCCAATTG
TCAATAACA
CATTATTAA
CTATTACGG
TCTAACGCC
GTCTACCAT
CGACTAAGG
CTTTTAATT
CAATAAACT
AAAGTAACT
AATAATCTT
TAGCTTGTT
TTGTGTGTT
AGGGCCTTG
CTCATCTAA
TTAAAGTTT
TCCCTTTTT
GGCTTTGAG
TTACCTTGA
TGTTTCTCA
CGTGTCTGT
ATCACGCTC
TTTTCATCT
AGATTGTTA
GAGTCAAAA
TCTTGGCCA
AACCCTTCA
AAGTACAAA
AACAATAGC
CGGTGGCCA
CTGGAACCA
GTTGTCAGC
AAAAGATCT
GGGAGAAAG
ATTTTTGTA
AGGGAGTTA
GAGTCCATG
TAACCATTT
GGTACCAGT
GTATATGAT
TTAATTCTG
TCAATTTAA
ATTCTAAAC
ATAGGTGTG
GAAAGTAAG
ATTAGCGGG
ATTTTTCAG
TTTCAACAT
AGCCGGATA
GGGTTTTTC
ATGCTCTGT
ATTGGTATT
CTAGCCCGA
CTGTTAAAA
TCGCTCCCT
CCTCAGTTT
TCTCCAAAT
TTTGGAGGC
ATTGTAGTA
TTAAATTTA
ATATCTTCC
CGGTAATTT
AGGAAGATA
TTGTGGTTG
ATTTGTACC
ATGTATTCT
TCAGACGTG
CTGGCCATT
TAACTAGCT
TGCTTTAGG
TTCTGTTAT
TTTGAGAAT
TAGGTCGTT
GGAATTCGC
TCAAGAATC
TCTAATGAA
TGTTGTACC
CCACTTTGT
TAGCAATAG
GTCCAGTAG
TCTTAATAT
CTAAGCAAC
GAGCTTTGC
GGGGACCCT
GCGTTCTTT
TATATGCAT
TTACGTTTC
AAAAAGAAA
GGAGCCGAG
CGAAGCAGT
GAGCTAAAT
AAGTCCAGT
CTTAACAGT
CAGATAAAA
GTTGGTAAT
GGATTTCGT
TCTTTTCTG
TCAAAAGAT
GACGCGTAA
CACTACTTT
CAAACGAAA
GCAGAAAAC
CTTAGGATA
GGCAATTCT
AATTGTTTT
CACTGTAAT
CAAAGGGGC
AACGAATGG
ATTACTGAT
GAGAACCAA
CAATAGAAA
AATTCTGGT
TAAAGTCTC
CAATGAGCG
GAACAAGAG
ACAGTTGCA
AAAACACGA
AGTTCTGAA
CCTAGAACC
AAAGTTGGA
GATCAATCC
ACTACTGGA
TTGGTATAA
ATTGATTCG
TGAAAACCA
AAATCCAAC
TCTGATAGA
GGTTGTTGT
TAGATATGA
TCACCGGGA
TCCACAATC
TTCCTCCTC
TCAAATGGG
CAAGTTCAA
CAACACTGA
GAATCTCTA
TCCGAACAG
GAAGCTCAT
AAGTCAAGT
AGCAGTTTT
ATGCCTCAC
TCTTTTTTT
AACTTTCAC
CGAATTCCT
CACTCGTTA
CAAATCCAA
ATAAGGAGG
AAGCACAAG
TTCCGAAGA
TTGTAGGAA
TCTACCAAA
TGCTTTTAC
CTGCGGACT
ACTTGGAAA
TACGAATAC
ATAGGGTCT
GCGAGCTTA
GGGGTCCAA
CAGTTGAGA
GCCACTATT
ACCAACGAT
TACAAACCC
GGATGGGAT
AGATCAATT
CTGGTGGCA
TAAACACCT
GTATATAAA
ATACTATCA
TTCAAATTA
TATTATTAA
GAAGAACAA
TTTTGGCCA
GATGATAAC
CCTTGATTG
AAATAATGG
AGTTTGCAA
TCTTATATT
TAATATTGT
GCAACAACA
CAAAATATA
CCCAATCCG
TCTATAGCA
GACCTTGCA
TTTTCGAAG
ATTACCTAT
GCCCATTTG
AAAGTAGAA
CAATCTATT
GAAGTTTTC
GATGGGATT
TGATGACGA
TAATTGAAT
GGATTTTTC
TGGAGTTTT
TATTATTAT
TTTTGGTGG
AAGTTTGTT
TGGAGGATG
GACGTCTTA
CTGGCAGGT
AATGCTGAA
GACGACTGA
TTTGTTTGT
ATAGTGATG
CTTTTTTTC
TCTCATTTT
CTAATGCTT
ATATAAAGA
GACGAGATT
AAGAAAATA
CCCTGCGAA
ATGATACTC
TATTCAGAA
ACACTTGAT
AAACTCTGC
CCTGAAGCT
CCTCTCGAG
TTTATTATG
GCAGTCACC
GATAAACTT
CTTTCAGCC
GCGGGTAAT
AAAGAAATG
CAGTTGAGC
GAGGGCGAC
CAGTATTCA
GAATTCCAG
GGGCATTCC
ATAGAAACT
GATGCGATT
TGCATTTTT
TGCGAGGGT
ATTAAAAGG
CATTTGCCA
AAGCGCAAT
ACTGCGACT
TACGTTCGC
ACAACAGCG
ATCACCAGC
GGCCACGAT
AATCATTGA
CACGCCAAG
CATTTGTAA
CGCGCTCAA
ATCAAGACG
CTGAGAGTA
TGTACGCCT
TTGCACAGC
GGCCCTACA
ACAGATCCA
CCTTGCGGA
TCTCCCATA
CGTTGTTCT
CCAGCAACC
TATCTACAA
GTGACATTC
GACCCTGTA
TTTTTCAAT
CAAAAATTT
AGCACAGAA
AGTGCAAAG
TTCTCTTTT
CCTAGAACA
TTTTGATTT
TTTCGGTTT
AAGACATCG
CAGAACGAG
CCTTCATCA
AGTCGAACT
AGCTATTAC
CCAAGCTGG
GGGCTTACA
AAGAAACAC
CAAGCAATA
AGCAAACGT
AACAACAAC
CAACAACAA
CGAACTCCT
TACAACCAA
CACAAATTT
CCACTGCAA
CCCACGTCC
TTTCCTACC
CTATTGGCA
AGGGAGGAT
CTTGATGAA
CTTCATCCT
GACATGAGC
TTATCATTA
ACACGCGGC
TTTTCTCGA
TGTCCAATT
CCGTATAAA
CCATCAATT
TCGATTAGT
CTCGAAATT
ATATAACCT
GGCAAAATT
TCCCAAGAA
GTTCACCAG
CTCAACGCC
AATCTTGGC
TCATTATAT
ACGTCTGGT
GTAATCGAT
TCCAGCCCC
ATCAACTCA
ACTAGTATT
AGAGGTTAA
ATGTGCAAA
CTGTTTAAT
CGTTCGACC
GTATAGTGT
GATTTCCTT
TCTTCCCAC
TGAGGTTGA
ATTCACTTG
CTTCCAGAT
CTAGTATGA
TTGTGAAAA
CACACTTCA
GCTTTGGTT
TTCCTACTC
AGGTGGTAC
TATTATCAT
TAAATTTTT
AAAGTTAAT
CGAGGATTG
TTTGAAATG
GCTTTCAAT
GTAAAAAAA
TGAACATAT
TGACAAGCG
GTTGTTCAT
GTGAAACGT
GTACCCAGG
ACAACAACC
CACTCATGA
AATATGTCC
TAAGCCCCT
ATAGTAACA
GATTATAAC
TGAAAAGCA
CCACTTCAC
TGTTGGATA
CAATGAGTA
CCTTGGTAA
CTTTTGATA
CAAAGCCAC
TACAAGGCA
ATTTTCTTC
CTCAGGTTC
CAAAGTCTG
CCAGGTGTT
TGGCGGATT
GAGGAATCA
ATAACAGAA
CAGTAGGAT
CCAAATACC
AACAATTTG
TAATGGTTC
TCAAGTTCC
CTACATCAA
TCTAATGTC
TATTACTAG
TTTTCCGCT
AGAGAACTC
TCAAACAAC
GATTATGGT
TTTGGAAAC
TTAATGCAA
TACACATCA
AATTTATAA
ATCCGCTGC
GCATTGTTT
TGCCCTGAC
CTGTCTACA
CCCACTTTA
TAGTAAACC
TATTATCCC
CGAGATATT
GACATCCCA
ATAACCTAA
GTTTCTATT
TTTAAATGA
CTCCCTACG
GAAGAAGTT
AATGGTACA
AGGAAAGCG
ATAATCAGT
TTTTAAAGA
AAATTTTAT
GAGTATACC
AAGTGATAT
AAATTGGCT
ACTGCTTTA
AGAAGCTGT
AATTCTTAT
CAATATGTG
CGACAAACG
TAGACGAAC
TCGATATCG
CGCCCTAAA
TTGTGTCTC
ATACTCCCT
TATACTCTG
AAATTCTTT
AGAATTGAG
ATTAAGCCA
CATGTGAAG
GACGCAAGA
TGGTAAAAT
TAAGTTACC
GACCATGAA
GATGGAATT
ACTTACTGT
GAATTCATT
CTACGAAAC
TATTCATAA
GAACTAATC
GACCTGGTT
TTATTTCCT
GATCCAATT
TTTCTACAA
GTACGTGTA
AAGAATATC
ATTTATTTA
ATTGATTCT
TTTGGTTAG
ACTGTATCA
TTATTTTGA
TAAGTAAAT
CTTGGCTCC
CCTTATTTT
GGAACAATA
CGCTTCATT
TGAGTAAGT
TGGCAGACA
AAGATGGCC
AAATTGCCC
TCTCTGGAA
TTCTTGAAC
TGGATATTC
TATGATTTT
TCAACCTTT
TTTTGCCGC
CTATGATTT
TACATGACT
TCGAGTAGA
GAACACTTT
CAATTGGGT
GTCTTGCTT
AGTATCTTT
AACCACACT
AGACCTTCA
CACGTCTTG
GCAAGCCTC
ACCTCCAAC
TGATGGTAG
CCAATACAG
TCATCGGAG
GTTTTTCAA
TGACCAAAG
ATGTTTCTA
GATGGCCTC
GGACTGATC
TATTCCTTC
AGCCATGGC
CTTTCAAAC
AATCTAATA
AACGACAGT
CTAGAGATT
TTCACAGAA
GGCAATTTG
CCTTTGAAA
GCTTTTAAA
ATATTTGTT
ACATCTTTC
TTGTATGGA
GAACCAACC
CTCTTTCGT
TAAGGCATA
CTTTAAGTC
CATCACGAT
TCTTTGATA
TAAAGGAAT
GGGCATTGG
ACCCAGTGA
AACACGAAC
ATCTCCAAC
TTTCCAGTA
ATAAACACC
CAATGGCGT
CAAGCAGCA
AGTACCGGA
TTTCATGGA
CCAACCAAA
CTTAGGCTT
AACGATCTC
ACACATAAC
GACCAATTG
CTGGGTCGT
GGAGTGGTT
TTGACCTTT
AGGATGGAT
AAACGACCA
TCTACACTC
TACCCGTGA
TGTGTATCC
GTATCTTGG
GAGGAGTAC
TTGTCTTTT
AAGAGATAG
TCTCGGACA
GAAGTCGAG
GCTTAAGAG
AAAAAAAAA
AAGGTTAAA
ATCAACCTC
CCGAGTTGG
CCTGCGCCG
GCCTTCCAA
GCGATGCAT
TTTGCATCA
ATTCTTCAA
GTTCTGCCT
ATCCTATCA
GATTTTGTT
TACCATTAG
GGAGCAGGC
CTTTGTTCT
GATTATCTG
GAGTTTCTA
TAGGGACAA
ATTGATCGC
GCCTCATCC
AGAAACTAA
CAATCTCAT
TCTACTGGT
CCTTGCCCT
CGATCTCGA
TCTGCCGCA
CTTTTTCGT
TATCAAAAT
TCAAAAACA
ACCCAAATC
AGCCATAAG
TTCATCCCT
ATTGAAATA
AATAGTTCT
TCCTCAGGC
AGGTTTACC
TCGTCACTT
AAAACTGTA
AATTAATCT
TACCTTGAT
ACACACGAG
TCTTTGTAG
ATACAAGAA
TTCGTTTCC
CCCTTGTGG
ATTAAGGGC
ATAGCGCCG
AATGGTAGG
TACCGTAAA
TATTTGTTT
TGACGAATA
AGTATTGTT
TTATCGAGC
CATAGCATG
TTAAGAACG
ATTCCTTGT
CTCCATTTC
CTGTATAGT
TTAGAACCT
TGTGGTCAT
CTATCTTTC
GTATCATCT
GAAGTTGTG
TTTTGTAAA
CTACAGTCA
AAAATGAAT
ATGGCTGAT
ACCTCAATC
ATATTTTAT
TCCATTCAT
TCGCGATTT
TTATAAAAG
CCCATGGGT
CAACAAGTA
CCCAACTGT
GGTGCTTTT
AAAAATATA
AACAATATT
ATATACTAT
AAATTGAAA
TGAAAAAGA
TATATGATA
TTGGTAGTA
AGAAAGCTA
TGACCTGGT
AGATTCAAC
TTCTTTCAG
TTCTTCTTA
TGGAGTAGC
TAACCAATT
TTCTTGGAG
TAGAGCTCT
TCTTAGCAC
CTCTTCTTT
ACGAGAATC
GACGCTTGT
TTATCTTGA
CGGCGTTTC
AGTGCACTG
TTTTTCCAC
AATATGTAG
GTGTGTTTA
AATTTCCTA
TCCATCCCG
CCCAGCGAT
AGCACGGGT
TTATTCCGC
AAAGTTGAT
GTGTATGGA
TGGAGACAA
ATCGCTTTT
ATTTGTACA
ATCGAAGAT
TCCCTGTGG
AAAAAGTTG
GATAAAGAA
TGAGCCTAT
AAATAGAAA
AAGGTTTGC
AAGTGCACT
ATAAGGATA
CTAAAATGA
TCCTCCATG
TTCACCGGA
TTGTCAAAA
TCAAAGCTA
CAAATACGA
TATTTTGAA
CGGCGCCTG
GTCGCTAGA
ATTCCATAC
AGACGCCTA
TTGAACCCT
CGGTGAGAT
GCGAGAACC
TACTACCAC
AGATCCAAA
AAGAAGCTG
AATAAATTA
TAATGGTGG
GTCATTACA
CCCCAAGTT
CATCGATTA
TGCTCGAAG
ACTATACTT
CGGTGGTTA
GTGCGTACG
ATTTTCGAT
GTCTATTAT
CAAAGACGG
TTGAAGAAC
AGACCATAA
AGTTAATCA
ATGTTTTAT
TCCCCCTCC
TTTAATATA
CTTAGTTAA
CCTTGCTGC
TCCTGACGA
TGGTAGACT
TCTCCAGCA
TATCAAATT
CGAAAAAGT
AATAAAGAA
GTATATTAT
TGGAATTAT
ATCACTACT
TAAATCCCG
CTGCTGGTG
CAAGGGTTT
TTTAAATTA
CGCCTGATG
GATTTAAAT
TTCAAAAAT
TTGATGATA
TTGATGGAG
TTTCTCCGG
TTGTTTGCA
CAGATCGAT
TGGTGAATC
TTTTATTCT
TATTAGTTT
AAAAGGTTC
ATGTAAGAA
CGGTGAACC
AAACTAAAC
AACAAAGCT
CTTCCTTTT
TTGATTAGA
ATCATTCTT
ATGCTGTTG
TCTTTAACT
TTCATGTTT
TATGAACGA
ATTGAAGAG
CTTAATATT
ATGTTAAAG
TGTAAACCG
TTCTCGCTG
CTCCCTGAA
ATGTTATCG
CAAGTCACT
TATCACTGG
TCGTTTAAT
ATTAAATAA
ATACAACAC
CTCAAACTG
AATATTGAG
GGGATATTT
GGAGTGGAT
ATTACTGCT
TTATTTTAC
AATCTGCTC
TGCGTCTTG
TTCCTTCCT
AAAAATTTA
ATTTACAGG
GCAAATGTC
AATATTCTT
TTCTCTTGA
GATTATAGA
TTTTCGTAT
GGACACCTT
CTCCGTATG
TGGCTGTAA
GGAAGAAAT
CCAAATTAG
TAACAGAGT
TTCTACTTC
ACTTACTTA
GGGTTTAGT
GCCCCTTCA
CTGGTATAG
AGGTGAAAA
TTGCTGTTG
TTCTTTATC
GATCGATGT
GAATAGGGA
ACCGGAATG
GAATTTTGG
AAGAATAAA
TCATTTTAC
AAGTTGATC
ATATGTATA
TTTCTTTAA
TTAGAAGAA
ACCAAAAAA
GTTGCTGAA
TCATTATCG
AGAAAATCG
ACAAGCTCA
ACGACGGAA
ACGTGAATG
TGAATTGAT
CTTGGAATA
AACGGGGTG
GAGTGCTTA
TTACTATAA
GACAGAAGC
ACGCATCCA
TTAGCGAAT
AAGAGGTAT
TTGTCTTGG
AAAGTGGTA
GTCATCTCT
CCGTTATGC
AATTTTCTT
ATCCATTTC
ATAGAGACC
TCCACAAAA
CATACTTGC
TTAACTGAT
GAATCAAAA
AATCAGTGC
TTAATTGGT
GCTGTTAGA
TTCGGGTAG
AAATGTTGA
TCTAACTCT
CAATAAACC
TTGCTTGGA
TTGTATTTA
GTTGTTATT
CACAGGATA
AAACCAAGG
AGTCCTAGT
TGAATTCAG
GACTTTGCT
GTTAGGCAA
TGGATCTAG
AAAGAGCTT
CGTCAACAT
TGGCGTTAT
AAAATATGG
CAGTACAAA
TCGTGGTGG
GTTGCTACG
AACGGTGGT
AGGGGCCGT
TGCAAAGCA
ATTTAGCAG
AATCTTGCG
TTATTTGCT
TTGGGGTTC
GAGCCGCGG
GGGATAATA
AAGGCTATT
CATTGGCCA
CTCAGTAGT
TTCACAGTG
TTTGACTAG
GTAACTGGT
TTGTTTCTT
GTCTTTTCA
TTATCCTTC
TATACGGGA
TTTTCATAT
ATGATCCAA
AGATAGATA
AAGTCGTTT
TTAATTTCA
AGAGGGAGG
CTACGCCCT
TCAGAAGTG
CTTCTTCTT
CATCATTGA
GCCACGTTT
CTTTGCTAT
CTTCCACTG
TTCAATTTG
TGCTGGGTG
AATTGATTT
TTTATTCTT
AGGTGCTGT
TAGGAAGGG
AACATCCTT
AATCTAGAA
TAGCAGCAA
GGCTAGCTT
TAGCCGCCG
GCTGCTCGT
GCTATCAGG
TCAAAAAAT
TAGTGGAGC
AGGGAAACC
GGCAATTAT
ATTAGCGCC
TGTCTGCGT
AACGATAAA
CCCTCACTA
TGCCCAACC
GCACATGCT
GCCCACCTG
ATGTAAGGT
GTAGTTATA
CGGTTCTCA
AGGTGTTCG
AAAAACTAC
ATACGGTCA
ATATTCTCG
GCAGGTATC
CTTAAATAA
AAAATTTGA
AACGATCCC
ATCCATCAT
AAGGCTTGA
ACTAAATGC
AACAAACAT
TTGTTAAAA
ATCAACAGA
AAACAAATC
ATTCTAACC
GACTCTTTA
TGCGAAAAT
GAGCCAAAT
GATACATGT
TTTGAAAAA
TGGACCTTT
ATACATAAC
CCAATTAGA
CCATAATAC
CAAAAAATT
GAGAGATTT
ACATGCAAT
CAGGGCTCT
CGTCACCGA
ATTCTACTC
CAGATGAAC
GAGTGATTC
CACATCAAC
GATTCGATA
TTGCACCAC
CAGGATCAT
AAAAACGAT
GTTGGCTGA
GTGAATTCC
CAATCTAAG
CGAAACAGA
TCGCTCATA
AGCTTTACT
ATCCTCCAA
CACAAACCA
CCAGTATTG
TGCCCTAAC
AAATTGAAA
GAAAATTTT
TATTATGCA
AGAAGCTAC
AGCATAGAA
CAAGGCTTT
ATGCTGAAA
CCAAACTTG
AACCCCAGT
AAAGCATAA
GAGGGTACT
CGAGCCAAT
ATAAAAAAC
CACTATATG
TCTAGTATG
TTTATCCTT
CTGCAGGAA
CTAACTTCT
TCCCTTTGC
TAATACCAT
GGCTCACGA
AGAAACTCT
AGAATAAAT
CCAATGCTG
CTTGTCCTC
TGTTACGAT
TGGGCCTTT
CTCATTTTC
CACATAAAC
TAATAGTGT
TTCATAAAT
CTGCTTGAA
TCTAAGAAC
CGTCAACTC
TTAATTTAG
TAAAGTCCC
CTTTAAAAA
CTTCTAAGC
GCAGCTGCT
TGCTCCGGA
CCTTTATGC
AGTTTTAAG
AAGAGCATT
CATACTGGA
TACATTTCT
ACCCAAATA
TAGTAGCCG
GACAAATCT
TGTACTCGA
GAGTACTTC
AGCTGTGGG
ATCGTTTGA
GCGGTTGGT
TTGTCCCTG
CTTCAACGA
GCTGTGATT
GCCATTTTT
CTGGTAGTA
CCAACACCT
GTCTGCAGA
TGAAACGTG
CTCGTGAAA
ACAAATAAT
GGCATGTTC
TTGGGTGCA
ATCAACTTT
CAATGGACT
GGTAAAAAA
ATTTCAGTG
AGCATGAAA
TTTACAAAA
CGGATACCG
TCCGAGGAA
AGGCACTTT
ACGATAACA
TTGCCGTCG
TTTCATTGC
TAGAATGGA
TCATGTCAT
CAACAACTT
TTATCAACA
TTGAAAATA
CTATAAAAC
CATCAATAA
CTAGGATCA
TTCTACTAC
GCGCAAAAT
TACCTTAAA
TTGGTTCAT
AATATTCTA
AAGAGAAAC
ACTTATTGA
ATTCTGAAT
ATTTTCAAA
AGACAGTGC
CTTACTCAC
ATAGGTAGT
GAAAAGTGG
AGCTTGTTC
ATGGACTGT
ACAATTCGA
TGACAGAGC
AAGCCACTA
GATGGTCGA
AGCTTGGTA
GAAATTTGG
GAATTCGAG
ACTTGAAAG
TTAAAGATA
TGTACTCTG
AAGTAGCGA
TTCCTGCTT
CGTCCTCGC
TCAGCTCTC
ACTTGCCTC
GGCCAAATA
TTGATGAAG
GTAAGTCGG
TTACAATGA
GTCTTATCT
GGACGCGCA
AATTGAAAC
CCAACAATA
GGAAGTCAC
TGACACGAT
GCCATGAAG
GCCTCATAC
CATTGAACA
CACACACAA
ACTAGGTAT
TTTCATCAT
GAATTTGTA
GGACAGCTT
CCATAGTAG
CATTAGAAC
GGGTTTAAT
CGTCGGTAG
GATGAAACC
AGCCGTTCA
CCTATTATG
CATTGGAAC
CAACTCTTC
CAAAACCAG
TCTACCTCT
CAACTCCAG
ATGACGATG
GGCTTAGAG
GCTGGAAAA
GTGATGACG
TTTAGATTA
CACTTCACA
TTTGGAAGG
GATCCTGCG
ATTAAAGCT
ATAAAAAAT
TTTTCAGGC
ACCTGCGGA
TGCCGGACA
GCAAATGGC
GTTTTTGTA
ATTTCACCT
ACAACATTG
GGCATGAGC
ATATATAAA
CAATACAAT
AGGTCCTAA
CAGCATCAT
TACAACTCG
CTGTCCAGC
GCGCGGGGT
CATTGTGCC
CAATGCCAT
TATCTTCGT
GTGTCATTG
AGCTGAGGA
CCACGGCAA
TTCGAAGAA
CGCTGTCAA
GCTTCTAGA
ATATCAGCG
AACTCAAAG
CCGGAAGGC
TTTCTATTA
GAGAGATAA
ATCATTCTG
GGCTGGCGT
GGCTGAGTC
ATGGTGGTT
CTGAAAAAA
AGATACCTT
AAGATGACC
AAAAAGCTA
TACTGGTGG
TAAGTGAAA
CGTGTTAAT
CAAATCTAA
CTGATATCA
TTAGCATGT
CTTGGTTCA
CATCTAGAA
ATTGGCTGT
TGAATCTGA
TCCAAACGT
TTTTCGGAT
AGACCGCTT
TTGATACCG
GATAGAACT
CGGGATTCA
CTTATTTCC
GCGGCTGCA
CGACGGCGA
TTGAAGAAA
AGTAGTCAA
TTGTTTTTT
TTCATAAAA
TCCTATTCA
TGGTAACCT
AAAAAATGA
TATTAATAG
TGCTCTTTG
TCCACGTGG
ACGACAATT
CATGTAAAG
CGGACTTGA
AAGTACTGG
TGTCTCTAA
TTTCCTCGG
GATAAGTTC
GACCACTAG
ATGCACCTA
GCAATAAAT
ATGCAGAAA
TCAGTTGCT
AATCTGTCG
ATGAGGTTT
CCTGTGCAA
TATGCTTCA
TTGACTAGC
TGTGATACA
ATGGCACTT
CACGTGCCT
GGTACTGCT
AATCCAATA
GCTATAATA
TCGAGGATT
CTCAAAAAA
CTACCAGGA
TTAGAAGAG
CTAGAAGGC
GAACGTTAC
GGTATTTCG
TAGTAGCAG
TTCCTTTTT
CGACGTTAT
ATTTTTTCT
GCGATGAGA
CAGAAGTCG
ATCATTTTG
CATTAAAAC
AAGAATATA
AACTCAGTA
GGTTTCTCA
CCACTCACT
CTAGCACTA
AAAAACAAC
CCTGAAAGA
CAAATAGAA
GGCAACTTA
CGGCGTGTA
CGGAAGAAG
GGTTCTAGT
GCCTAAATA
TTTCGGACC
CCAAGGTCC
TGCTCAGCA
ATAAAGCTG
ATTATTATC
TCATTCAAC
GAAGATCAT
CACGCTCCT
GTATATGTC
CACAGCACC
GACCACGCA
AAAATTCGC
TTAACAATA
ATTGTTCTG
TTATTTAAA
GCAAAGACG
GGCATTAAC
TAAACATGA
ATGACATAC
AAAAATATA
TTTAATGAG
TATCTTTAT
TATTGACTA
TTATATCCA
GAGTTATTT
ATATCGTTT
ATCACTGTC
TTTGCTCAT
TCATCTTCT
TTCTACTTC
CTGCATGAT
TCCCAATGA
ATGGATGCT
TATTTGTGT
TCTTCAAAA
ATGAAGCTT
GTTTATTAT
GAAATTACC
GGTGGGTTC
TAATAGGTT
GAGCTCCAA
AATAATATA
GATACAAAA
ATTCCTGTT
TTCATTTTT
GCACTTCAG
AAATCCGAC
TAATAAATA
ATATGGGTA
TTTTCCTTG
GGGATGGTT
GTTCAACAT
AGGCAAAGA
AACAGACAG
TTAGACACT
TTTAGGCAG
CGGAAAAGG
TGTATTCTA
CCTTTCCTT
GCAAAGTGA
AAAATGTAA
GTACTGAAA
TTGCCAAGA
ACTCCATGT
CTTCTTTGA
TAAAGGTGC
ATTTGATAG
ATATTAGGT
ATTAACGAT
AAATCAACC
CCTCTTATT
AGTTCTATG
CATCGATCT
TCGTCGTTT
AATGAAGAA
AGAATAGCA
TTTGCCTCT
TTTCAAACA
CAGTTGAAC
CCTGAACGT
AAAGAAATG
ACCGCCAAT
GAGTAAGGT
TATATAAAA
AGGTTAAAA
TTTGGCTTG
TATCATCGT
CATCATGAT
TATATTTTT
TTTTTTATC
ATATACAAA
ATTACCATA
GAACGATTC
AGATTTATA
ACTCATCGT
GTGTGCTGT
AAGGTTGTA
GTACCCGTT
GTTTGGCTG
TCTCAGTAA
CGGATGGAA
GATTGTTGT
AGGTTGTTG
TCATTTTAG
GAAATTTTT
ACCGTTACC
CGGCCTGAT
AAACTTGTA
CTGCAAAGG
GTAAATTAG
TCATATACT
CTTGTGGGA
TTTCTCTAT
GGGTCATTG
TGGTAAAGG
CGTTTGTTT
TGGTTCAGA
AATGGTATT
TCATTAGAG
CCACTCATT
TTGTTCTTC
CTCTTTCAG
CCGCTGATT
AGGAGTGGT
AGTGGTAAT
TCTAACAAT
AGCATTTGG
TCAAATTTG
CCAGTTTCC
GATAGATTG
TATCCTGAG
GTCTCCATT
CCTCTATGA
TGCTGGTAA
GAAAAAATC
TACCCTAAT
TATAGGGAA
CAGTTTATC
CATCATTAA
AGAGTATGT
ATTCCGTAA
TATTTCCCG
TCATGAAAT
GATCTTTGT
CTTGGCAGG
GTAATGAAG
AAAAGCGGT
TCAAATTTT
TTGAGCTTG
ATAGATTGC
AGCATTATC
ACGGTCAAT
AGCATGGGC
AAAAGGGCT
CTTTACAAG
TCAAATTTC
GCAGCTAAG
AATGGAAAA
GAAGATGAT
CATATATAT
TGTGTACCG
AGAGAACAA
AATAAACCT
GCCATCTTT
GTAATGTAA
TATTACGCA
TTCTTGATA
TATATAACG
CTCTGAACC
TTACTAAAC
GTTACAAGA
TTGTAACAC
AGAAGCTTA
ATTGAAAAT
CCCGTTATT
CCTACGGTT
ATTTCTAGA
AGTTGTTAA
GCGACTACT
GGTTGGAAA
AAAGTTTAT
CTTTGTCTG
ATTCTTTTT
TTCTATTCG
CCAGTTGTT
TCGATTTAT
TGAGCCTAG
AACGAGTCT
ATGTTGTAA
TTAGTGTAT
CAATACATA
ATGATAACT
TTCACAATA
CGAGGAAGA
CTATCCAAC
CAAGGCATT
CGACGGCTA
CCTTTTGAC
TTGTTGTGG
TACCAAATC
GGGTCACTG
AGAGGAACT
CGAGATCCT
GCAACATTC
AGCCGCTTG
GCAAAATGG
GGAGAAGTG
CAAACTTGA
TTGCTGATG
GATGAATCG
ATTTATTGT
TAGAACTGA
CTTCCGTCT
AGCGGTAGC
CAGTATTAT
GTTTCCGGT
AACAGACGA
CACCATCAA
TCATTTCCT
TTGAGATCC
TTTCTGTCT
TTCTCAACA
TCCTCTTGA
TCGCAATAA
ATTTGTCTT
CTCCTTTAA
GATCGTCGA
TCTTGTTCT
CGTTAAATC
GTGCGTGTT
TTAGTTAAG
CAAGTTTGC
CTACCATTG
GACTGTAAG
TTCTGCGTT
GTTTGGACT
GCTAATGTT
TTCCGTTTG
TGATTTGAA
GCTCTTGAC
TACTTGGTT
CAGAAGCTT
GAAGATCTT
GCCTACAGC
TAAACACAG
TTGACTGGA
AGTATCACT
TTATACTTT
GAGGAGTGA
TGCTTGGCC
GAACCACAG
AAAGCCAGT
TTGTGGAAC
GCATATCCT
GGTGCACTT
GGGGGACTG
CATTCTTTT
AATTCAGCA
CTCTTGGTT
TTAGCGAAC
TGTTGTTTT
TGCACCAGT
CGCCAGTGG
ACAACAGGT
CGGTGGTGT
ACATGGCCA
TCACAAAGA
TAAAAATAT
CTGTCCTAT
GCAGGAATA
AGGGGCTGG
TCTCATATA
GCGATCATT
ATTGTCTAT
GACCAGAAG
AGATCTTCC
CTGAGAGGA
TTCGAATCC
TAGAGCTTC
GAGAACCAG
GCTCTGTTG
GTTGAAGAT
CGGGTAATG
GACACAGCT
TGTCAAAGC
ATAATAATA
GATGTGGTG
GCAAGTTTT
ACCTATTTA
ACTAGATTA
TCATACATT
CTTTCAAAT
GAAAAATGT
CGGTGAGAA
ATCAAGAAG
ACTAGGGAG
CAACCTAGG
ATGAAGATA
GATGAAAAT
CGATGATAA
AGAATAATA
GAAGATGGT
AGATGACGA
AGGTGCAAA
ACAGATTTA
GGATCTCAC
CCATAATAG
AATGAGATC
CCATGAGGG
CATCGATGA
ACCTACCGT
GAGAGATGA
TATGTTTTA
TCTTCAGGA
TAAAATAAG
TCTTTTTTT
AATGAAGAC
TTTATGGTG
ATTTCTATT
CATCATGGA
TTTGGCCTG
GCCCAAGCC
CTCACCCAG
AGTTAGCGT
AATTTCAAC
GGTCAATCT
TGGTAACGT
TAAGAAAGA
GTTGTCTAA
TGTATGAGC
GAATTGACA
GGTGTCGTC
TGAGTACGG
GAATTTACT
ATTTGAATT
CTAAATTCT
GTGTTTTGG
GTCGTTTTC
CCTCGAAGT
TGATTCAAG
AATGTAAGA
CCTTGGCGG
AAATTGGAA
GAAGACAAC
CTACAACTA
ACAGCTGTA
TACTGTTCT
GTGATATGG
TTGATCAGC
CAGGGATGA
TGTTTTCCT
GAGCGCTGT
GACAGCGCG
TTGGCATTT
TCATATACA
AATATCTGG
GTGAAATGC
TTGAAGTAT
ATCTGTGAT
GGCGGGCCG
GATCACGGG
GCACGGAAG
CGCACGTTT
AAAAGGCAA
ATGTTTTCG
AGAGGCATA
TTTCTTTCT
TGTATGACC
TTTATAGTA
TTTCTCACA
CCCATCGAT
TGGCAAAAT
GTTTTAGTC
AACTCATAA
GACCTGAAA
AGTAAAAAT
TGAAGATTA
CTCTATCTT
TTTGAGTAC
CTTTAGTTT
CTCATTCCG
GCTCTTCCC
GCTCGATGC
CTCGGCGGG
GATGTCGAC
CACAGCATA
CATATTCAC
TATTACTAA
ATATATTCT
AATAAAATA
CAGTATATG
TACCATGCT
AACTCAATA
TGGTACTTT
GAGACTAAG
TCAGTTCTA
CCAAACCTT
GGATTTTTT
AAATTAGGA
CTAATCAAG
AGATTATGC
CTATGCAGA
ATCATGATA
GTATCTTTT
CTTTCAGTT
GTCAGTTAT
CTAAAATGC
AGGTAGTAA
TAAAAAGCC
CCCTCCAGT
TCGGTGTAG
ATCGGCTGA
CTAGTGCCG
ATCGCCAAC
GAATTTAGG
CAGACAAGT
AATACACCG
AATGTCTAG
AGACAGACA
GCAATCAAT
GAAGTCAGG
TAATAGCTC
CCATTGTCA
AGTCCAAAT
GTGCAAATA
CATGCGACC
GGGGTTCTT
TAGCCTTTA
GAATTCCAG
GAAGTAGAT
AATTGTTCC
TATCCAACC
TAGCCCAGT
TCCAAAAGA
ACGGGCCGC
TAAATCTTT
CGGTAGAGT
GACACCTTT
ATCTTTTTT
CATCACCCA
ATAGTGTCG
TACCGGCAT
GCCTTTTAT
TATGTTTTA
AGATAGGAT
CTTTTCCGT
TGTGTTGTC
TTATTGCAG
GCAAATCCC
GAAAGGGGA
CTCAATCAC
GCCGTTTGT
AAGCCGTTC
GGGGCTTGG
CTATTTTCT
AATATTTAA
AATGTTTCG
TTTTTTCTG
GTACGGAGC
ACTCAAAGG
GAAAGAGAG
CACTATTGC
ATCAATTCA
GGTGAAGAT
CTCAATTAA
TAGTCATGT
AGATTCAAA
ACTATCTAT
AGAGGTTTT
GATGGTAAG
AGAACAGTG
TGGACAATC
AAAGTCAAA
GGTGAGAGA
ATGGGCTGG
TATGAGCTA
AGACCAATA
CATTGATAT
GGTTTTTTT
GTGTAGTAA
CGCGAAGAA
AAATCCAGT
TAATGAACA
TTGAGGTAG
ATTCAAGAA
CCAATTAGT
ATACGCAAT
AAGCGGTAG
ACCCAGTGA
GTACAACGT
TGATATTAT
GTCTTGATG
ATCTACGGC
ATTCTAAAC
TCTCACTCT
AACTTATTT
GGGTACCGC
AGTGGTGCA
TAAGACGAA
CTTTTGTTT
GAAAAATAA
CTAACCTGG
ATTATATAC
TGAATAACA
TTTAACAAT
CAGTACCAT
TTTATTTAA
AAGAAAAAA
CGCCATGGA
CATATTCTA
TTTCTCATT
AGTCAGTAA
TATGTCAGA
GACAACATG
TTTCTCTTC
TGTTAATGC
TTGTTTTCG
GATACCAGC
AGACCTTTG
TGATTCTTT
TACAAAGAT
TTTCGTAAC
AACTTCTTG
CAAACCTAA
TGAAAACGA
GAATGACTG
AATTTGTAA
CCCATCTAG
CCGGGGATT
AAATTTAGT
CCACCCATT
AATGCTTTT
AACCAAAGC
TGGCCTTCC
GTAAGTGAT
CTTTTGTTC
GAACGTTAA
TCGATTGTT
TGGAACTAA
TAGTTTTTT
GCAAAATTT
AAAAGGAGC
AAACATCTG
TCAATCCAA
TTTGCCTAA
TTTTACCAG
CTCTCGTAG
GAAACATTC
TATAAGGGT
AGCATACCA
ACCACCTGA
TTCTATTGA
AATGGCAGA
TTTATTCTA
AAAAAAAAA
AAACCTAAC
TCCAGTTGA
ATATTGGTG
ATTAACAGT
TTCACCAGA
ACAAGAATG
TTCCCCCAA
ATGAATATG
GTGCCAGTT
TAAGTACGG
AGCTGAAGG
AATGGTCAT
GGGTAACGA
TGGTGAGGG
TTGCATGAA
ACCTGGGGT
TACATAGTT
GAAAATGCA
AGAACCACA
ATGTATACA
AATCTAGCC
TCTGCGGAA
TGACGACGT
GAAATATTT
CTAGTCAAT
ATAAGCCAT
ATAACAGTA
GCACAACAA
AATTAAACA
GATTAGGTG
TATATTACT
GCAAACGGT
GATATATGA
GTTAACGAT
TGATAATTT
TTACGAACC
ATATTAAGA
GTCATTTCT
TACAACGTA
ACGGAAAAC
TGCAAAATA
CAGAAATTT
AATCAGTTT
TATCACAAA
AGAGGGATT
CTAAATAAA
ACAAGCTCA
CATTGATCA
AATTCTGTG
TCGGTATTT
AACCTGCAA
CTTTTGAAC
GTTATATAC
TACTGCAGT
TCTGATATT
TATCAATTG
ATACAACTA
GTGAACAAT
TTTATGTAA
TACTAGGGG
TTATTTACT
GGCGATGAT
TCGGCTCCA
ATTGAGTTG
TAAGGTGAA
CGCCTTTTA
CCGGCATCA
CTCCTCCAC
TCATGGTTC
AATTCCAAA
TTCAAGGCA
TTTCGCATA
TATCGGATA
TCTTGCCTT
AGATTATCC
ATTAATACA
AAGCTATGA
TTTTGGCAA
AAAACTGCC
TAGCATGCA
GCGATGCTT
AACAAGGAT
ACTATTGAC
CCAGTGTTC
GAGGGAAAC
AGTTAATGT
TTGTCGAAT
ACTATAATG
ATATATATA
ATAAAAAAA
TGATTCTAG
ATTCTGACT
CATCCCCAT
TCTTCCACT
TGAGAGACG
CTTGCATTC
CATTATTCA
TTACACAAT
TAATTTTTT
TTGGCACTT
AAGTGCCAC
TTGAACATA
GTATATCGC
GAGGCATTT
CCTTACAGA
AAGTAATAC
AAGGAAAGA
TAGTCTCTA
TACCCGGAT
AGCCAGTTT
TACCTTGAG
AATCAAGTC
CTTCACCTT
ACAGTAATT
TCCGGGATT
ATTCACTGG
GTTAGTCCC
AACTTTTTC
CGTCTTTTG
TACCTGCGC
TGATGAGGT
CAACGTTTG
TTAGCCATG
TAAAGAAGC
AGGGTATCA
GTAAATAAC
CTGGGGAAA
CTATAAATG
ATACTATCG
AAAGTATGG
TTGCTTGAA
TAAGGTAGC
TTTACCTTT
CCTGCGATA
GTCTCTAGG
ATCTGGAAC
TTGGATCAG
TTAGTAAAC
GTTTTGCCT
CTACTTTGA
TTTGGATTA
AATTTCACC
TTGGAGTTT
GCGTGGGAC
AGTAAACTC
CAGAGCCTA
TGTAACTTT
CAAGGGACT
TGTTTACCT
AATTGTAAA
GTGAGTTTG
CCTCGACGG
ATTTCCGGC
TCCGCTCAT
TCAAGCTTT
GCAAATATA
CTCATATTA
AGACGCGTC
TCGTTTGAG
ATCGAATAA
GGACTCTCA
GTATTATCA
TATATTAGA
TCCATAAGG
TGAATTTCA
GAAAAAGTG
AGATTTCGT
TCCCATACT
ATTCTCGCT
CGAGAATTA
TCAGTAGAT
ATTTTCATT
TCAAGGGTT
TTTATCCTG
CATCAAAGT
ATACAGTCA
TTCTCTGAT
TTGTTCAGT
TTTGACCCA
AAATCAGGC
ATTTATTAT
CGTCCTTCA
CTTAAATTC
CTCCTTTGC
TCATTTCTG
CTGTCTGTG
TTTATCAGT
ATTTCTTAA
TCAGATTTT
AATGATGTC
AGATTTTCA
AAACGATTA
TGTGTAGTC
TAGGCATGA
TTCAAGTTA
AGTGGTTTT
TGGCATTCA
AGCTCGTAG
ATCAAAACT
CATTTGTAA
TTTATCATA
TGGGGCTGA
ACTGTAAAG
TTGTAAAGG
TGGAGAAGA
ACGGGTTAG
GACGGAAAG
AGTAGAAGA
CTTTGGTGT
CTTTTTTCA
TTTCAGCTT
CTGCAGGAG
TAACTTGGA
ATTATTCGA
CAGTAGAGG
ATTGCCAAT
TAATCTTTT
ACCTCATTG
AGCCATTCT
AGTTGTATT
GGAAGCTAC
TCATTTATT
TATATCAAT
TTTTCTTGG
AATATTGAT
GAAAAGTAA
TTGAAATCA
TCTGGATTA
TATATTTGA
GGAACGGTG
TCATAGTTT
CTGCGGCAA
CAAACAAGG
GCTAAACTT
AAATCCATC
TGTACATTA
TTTGCGTGT
GAAAAACCT
GGATCAACT
TCTCCGTTT
TTGGATCTT
AAGCCAGCC
AGTAATTGC
CACACGTTT
GCGGGTACG
AAATAAGCT
TTTGAACCG
CCTTGAATA
TTGCTGTTA
ATACAAGGT
AATCGGATG
GCGTTTTAG
TGCGCCAAT
CGTTTCATT
GTGTTTATA
TTTTGGTTT
TTTCAGAGG
GATAACCTT
TGTATGGGT
ATCTACCTG
CGATGCCAA
TCCACGGGA
GTCTTGCAG
CCTCTTGTC
TTGCTTGTG
TTGTTCACC
ATTCAGAAT
GCTTTGGAA
TCCGAGTCT
CAATATAAG
CTACGGAAT
ATGTTCCTT
GACCCTGTG
AAGCCGCCA
GCTGCTATC
TTTGTTGTA
CACGCCAGC
ACCCCACAA
AAAAACTCA
AAAACGGTA
ACATTACCC
TCCGGCCGC
ACCCGAGCA
CCACTCCTA
ACTTAGAGA
GCTGCTACT
TGATGCCGG
CTCAACCCA
AAGATCATT
CGCCGTCAA
TCCTGTCCT
ATTGTTGAC
GGGCGAAGC
CAGCTCCCT
GGTTATGTG
GAAAGCAGG
TCGTGGCTT
ATCCAGGGT
GATCATCTT
TCCCTCATC
TCTAACACT
TATTGGCCG
CCAATATTG
AGAAAATTC
GTCCATGCT
ACAAGAGAA
CGCTCTGAT
TCATGATAA
TCCCACACA
TACTAGTTT
TATATATTT
AAATACTCA
CTTTAAACA
AAATAACAT
ACAATAAAC
AATGATAAA
TAATGGTTT
ATAGCAATA
GTATTAAGT
AGATCAATC
CGGGCTCGT
TTTGGCCAG
CAAGAGAAA
AAAGGTCGA
GATATCACA
TGGTAATGA
TTAATTCAA
AAACCAAAC
CGCTCACCG
CTAAAGTAC
CCGGTAGAA
TTCAGTTTC
CGACGTCTA
CACACAAAT
GTCCAGTAA
CTATTTGGC
CATGTGATG
TTTACTGGA
GTTCAAAAA
GAAAAGAAT
CGTGTCACT
TGAGAAAGA
TCTTACCAA
GCACCTGCG
ACCAACACC
CGTACTTAA
TCCAATGGG
CAAGAATGA
GCTTCAAAG
CCAACGACA
TTTTAAGGT
CACCCTTTT
TCCAAAGAG
TGCCAAGTT
CAAACATGG
GGGAAATAA
ACCTTCCTG
TTCTGTCCA
AGTTTAACT
GACACCACC
CTGGGGCTG
ATTTGCTTA
CAAAAAAGA
TGTAGATGT
TTGAGTGGG
TATTGTGCG
GCACCTCAC
CAATCAGCA
GTGCTCGTG
TACTTCTGT
CATATATAA
TTTGTCGTA
TTCTTAAAA
CCAGAAGAC
TTTTTATGG
TGATGTCCG
TACAATAGG
TAAGTTGCT
ATTCCCAAC
AAACGGAGT
ATCTTCGTT
CGACAATGC
ATTTCTTAT
GAGGCACCA
AGACCGGCG
CATTCCATC
GAATCTAGC
GTGCCGTCG
ACAATCACC
ATCTGATGG
GTCCTGCGT
CTCCCCTTA
TAAATGGTA
TCTCATTTT
TTATCTGAA
GTCGGCCAG
AATAAACAC
TCATTATAT
AACTTTTAA
CTTTTTTTT
AAGTTCAAT
GGTTTCCAG
CCTTTTATA
TATATAGAG
GAATTCGAC
ATTCGCACC
ACAATGACA
AACTTTTTA
CAATAGCAT
ATAATAATA
CAGATGGCC
TGCCGTAAA
CATTAGTTT
TCGCCTTCT
AATAATTTC
CGTTTGAAA
CTAAATAAT
GGATCCTGC
CGGTCTCTT
TCTTCACCC
CGCCGAAGG
TAAAAAGAG
CCGCTAGGT
AAAGTTAAT
ACAACCAGT
ATGCAGAGT
AAGAACAAC
ATCCATATA
GAACCGGTT
GTCTAGGAA
TAGTATGGT
TATTACCTT
TGTTTCATC
ACCAGAGGT
CGTCGACAT
AATTTTTGC
ACGTGCATC
CATTTAGAT
GTAAGTTTT
CAATATATC
GCCTCATCG
TGGATGAAT
TCACCAGTA
ATTCTTGAG
AGCTTAGTA
ATACCGTCT
GCCTGGTGG
TATACTCCT
TTATACGCT
TCACCAATA
GAACCTTTC
GAGAGAAAT
ATAGTTGGT
TACGAATTG
CGTGTCTGT
TAACCTTTG
GAAGCAACT
TTCACAGGG
GGTGTTGGT
TGCCCAAGC
CCATCGTCA
CATGCTCAA
GGGTACTAG
TACGTGTCT
GACAAGCAT
CAAGCACAA
CTCAACGTG
AACAGAGCT
CGCTTTGCT
ATTACGTAC
ACCAAATAC
GGAGACTGT
AGAGTAATG
AGGAGGCGG
GTGTAAAAT
CTATAGGGG
ATGATACTG
CTCATGACT
CGATTCTCA
GGGCAAGAA
TCCTTTTAC
AAAAGTTCG
TTAAGAAAG
AAGACCAAA
TCCGGTTAT
CTTTGCCCA
TATAAAACT
ACTTTTAAA
ACTTTGGAT
TCCTTTGTA
TGTTCATTT
AAAACCGAA
AAATCCAGA
GCTGATAAC
AGTTGACCA
AATTCCCTT
AAAAAGTCA
CAGTTAAAA
ATTTTTGAA
ATCCACACT
AGGTACGTT
CGCTACCAG
TATCCTCAT
GGATATTGA
AACGGTTTG
TGTGATATC
CTACGTAGA
AAATTCATT
AGCGAATGT
TTTAAAGAA
CGTTAACCT
GCCTGCAGC
TGAAGTACT
CAAGGGAGG
TTCGAAGGT
CGCCACGCA
ATGAGACAA
GACTATCTA
CGGGAAGGG
CGCCAGGTA
GGATGGAAG
ATATCTCCA
AAGCATAAC
CAGACCGTG
GGCAAGTCT
CGCGCGCAT
AATTAGCGA
ATTACTTCT
TTACGTATT
TCACTTTGA
ACTATAGTT
CTACACTGT
TTCAAAAAA
TCAAAAAAA
ACTATAAGA
AAGACATGT
AAAGCATGC
ACTTGACTA
TTACCTTGG
GGTTATTAG
TTGAAAATG
CCTCCAATC
TGCTGCTCC
ATACAGATG
AGATCTCAT
GATGGTTGT
GCAACTCAA
GACGTTCCA
GAAAGACTG
ATATATTAA
TACTCAACC
AGCGTTAAG
AGCTTCCTG
GACAGAAAT
TTTCTTTTC
GTATGAGGG
GTTTTCGAA
TTCTGAAAC
AGGTAGAAG
GAGCCTTTT
GGATTTCTA
GTAACGCCA
TTGAAGGAT
TGGTGTAAA
GAATCCAAA
AGAATTGTT
TTTCCCTAA
TTGAAAAGA
AGAAATGAC
CAAGTGTAT
ATAGGATCT
GAAAAAGAA
CGGAACCTC
TCTTATCCC
AAGAATATA
CTTTTTTAC
TTGACTAGA
TAAAAATTA
CCAATACAT
CGTAGGAAT
TGCGGAGTT
ACTACAACT
TAATCTCAT
GACGAACTG
TCCGCATAT
GTATATTTT
GAATAGGCG
TGCCTTGCA
CGATTCGCC
CTGGATGAG
TCTGCCTCT
AGACAGAAT
AATTATATC
GCTTGTAAT
TTCCATAGC
ATTCATCAA
TCTAAGGTC
ACCGACAGC
TTTTCTCGA
AATAATAAC
TTTTGGAAC
TATGACCAT
CCACGATCC
ACTGAAAAC
TTCTTTTTA
TTCTTTGCA
TTCTACCTC
TGACTTCTC
TCCTGGAGC
GACTCTAAA
TTTCTTCAT
AAACAATTG
TGTCACCAC
ATTCACGTA
TCGGAGTGA
AGCCACGAG
ATAGTGCCA
AAAGATTCA
AGAACGACC
TGGCAATAG
TTAGCCTTA
GTCAATGTC
CATACTGCC
AGTTGCGCT
ATTTCTCAA
GTTCGCTTA
TCATATCTA
GTCCATCAA
GTACATCGT
GAACCAATA
AGGTGAGGA
GTCTACGTC
TTCTTAGAA
ACCAAAATG
TTCTCGAAA
CTAAAAAAG
GTTTCCCAC
AATAAAATT
TTTAATCCA
ATCTCAAAT
CTTGAATAA
CCAACCCTT
TCTTTAGGG
TTTTTCTCT
CACCGGTCA
AGGAAGGAA
AGCACCTTC
TCTCAGGGA
CTTGATGAT
TGGATGCTT
GTGAGCAAC
GGAGTTGTT
ATCTTTTAG
TTAAGGCTT
TTCTCCGAT
GCTTTCTTT
TCAACTTCT
TGTTTTTTC
CGCTGTTAT
CGCTTTTCT
TCTTCAGCA
AGGTCTTGG
TTGATAAGT
TGTTCAGGG
GCCGCCGTG
GAGTTTGGC
ATATACGTT
TACAGAAAA
CTATGGACG
CCATCGACT
ATCCTTGAC
CTCTCGGAA
GTTAACCAA
CTCCAAGGT
TATCAGGCA
TTGTCACGG
TTCCATCAA
CTTTGGAGA
ACTAGTAGC
GTCTTGTAA
CCAATCTAG
GCAGAAAAA
TTCTTTAAA
ACTTTCTAT
ACATTATAA
AATATCGTC
GATGTTGCA
TTAGGCGTA
TTCAACGAC
TTTCCTTTT
TGAGGATAT
ACTCGGGAA
CATTTTTAT
AAAGCGCCA
CATAACTCT
AGGGCCGTC
ACATCCTTT
ACTGGATGA
AAGCTTCAC
TCAACATCA
ATCCTTTTT
TGTTTGTAG
TGTTCCATG
TGGACTCTT
TCAAGGTCG
GATCGGTAA
CTTTGTGGT
AGCACCTCG
AATGCACAC
TGTCGTTGC
ACTTATTTC
TACATTACA
GTTACATTC
GTGCTATTC
TTGTCTTCT
CTTCAGCGC
CTGCATAGT
CCGTTTATC
AGTCACAAA
CATCTTTCG
GCTACATTG
TTGCTGCAA
CCTCTGGGC
AGAGGTTTG
TTGATTGGC
AGAGCGGAC
TAATATGGT
CGCAGCCTG
AGGGTGATT
TGGCGAAAA
AGGTCCACA
ACTGGTAAC
GAATTTTCG
TTTTTTAGC
CGGTAATGG
ATTACAAGT
TTTTGGATC
AAACATCAA
TTCTTATCT
ATCGTCAAC
CATCGCGGT
TTCAGCAAT
GAAGGCATC
CACCCTGCT
AGAAATTGT
GAATTGAAG
CATTTTACA
TGTTGACAG
GAACAAGGC
ATTATTATT
TATTATCCT
GTGAATTTA
TGGGCCTGC
GGTCCACTA
CCATTTTTA
CACTGGTGA
GTATTTTCC
ATCGAAGGC
GTATTGTGG
CCTCTTTTT
TCAACGATC
ACAACAATT
TTTTGGTCA
GTTTCCAAT
ACACATAAT
ATTCATTTT
TATATGATG
AGAGAGAAG
TATGTCATC
TACGATTTT
CAACCATTT
TCGAGCAGA
TCTCTAAGT
CAAACCAGA
AAAGAACCA
GTATAACGG
TATAGAAAC
CGATTTAGA
TTATGGTTG
GCAAATTCG
GAAAGTTTT
TTGTGCTAA
GATACATTA
AAAGTTAGA
CGGACACGC
TTACCAGAC
TCAAACAAG
ATTTAAGAC
TTAAAGCTT
GGGCTCTGA
GAATTGAAC
TACAAATAT
GGATACGAA
TGAATACCA
TTCCAGAAG
AATTCCACA
AGGATGTCT
CTGAAAACA
CAAGAGATC
TTCAGTGGG
ACACTTTCT
ATACATTTA
GCGGTCATC
GAATTGACA
GTACTGATG
GTAAGCCAG
CAAAAATAC
GTCATTTGA
ACTATAAAT
ACTCAAAAA
TCTCTAAAA
ATCTGCCTT
GTAAAATTA
CTTCAGTCA
TCCTTGTAC
TGCAGTTAT
TGTGAAAGA
GAAAAGTAT
TTTCGTTAG
CCTTCTGGT
TGATGTATG
AATTACTAC
TGGCCAGCA
GGATGAGTA
AGATAGCAT
TTTGAGAAA
AGTATTATT
ACCTTGCAA
GCGGCAAAG
ACCGGCACT
AAGCATGTG
GATAGAGGG
TGGCTCTTT
CTAATTTAC
AAATCTTGT
AAGTGGAAT
CGGTTTGGT
TTATAATCT
GAAGATGTT
TATCTGCTG
ACAGTGGTT
TTTCCATGT
AGTTTTCAG
TGGTGAGGA
GAAGAAGGT
CAACGCCGA
ATATCCTTA
TGATTTGGA
GTTTCAAAA
AATTGTTTG
GTTGGTGAG
AGCCGAATG
CCATTTGAG
GTTTGTTGC
TGAATGCCT
GCAAACTCA
ATGAGGAAC
TATTTTCAA
ACTAAGCTT
ATCCTCATT
TTGCATTAT
TATGCTACC
ACCATAATA
TACCTAACT
CTATCATGG
AGAATTGTA
TGTCGAACC
CCTCTTGAA
TTGATAGAA
CTTTATCAT
GATTTGACT
TGGTTTTAC
GAACGATTA
AATTCAAAC
CTCAAATAA
CCTGTTTTC
TCAGCTAAA
AAAGGCTGT
TATGCGCCA
GGCGTTGTA
TTCGGTCCA
GATCGTCGT
TAATCACCA
TAAGCCACC
CACTACCAT
GTGGAACCC
ATCAGTAAT
TTAACATTG
TTACTCTTT
AGGGTAAAG
AATTAATAT
TTTAACCCT
CTCCTCTTG
TAGCGTCCT
ATGTAAGCC
GGAAGACAT
ATTTCAATA
TCTTTTAGT
GTAAGGAGA
AGATTATTG
GCAAAGCCA
AGAAGACTT
CCTTGTCTG
TCCCCCGAA
GTTGCACTT
AGCATTCAC
TCCCATGAC
TGCCGTTGC
AAGTGATTT
TCAAAGCTT
ATCATCAAA
CTTTGGGGG
CAAAGAGAA
GACACTTCA
GGCAAAATA
AGGAATTGC
CTCCTTTTT
GTTATTTAG
CTCAGCCCG
TTAAAACAT
CTACTTGAC
TTAACTTAC
AGTCCGCAC
GCAGTTTAC
ACCTACAAG
AACTCAAAA
GCATTCTCT
ATTGCAGAA
TCAGAAACT
TCGTTTGAA
TGCCAAAGA
TTACTGGGA
CACGGGAGA
TGTTCGCAT
CACGAAAAT
AAACTTCAA
ACCGTGTAA
ATATACCAA
CCATCGTGA
TGAAAGTAT
GACAATTCA
CACACGTTG
CAAGGGCCA
TTAAGACGG
GATATTCGG
TAGAGTCAC
GCCGCGCCA
TCTTTTACA
AGGAGGCAC
GAACCTGAA
CAAGGAGGC
TATTTAGTT
ATACATATA
TTAGCCGCT
AAGGGGAGC
GCTGTTAAT
TAGGTGACT
GGGCAATGC
CCGCAACAG
ATGGATGAC
TAATCAAGT
TTTGTCTTG
CGTCTTACT
TTTTCACAT
GTTAGGTAT
TCCATTGTT
TGGGTACTC
AACAATTTA
TGGTCCAGA
CCCCTCATC
ATTGAGTTC
CGGGTTCTA
TAATCGAGG
TCTGTCGGT
TGAGGTTAA
TGCCCGTGA
GACAAGTGT
GATTGTGGA
ACGACATGT
GAGGTAAAA
TATAGGTAA
TCAAGCACT
CTTTTCGAG
GACTGAAAA
ACAGATTGT
CGTAGATTG
CGCGCACGC
TGGGTGGAT
GCCCCCTCT
TGTTCCTAT
TGGTCACTG
AGAGCCCGT
GTTGACCGA
GCTTGCATG
TTAGCTGAA
GTGTTTGTG
AATGATATG
TTTTTTCTT
TACGCATGA
TACACAATA
TGAAAGTCA
CAGGGTAGT
AACCAAGCT
ACAATGATT
GTGAACAGC
TTGCGCGCG
ATTTAAGGG
TGTGTTATC
AGAGGACTA
GTGGTTTAA
AATCTACAC
AAGTCGACA
GCCAAAACT
AAATGTTCA
GTGTATAAT
ACAATCTCA
TTCATATTT
CCCTAGCTA
TATTTGCTC
AGGTCAAAA
TAGTATGGA
ACTTCATTA
CCTGTTTAC
TCTTCTCAA
TAATACTAT
AATCAGCAA
CAACTCCAT
GTTGATTAT
TACTAATCA
AAAAGGAGA
CCCTGATGT
GGCCCAGTT
ATCCCGCTA
TATATAAAA
GGGGCCCAA
ATTTCTTGG
CGTCATCCT
CGAACAACA
TATAAATGC
CTTAGTATG
GAATTAATC
TCATATTAG
ACACTTTTT
ATGCCACAA
AATGAAATC
AACACGAAT
TCTGTTGAC
CAAACTATC
ATTTCCTTT
AGCTTGCCT
TAAATAAGT
CATTCTAGT
TATCATTAT
TAACCGCCA
ATAAAATTT
TATACTTAA
CTTATTGTG
AAATTGAAT
CGTATACAA
TAGTAGGAA
TTGAGCAAG
ATACTGAAG
ACGCATTAT
CTTTTTGAG
GAAGGGGGC
ACTTAAGTT
TCTTTAATA
ATCGTTGGA
AAAGGGTGC
CTTCATTGA
CCACTTAGT
TTTTTCAAG
TCAGCAGTT
TTGTAAAAG
CAATTTCTC
AAAACTGAT
GAATTCTCC
GATGCTTTC
CTATAGATA
CTGTTTTCA
CTTCAACTT
CATCAGCGT
GGGGTTTCT
GTAATAAAC
ACTCAAAAT
TGATCCAGT
TTCAAGAAC
GGGAAAATA
GCCACCAGA
GAGCGTAGT
CTGGATCAT
AGTAAAATA
CCATGCTTT
TCTCAATCA
AACCATTCT
ACCGTGGAG
AATTCTTTG
GCGAATTGT
GTCGTCTAT
CACATGATC
TCGGTGATT
CCCCGGTAT
CATTGTTAT
ATATTTAGG
TCCGTCTCT
CCAGTCGAT
CTCGAAGAG
ATCTGAAGG
CAAACATAG
TTCGGTACC
ATTGTCCGT
CTGATTCTT
CAAAGCAGA
TGTATCATC
TGTAATTTT
AATTGCGAG
CAGCCCATA
ATTACCAAA
AAAATTATC
AGCGTCCAT
GGAGTAAGC
GAAGGGGAC
ACAAATGGT
GCAGATATA
CTTTTCTTT
TGAGTTGCG
TAGTAACTA
TACCCGCCG
TACATGCGA
GTCGCCAAG
ATCATTGCG
GGTGCCATT
GCAGTGCAC
GTAACTATA
AGCGCAGAC
TCAATGATT
GCCATACTG
AACGCTTCG
CAGCTTACA
ATTCATTGG
GCTCGGTCC
CTCAAAATT
AGAGACGCA
TGATATTAA
GTGTGAGCC
TTCATGGCG
TTTCCTGTA
TCTTTCAAT
CTACGCGCT
CAGTTTATT
ATAACAGAG
AAGAGCACA
ACTCACGGA
ACAGTTCCA
ATCTACCAA
ATGGCTGTT
GGGGCAGTT
CCGCATGCT
GAAATCTGT
AGCAACCCC
GTAAGGCCG
TCCAACAGA
ATTGTATGC
GAAATCCAG
CAAAATGGC
ATAAATATG
GAGCATTTG
CCACGACAG
CTCTTGGTT
TGCGGTATG
TGAATTCGG
ACAACCCGG
TCGAAGGGT
GATGGTGGT
AGTTACCGT
TACGAATTC
AATGGCATA
TGGAGGAGG
AGATCCATC
TATGTTCTC
CCCGTACCG
ATTGCCACG
CATCTTTTG
ATAAAATAT
TATTCCGCC
GAGACCACT
AAAAGGATC
TTTGGAAGC
ATTCGACGT
ATCGCAGGA
TCGTCATCA
CCATAACCA
TCTCTAACA
TCCTTAGCT
AGAAAACGA
AGGCCGTCT
GAGGAAGAA
AGAAGGAGA
AAATCTTTC
AGTTGTAAA
TTTTTATTT
AAAGTATAT
TAACATTTT
GGCGATTAG
GTTATACAA
AATTCGTCA
TGTTGTTTC
ACACAATGT
AATCTGCCA
TCCTTTTGA
ATTATCCCT
CATCGCATA
TTCGTACCA
GAGCAAGTT
CAGGATCTA
TCAATAAGT
CAGGTCAAA
CAGATTCGG
TCAACTGAG
TGCATCTAA
GCTTGCTTT
CGTTTGTGA
TCGCGAAAC
ACAATAACT
ATTTCACCA
TGATGCGGT
AAGTAGCAG
GGAAGCCCC
CAAGGGTTC
CTCCAACAT
TACTATGGT
TAAAATTAA
CTCAGTCGG
TCGAAGCAA
GAGACCTAT
ATTTTAGAT
GACGAGAAG
TTCCTTTAC
ATAACCTAT
CCGAACTTT
AATTTCAAG
AGAAGAGGA
CTAAACCAC
TAAAACATC
ATACACAAG
CCTGTTCCA
TTCAACATC
TGGACTACA
AAGTATATA
GTTGAATAC
ATAGCGATA
CTAAGTGAT
ATTACGGTT
ATGTTGTGC
TTATTTTTC
TTACTCTCA
TTGCTGAAT
ATTTTGATA
TCGTTTCTT
ATCATTATT
CTGATGAGA
AAGAACAAA
TGGCCAAAA
TTAATCGAG
AATTTTCAA
TGAAGGGAG
TTTGTATCC
TTTGTAATG
ACAGTTATC
TTTACAGAT
TTTTCTTTT
CAAAATCAA
TAGGTGGCA
CTTACCAAC
CATGAAAGT
AATATGAAA
ACAGGCGGC
GCGTTGCAT
ACTTGCAGA
TGTGTCAAA
TCGAATTTT
CCTTTGGTT
GTTGCACAC
CATACTAGT
CTACATTTG
GGCGTTGTT
TAGAACCAT
CAATAGAGC
TATTTTAGA
GAACGCCAC
CTTGGGATA
GCAAGGTTT
AAAAGACGA
TTCACCATT
GATAAATCC
TGCTTTCGA
ACGGCTCTT
AAATTCGAA
GGAGCAGTT
AAAGTATCA
ACAAAAATT
AAATTCAGC
GTGAACATA
AATAAAGCC
GATATCGAC
CATTGGATA
ATTAACAGT
AATTAGTAT
TTATGGGTA
GAGAATGAT
CAACAGTAT
ATAGGATGA
GAGCCGACA
TGTTGTCGT
TAAGAAACG
GATAATCCT
GACCTTTAT
AGTGCTGGT
AATGGACAG
AATGGTAAC
TTTTTGCAT
ATATTACCA
CAACAAGGT
TTTTAGAGG
GGTTGTTGG
AGTTTTTTC
TTCGCATTG
GTTACAGAT
GTTGTCTAT
AAATAAATT
CAATAAAAC
ACATACATA
AGTATAAGC
TTATCCTAT
ATGCAGTAG
CCAAACCCA
TTGCATAGC
TAATTCCAT
CCACCAGTA
AGTATTGAA
CTGTACTTA
GGCGCAATA
CCGGAACCC
TCATGGCGC
AAAGGCATC
TTGAGGCAT
TTTGAGGCA
CCACCTGTT
GCCGCCTGT
TTAATCCAT
TGTTGTTGC
TGTGGTGGC
CGGTAGCTG
TTAGAGATA
ACCAGTAAC
CGCCGGTTC
ATCACAAAG
TGGATCCAA
CAGCAGGAA
TTTGGTTCA
GTCTAATAA
AATTAGATT
TCAGCTGAT
CAATTGCTG
CATCAGGTT
ATATTTTCT
ATCACCTTC
GCATCATGT
TGACAATTG
ATATTTGTT
ACGTCGTAT
GGAGGCAAT
TCTGGCTTT
GTTCTTTTT
TCTCTTGAA
CTCTAAGGA
ATAGTTTAT
TGGATTTTC
ACCACTTCT
TGGTCGCCG
CTTTTACCG
CCAACTGGC
ATGGAGATT
GTAGATTCA
AACGAGACC
TAGATTTTT
AATTCGTCC
TTTGGATTT
CACCTTTAT
TTACCAGTG
CATGTGTTT
CATGAGGAG
GATAGCTTG
AGAGTGATA
TGTTGTAAT
GATAGTCTT
GGTAGTAGC
CCTCATCTG
TTGTGTTGA
AGGAGCGGC
GTTCCTGCT
ATGAAGCCG
ATCTTTATC
CTTCATCAG
TTCAAAACA
TTCTTCGCT
CAATGTCTG
AGTTCTTCT
CAGAAACAC
CTTGGCTAT
AGTATATAT
TTCGCATGA
ACGAAGCAA
ATGTTCTCT
ACCGTTTGC
GGGCTCTCT
AAGAAAAAC
GGAAATGGT
GGCACATAA
CGCATCGGC
TTTTGGGCT
TTGTCGGTA
GAACACTAC
CATAGTATC
CCGTGCTCT
TTCACTTTT
GAGCTGCCT
TCACAGTGA
TTAATGTAT
GCAACCATA
TCTTATTGC
TTCGACAGC
AATATCCAT
AAAAAACAT
AGCTGTTGC
TACAGCATC
CTGATGAAC
TCCTGATAC
ATGATTCCA
AATTTGTAC
AACGAAGTC
ACTACCCCA
ACGTATCTT
CTCCTTTTG
TAGCCACCA
CAGGCTTTT
AAACACGGG
TATTAAGAT
TCTATTTCT
TACTACGAC
ACGATTTAG
TCGATTACC
ATTTTCGAT
GCTTTGCGG
AGTGTTTTA
TTGTTACGC
CTTTAGATT
ATTGATGAG
CTCCACTAA
AAAATACTG
GAAAAGCGT
TCAAATGAA
ACCATAAAG
TCGCCCAAG
GTTAGCGAT
ATGAGAAAT
CAAAAGTTA
ATTGGCCAA
GCAAATATC
GTAAGTTAC
TCTTATTGC
TGAAATATG
TTAATACAG
TGAACTGAT
ACATCACTT
ACTAACATT
TTGTCAAAC
CCATAAGAA
GCCGAATTC
TTTGCGTGA
AATCCGTTG
AGCGACTAT
AGACCAAGG
CTTCATACA
TCGTCTTTG
AAATGTTCC
AAAGACAAC
TACAACTTG
TTTATATCA
AACGCAAAG
TATAACTCA
TCCTCGTCA
CTTTCTGTT
GCGCGCTGT
TGTAATTAT
ACCCATAGA
GTCTGACAT
TTGATAAAT
TTTTTGGCC
ATGTTAGAA
CCCTTTTGT
ATATCTAAT
CCACTATCG
CGGTGTTAA
GGAAGCTGA
AAACGGAAT
ATTTTGAGG
ATACCTAAT
AACATTCCC
GAAGTCCAA
AGAATGTGA
CTCCCTCAT
GCTCAAGTA
GAATACCCA
CCTTGATGC
GGGGCACAA
GAACACCCC
CAAAGTCTA
TTAACCTCA
TTTACAAAA
CCGTACGTC
CAACTATTT
ATCTGTTGA
AAATGCAGT
TTGCATTAT
AAACATTCT
TAGCATGCC
CCGTACGCA
AGACATACA
CTACTTATA
ACGAATACA
TAATTCGCA
ACTCTCCCG
ATTCAATTG
AATCTACGG
CTCCTTCTT
CATACACTC
AAAGAAATA
GACAACACC
TGACTTACT
TTACCAAAA
GTAAAATAT
AAATATCTC
GCAAATATC
CAGACAATT
ATCAGATGT
TAATCGGCA
TACCAAAAT
TCCAGTTCA
CTGATGAGA
GAGGACTCT
CCAGTTTCA
ATACTAACA
TGCTATACA
AAACCGTAC
TACCGAACC
AATTCACTA
CTTGGCAGG
TCGTCAATG
GGCTACGCT
TCCATCCTT
GCAAGGAAT
GAAGACTTA
TGAGATCCA
AATCTGATA
GCTGTGAGT
GAAACGTGT
ACATATCTG
CAAATTTCC
TGTTCCTTT
ACGCCAGTA
GAGACTAAT
TAAAACTGT
ACCGTTCAC
CACGTCGTT
GGAATCTAT
CTACCGAAT
CAAACTAAT
TATCAACAG
TATCACGAG
AGATCGAAG
AATCAAACC
ATAAAGATA
GTCAATCAA
CAGAAAAGA
ACAGGAAAC
ATTCAGCAT
TCACTATGC
ATATTACAC
GAAGAATTA
GATACGTTT
GGTACGAAA
GTTCGTGGA
ATTCGTAGA
GAATTATAG
GGCGAAAGT
ATACCAAAG
AAAAAATAC
AGCGCTCCA
AGAAGAAGA
GTCTAGCAT
ATCAACACA
TATGACATA
TAATATGGC
ATAAGCGAT
CAACATATA
CTTCATTAA
GAATCTGTC
CAAGAAACC
GTATAATTA
ACTAAAGCA
ATGCTATAT
TTCCGATAA
TATTACATT
ACTAATAGT
ACATAAGTT
GGATTGATA
AATCGTAAT
TATCCTTGA
TTTATCAAC
AGGAATCCC
ATGTTTGAT
AGTTATGAT
AAGATTAGA
TGTCGTTAT
GTGGTAAAA
GGCCTTCTT
ATATCGGCT
TACCTCTCG
ATGTCACCC
AAAATTTTT
GTAAAAACC
ATTCTTTCC
TTCTAGTAT
AAACTACTA
ATTGACGAT
TGATTATGT
AAATTAATT
GATGTTCAA
TTCTTTGGT
TTCTGGACC
AAATTTTAT
TATAGAATT
CTTATATTT
ACATGTGAT
AAGATTTTC
CTAACTTGC
GATGAGCAA
CATGACGTC
GCGTTCTTT
TCATTGCTC
AAGTTTACT
TCGATGCCA
TTCTCGGAA
AATTGAAAG
ATAAAGTGG
ACTTTAACA
ATCTGACTG
AAAGAGTAT
AAAAATTGG
AGATGATAA
AATTTATTT
TCGAATGAC
GAAATTACA
CAACTTTTG
TTAAAAATA
GACTATTCT
GAGGATGGA
GGACTAATG
TATGTTGCC
CATTAATGA
ATGGTTATC
CATTAGAAT
AGCTAGTAT
AGATTCTCT
CACAAAAGA
TTCCTGATG
GGTGCAAAC
TATTGATAC
GCATTATAT
TTAATTAGA
TGAAAATCA
CTTACAAAG
TGGACAGAA
AAATATAAA
TACTGTTGG
CTTCTTGCA
AAATCTACT
CCGAAAATG
CCTTATGTC
TGGACAGAA
TTAAGAAGC
GATTATAAT
TACCTTGAA
CTACTCTGT
CTGCAGCCG
TGAGAGCAC
AACAAGGTC
TTTGATTGG
TCGTATTTC
TAAGACTTT
TATTACGAT
CCAACACGT
CAATTATTA
CTCATCTGC
TTCTGACTC
CTGAGATGG
TCATTAATA
TACCCAAAA
GTTCTTGGA
AAAACATTT
AGAACTCGG
CGGACTTGA
AGAATTTTA
CAGTGAGTT
ATAATAAGG
AAGTTTATT
ATCGATTTC
TCAGAGACT
TATATGGTA
TTTACTGTA
ATATTCAGC
GCTCATCAA
CGAACATTA
AGACCCAAA
TACAAAGCT
CCAAATGAA
GAGAAACTC
AGCAAATTT
ATTGTATCC
TAATTGAAA
CTCACAAAT
TTGCCAAGT
TAACCTTGG
GTGATAAAG
GTTAAGTTA
AACACTCCG
GAAAATATC
TACAAAAGT
TTCTCGCCT
GTGAAGGCT
GAGTGAATT
CTGAGTCAG
GAAATGAGT
AGATGAAAA
CCATCAACT
TTAGACTTA
CTCGCACCT
AAAATGAAG
AGGCTAGAT
GAAGGTACT
GCCAAATGG
ACATTAAAG
TTTAAATGA
TTGTTTCAA
ACTAGGGAA
CAGGAGCGT
GTTTAGAAA
GAGTCCGGC
GGCTAATCC
TAGTTAATG
TCAGTATTG
AATTGTTGA
CCTTTTTAA
GGGTTTGAA
GTACATTTT
TATACTCAG
GTTTATAAA
CTTGTATCC
AACTCATAG
ATTCAAACC
TCCGGAGAA
TCCTATGGA
ACTGGAGAG
AATTGGTGG
CGAAGAAGG
GAAGACGAA
TTATTTAGA
TACGCACTC
GTATCCGAT
AAGAAGAAA
CACAAATTT
AAGAGAAAG
AAGAAAGAG
ATAAAAAAT
TAAGTAAAA
ATACTATAC
TAAAAGACA
ACAAGAATG
CTTGAGAAG
TGAATGTTT
CTTGTTCAA
TAATTCTGG
ATTTCAGCA
AGAACCAAT
TACCAACTG
TTAGCAGCT
AATTTGCTC
TTTATGATA
GTCGAAATT
CTAAGAAAG
TAGTAGTCA
GCACGTCGC
CACTTTGAG
TCGCCTAAT
GAGCGCCAT
AACATCGCG
GGATCAGTA
ATATATCAT
TTATTTAGC
TGCTCTATA
CCGCCGAAA
GCCAAGAAA
AAAGGAGAC
CAGACACTG
AACGATATC
TAACAAGAA
TGATCTTAC
GCTGTTACC
ATTGTGATT
GTAACATTA
CTATCAGCC
ACAAAAAAA
TCTTAAACT
TTCATTGAG
TGGTGCTTA
ATATCCTTT
CATCATCCC
TTTAATGGG
AATACTAGC
AAAAGATCT
ATGATCACG
ACGATGTCA
AAAGAGGGG
AATTCGAAT
GCTGTTTTC
AAAACCATC
TTTTCTGAA
TAGTTTAAC
GACAAATCT
GCAAACCAG
ATCAATCAT
TCCGATAAC
AATGAAAAA
CACCTACTA
CATAAATCA
TCTATTTAA
TTTTGTTTT
TCTTGCAAA
GACGACGAT
ACCTTCTTC
ATTCTTCCT
ATTCTATCA
AGTACTACC
GGTACTCAT
ACTTTTTTG
TTCAAACAC
ATGAGCCTT
TCGTCTCAA
GAATATAAC
ACAATTTTT
CTACAAGCA
GAGCAAATA
TAAAATCAG
GTCCCTCTT
AAATGATTT
CTTGTTGAT
GGCGCCCAA
AATAGGACC
CTAACTGAG
GCAAGACCA
TCTGCATTT
CCCACATAT
CAGTGTTCA
ACCAAAATA
GCAAGGAGT
CTATAAGTC
AAATGCATC
TAAGCTTTT
GTATCAAAA
ATGATAACA
ACACCTCTT
TGAATAGCG
AGCCATATC
TATTAGCAT
TCCACCATA
TGCCATTAA
GTACCGCAT
ACGTGTTCT
TTTAACATA
TTAAGGACG
GGGCAGTTA
TATTTTTGA
TCGTTAAAC
ACAGGGTTT
GAAACTTTT
TTCCCCTAA
TTAATAACT
TGTGTCCTC
TATAAAATC
CCCCTCCTT
TTTATTGAA
ACTGTTTTC
AACGGGTCA
ACCACCTTG
AAAGTGGCT
ATTTCCGTT
TCTCCTTAT
AAAGGAAAA
TTTTAATGG
TAGTCGAAT
TAATTTAGT
CCCGCGCGG
CTCATTTAT
GCTCATTAC
CCTTTCTTA
TTTCCTCGT
GATTTGTGA
AAACTCTGG
ATGCCTGCC
ATCAATAAA
CGTGCTTTC
TCATGGCAT
AACGTGGCC
TTCTAATAG
GTACCCCAT
CTTTCGCGC
GAAATTTTC
CATAACACA
CCCTCCTTT
CATGATGAA
GCGAAAAGA
CCACTATCC
TGCTTAAGT
TCATTCTAA
ACAGGGTTA
AGATTTTCT
TGGGACGAT
CATCTCGAA
GCCAGTAAG
AGTCTCGAA
GGTCTGGCC
GAAGGCAAA
TTCTGAAAT
ATGTTCCTG
CAACGTCCT
ACCACTAAA
TTGACAAAC
GTAGAGATG
TTCTGATAC
AGATGGCCG
ATTTCAAGA
TGCGAATCT
ACGCGGATA
TCTAAAAAG
ACAGGGGCT
ACTACATAC
TGCAGATGT
ATGCTATGA
ATATGCTTG
GCGGATCTA
AGAAGACCC
GTGATGTTG
AAGACGAAA
ACGGGATTC
CTAATAGTA
GGTGAAGAA
TATTCTATA
ACAAGCATT
CTGTAAAGG
TATCGTCAC
AATCTATCA
ATTCAGAAT
TGGTGATCC
AAATATATG
AAAGTTTGG
AATAATGAC
CTTGAAAAC
CTTATATGG
ATCCTGATA
GTTAGTTCA
TGAACGATT
AAGGAAACC
GAAATGGAG
TAATGGTTC
AAAACAACA
CTTATATTT
TGACAAGTA
GGTAGATGC
CACAACTGA
GGAAGTTAT
TCCAAAAAT
AATTCGTTT
CAAAAAAAC
TCAACCCCA
AAGCCTCTC
AACTAAGCC
AGTATTTAA
GCTTATTGA
AGGAATGGG
AGGCAGATA
TCATCGTCG
TGCCGCAGT
GACGAAGGA
CCTTCATAC
GACAGATGA
TTGGATACT
TACGTGGCC
TTCTTTAGA
ATACGGATT
AGTGATACG
GGAAATTAA
AATCTTTTT
GAAATATTT
TAATCCGCT
ACATTGTCT
GTCCATCGC
CAAAGGCGG
CATCACCAT
TCAATAGAT
CAATTAAGC
ATTTCAACA
AATTTATTC
TGACGAAGT
GAGTTCCCG
TATGAAACT
GTGGCTCAG
CAACCATCA
GAAATCAAA
CCGTTTATA
TCACAATTA
TTTCCGAGC
CTGCACAGT
CAATGGCAT
GTTATTCTT
ATCACCAAA
AAATCTTGA
CTGGGTGGT
AGCCTTGGA
GTGTGTGCG
GCGAAATTA
GGACCCAAA
AAGTTGAAA
CTTGAAGGT
AATTTTGTC
TTGGTCCAT
GGATATGCT
AAATGTCAA
TTTCATGTA
GTTAAAGAG
TTACACTGT
AAAGCAATA
AATGATTGT
AGAAAGTTA
TTTTGAAGT
TATCTATCT
CCTTTCCTT
ATCTTTATT
GAACCTAAT
AGCTCTGGC
TCCCGCTTA
AAAAATTTC
TAAATATGC
CTATATCAG
AAATCAAGA
ATATCCTAA
GGGCTAGTC
TTTTTCAGT
AATTGCCTG
GAAATTTAA
TGACTGAAG
TAAAGAAAG
GTTCTGTTA
TGGAAATCC
GTTCTTTTT
GGAAAACTG
TTATTAATG
GTCCAATGA
GGTCTTTCT
AGCGAATTT
AGGTAATGA
TAGAGGAAT
TTAGTTAAC
CTGAGTTTT
TGCTTGTTG
GTGAACTCA
AGATGTATT
TATTGTCAA
TGCAGTCTA
GCTATTTGT
TCTCATTTC
TAATCTTCT
TTCCACTTT
TTAAATTGT
GAGGGATTA
TAATGTTGG
CTTCTTCTA
TCTAATTTG
GCTACTTTT
CGAAGCTAT
TTTCTTTCT
TAAATTTTG
CTAGATTTT
GCATTGAGG
AAGAGTTGC
AAGACTACT
ACGACGGTT
GTGATAATT
GGTGGGGCT
AGGGATCCG
CAGCAGTCA
TGTACACTG
TAATAGCTG
TTTTTTTTC
CACTTCCTG
TTTTTGCGC
TCAAAATTT
CATAGATGA
TATGAATTT
TTATTCGCA
CCTTCTGCA
GTAGAAACA
GTGGAACAG
TGATGTCTT
CTCTGTATT
TCTTACGTG
ATATGAGTG
CCGTATGGT
GATCTTCCT
TGCAACAAC
TTCACTGCT
TGGACGATA
ACATCGGCT
CCCATACTT
ACCCCACTA
TTGTCATAC
CCGACAAAA
ATGTAGCCA
ACAAAAAAA
CCAACCAAA
CCACGATTA
ACAATAATC
CCCTACGCA
GGTATATAC
CAACCATAA
TTTGATAAT
TTGCATCAA
TCACCAGTT
GTGTTGTGT
TTAACCACA
ATAGCAGCG
TGACCACAT
CCACTGTAC
ATGAAACGC
AACTTGAAA
GGCCATAGC
CCATAACCA
AACGTGGAA
ATCCCATGT
GATTTTTTC
GTTCCAATC
AGTCTGAAT
ATATCATAG
TGTTTCATC
CCAAATATT
TATACCATA
CACCATAAT
AGAGCTGTT
GACTAATTA
ATGTGTACT
AAATATCCT
CATAATCTT
CAGGGCATT
AGAAGCGAA
ATACGCGGT
AAAATGTGC
CCGGCCATC
ACTACCTTT
TTCATCTTG
TTTTACTTA
CTAATAAAT
TTGTTTATT
CTTTCTAAA
TTCCCAAAT
ACAAGCGAT
ACTGTTTAA
ATTGTACAT
GAAAAACCG
GTTTTCTTA
CTTGTCTCT
TTGGCGTGT
GGATTTCAA
TGACACCAC
TGGATGTTA
TAGACCTTT
TTGTTGCTT
GACGGAAAC
ATTAGACCT
TGAATGGGG
CTAAAGTAA
CTCGGAACA
CCAAATTCG
TTTCGCATT
GCTCTGCAC
GTGGAAGAT
GGCTCCTTG
ATCTCTTTC
CATCTAACA
GCAAGAAAG
GGCTGCCAG
GATATAAGC
TCTACTGAA
AATCGCTCA
GTGCCTTGC
ACCAACTTG
TATCAAGTT
GTCATCAGT
ATATATTTA
TATTACAAA
TACATTTAT
CTTGTAGGA
AGCAGGAAG
CATATTAAA
TCAAAATAT
TTGTCAATT
GGCAGCCTT
CAATACCCT
TCATGTGTT
ACCGGAGAA
TTCTGAACC
ACATCCTCA
GGCAATAAC
CTAGAGCCT
ATTTCCAAC
GTGGCTTAC
GAATGTAAC
TTCTTGGTG
TAACTTGGC
TGTTTTCCT
TTACCATCC
AATTTGTCT
GTTCTATAG
AGTATTCAA
ACCTTAAAA
ATCTAATGA
ATTTTGAAG
TAATAGCAC
TTCAAAGTC
GATATTATA
TTACTATCA
TTTAGCAGA
TACAATATA
CTGAGGGAG
TTAAATCAG
TCCCTTGTA
TTCCATTGT
GTTCTTTTC
TAATAATAT
GTGTCGTGC
TCCTCTTAC
ATGATATTA
ATATATATT
GGTTCATTT
ATGTCCAAT
GACGAGAAA
ACCGTGTTT
TTGTAATTC
CACTTCGTT
ACCACACAC
ATTAAGTGA
CAAGACAAG
CTTTCGAAT
TTTGAGCTT
TCTATCAAC
GATGATGAC
AGTGCAAGG
GAGGAATAA
ATTCCTATA
TATAGCCTT
ATATCTCAT
AAATCAAGA
AGGCTTCCA
GCTGTTCCA
ACCTCCACA
AAGCCAATC
TATACACCT
ACAGTTTCC
CACCTGAGT
ATGACATCC
TAATGACTT
CGAATCTCG
ATCACTGAT
TCCCTCTCA
ATACGGATA
GATACCCAA
TGGCAGTAC
ACAGACTGA
TTAATTATG
TCATCGACA
CTATTTATG
AGAAATCCG
CAAACCCAA
CGAAAACAG
ACGGACAAC
CAATAAGCA
AATCATACT
TTCAGGAGC
CATCATCTA
CCAATTAAC
AACATCATT
GTTTGAATG
GTCTTAGAA
AGACTTTTA
TACCCACCA
TATCCTTTC
ATACTCACT
ACTGGTCTA
AGCACCAAA
ATACGAACC
ACCTACCAA
ACAAAATTC
CCTCGATGT
CCAGTGTCT
ACTCTCCAT
CACAGCGGA
TATTAGATG
TTATGGTTC
TTCACCTAA
TTGATATCA
CACAACCCT
ACATCCGTC
AGAAGACAG
AGATTAGAT
CCGTTTAAC
AATCCAATG
GAACTATAT
AACCGATTC
CTAAAACCA
TCTAATATT
TATCGAGAG
TTGCTCCCA
TCTAAAGAT
TACAAACGT
CGCAGACAA
TCCGATCGG
TCCTATCAA
TTATCGCTG
TTATCAGAC
TTCCAGTTT
GTAAGAAAA
GACACATGG
GAAACGAAT
CAATACGAA
ATTAAAGAA
ACTGTTGAA
AAATAGACC
CGTGACGGT
TCCTGACAC
CATTAATGA
CAATTAGAC
ATACATAAG
TGAAGAAAT
ACTATCAAA
ATGGTCATG
ATGATATGA
GCAAAACTC
CGATGATGA
GAGGTAAAT
CCCAAATTA
AGGCCAACC
ATGATTACA
TCATATGTT
ACTTGCACA
ATGAATTGA
CACAAAAGC
TGCCTCGTA
ATTTACTTA
ACATGTACT
CCCATTATT
CAATTACCA
ATATCCAAT
AATGAGACT
TCGAAACCA
AAAACATTC
TATGGGTGG
TTATATTAT
TATGAGAAG
AATGTAATA
TATTAGTAT
AGGAGAACT
CAATGGAAT
ACAGTTAAC
GTGATAAAG
TATCAAAGG
TTCGTATAA
CATTGAAAG
TATTAATTT
TGCGTACTA
GATACATAT
AAACGCAAT
AAATTAACT
TATGCTGTC
ATACTCTGT
TGTGGGCTA
GTTGGAATA
TATATTGAT
CAACACTAG
AAGTTTGAG
GCTACGCGA
CGCCACACT
TTTTTTGAA
ATGCTTGAC
GTTAACCTA
CCTAAAACA
TGTATACTA
TAACTCTCA
TTTTACAGT
CATCATTTT
CCACCGATG
CTGGTCTTG
AGTAAGATG
TTGCTATAT
CATTATTTT
TTTTATCAA
ACAGATTGG
TGAATCAGG
TCCTTAACA
ACTCTCACG
GTTGTTTTG
TTTTCTTTT
GGCAAATAT
CCACTTACC
ATATTTATA
AATTTACAT
TAAGAATGT
GTTGCATAT
TGCTAATCT
CCTGCCCTA
ACATATTCG
TACCTTTTT
AAAAATTGC
TGGATGAAC
GAAAAATTC
TTGCATCAG
GCATTTAAG
TACACCATG
TTCTAACTT
GTTTCCTTA
CCACGTTGG
AATGCTTCG
GGTATTGTT
ATCCTTTGT
CTCTCTTTT
TGAGTTGTA
ATATGGTTC
CAGCATCCA
GATTTAAAC
TAGAATATC
TGTTACAAA
ACAGGTAAC
CATAAGGGA
ACGTACCCT
TGGCTTTTG
GGACAGCTC
GGTCTCCAA
GTACTCCCC
GAAGCTTTT
TTGAATCGT
TAACTCTGG
GTTCTCATC
AAACTATGA
ATACTGAAA
TAGATATGA
TGCTTTTAA
TCTTCTATA
TCCCTCCGC
GGGTCCTGG
CGACTCACT
CTTCTGAGC
AGTGCCATC
CTACGGGAC
TGCACACAT
ATCGGCTGG
CTCTTCAGC
CTTTTTCCA
AAGAGACTC
TGCTAACGA
GTCCCTCCA
CGTGGATAC
GCATCCCGG
AGCAAGGGT
GGATATAAC
ACCCCAGAG
GTATATGCT
TCAAGAATG
TTGCCTTTC
AAAACTTTA
TATGTAACT
TGCACCTTT
AATGTACCA
TGGTGAACT
GAAATTTGG
AACATTCGC
TATCATTAC
AAACCCATG
GGACAAACA
TGAAAACTT
TTCTCCATC
TAGAATGAT
CGCTTATCA
TCACTATCG
CTCCAAATT
CCAACAGGG
CATTCTAGC
CAATAGATC
AATCTAATG
TCTTGATGT
GGCTCTGTT
ATGATGCCA
CTGTCTGAC
CATCGCTGT
CATATAATA
AAACTCGTC
GGCGTTTTC
CCTTTTTCT
AAAAACTCA
CCAACATGT
CTAAAAATG
CCTTCTGCC
CCTATCAGA
CTTGATGAG
TTTCTCAAA
ATCATCATC
TCTTTTTCA
TCCAAGAAT
TTCGTTATA
ATGGTTGTA
AAAAACTCG
CAAATGCAA
CTGGTCTGA
ACTAGGTCG
TTTATCTAA
TTATACATT
GAAATAAAC
TCCCGACCA
ATAAAGCCT
TGGTAAAGC
AGTGGAAAA
TATTGTTCG
AAGTCGTGG
TTTCAACAG
AGTAGTGTT
CACAAATAA
CATTGCGTT
GAGTTGCTA
ATCTTTATT
GAATATTCT
TACTGAAAA
TCTATAACC
AGGATTTCC
ATTAGGACT
AGCCTAAAA
TATTCTTGT
TGTGACACA
TAAGAAGTT
TGTATTCCT
ACTCTTACA
GTCATTATT
AACCAATAA
TATGAATGA
TGACCATCT
TCTTTGAGG
TAGCTGATC
CTCAATTCA
GTATGGGAA
TTAAAATCG
GAGGCAAGC
CCAGTATGG
ACTTCTCTC
TGTTCACGT
AGGGATGGA
AACCCATGG
TTATGATTT
AGAATTAAC
GATTATGAT
TGCACTTTA
TGGTAAAAT
TATACGTTG
CCAGGACAT
AGCAGCCTC
CTAAGATCC
GAAAAATCA
TTTTTTATC
CCTGCTTTT
ATTTTCAGC
ACGGTCAAC
GTTAAGGAA
CTCCGAAGT
TGAACAAAA
CTACCAATA
TCGCAATAG
CGTGCTATA
TTTTGATGT
ACATGTGAG
AAAAATAGC
AACTAAAAG
ATCAGGAAA
AAGGTTACA
ACCAGGCTC
AATCACCGG
GTAATATTG
GTTTAGAGT
AACAATCAA
TTAAAGGTA
TTTGTCGAC
CAATAGTGT
AAATTTATT
TTCCAAACT
GATCACCTG
GCGGTAAAA
TTTTCTGTG
TAACGGTTA
ATACGATTA
ATTCAAATA
TCACTTTCA
AATCTGGTG
TTCAGCGGA
TCTCAGTAG
TCGGTCTGC
GTTCAAAAC
TACCAGAAG
TTACCGGAA
GGCCTCTAG
CGTGGATAT
CCGAAGATG
TGGCAACAA
AGGGATGTG
CTTTTTTTG
TTTCGTATG
TAGGAATCA
GATGAAAAA
AACGACAGT
TAGATTCAC
TTATATTCT
CTCATAGAA
AATCATAAG
TTCTCAATT
TGTAACCAA
TTTATATTG
GAAGTTTAA
TCTAATCTT
CCTAAAAAA
TTGCTATAT
CGACGGAAG
GAAACGCAG
CAATACTAG
CCCACAAAC
TGCGATTAG
TGATTTTTG
TTTAACTAA
GTCATAAAA
TCAAGGAGA
TACCTGAGT
AAGTGCCCG
GGATTTTGT
TTGATTATT
CTTTGCGCC
AAATGCTGA
GTTCTTATG
AAATGTGGT
AAGGTTTGC
ATGTACCAA
GTTGCTTTA
CAAGCAAAA
TTAACAATG
CATGCTCTA
ATTTCCGCA
TTGTTGTAT
GTGGTAGAA
TGTTTTACT
GAGATTTCA
TGGAACGGC
ACTAGTTGA
ATGTCGCAC
TTAACAACA
TAAGCATGT
TGACTACAG
GCCTTGATG
TTGTCCAGA
ATGGTTCCC
GTTCCAGGG
CAATGAGTT
AAAATGCTA
TTATAAGTA
TTTCTACTC
AACACTTTT
GATAATGTT
CAGGGACAA
TTCTTGACA
CGTCTTATC
CTGACGAGA
TTTTTTTTC
GTACTGAAT
AGAAATGAC
CTTTCACCG
AAATTTTCA
ATAAACTAT
TCTCTGTTC
TCCTTTCTT
TTCGAAGAC
AATCTATCA
ACTTATGGA
AAAAAGAGT
GCATCGAGC
ATTCTGGAA
TGGGTGTTT
GTCGAAAAA
GCTTGCTGA
TACAACTGG
TACGGTTTC
TTATCATTT
TCTCTTTAT
AGTGTCCAA
TATCTTTGG
CGAATGCTA
AGTCTTCCA
TGTTAAAGC
CTATCAGAA
CAACCTCAT
TTGTATGGC
GATTTTCAA
CCATTTTTG
TGGTTATGA
AAAAATTTT
TTAATCTCT
AAACTCATT
TCAATATCA
TGTCCATGG
CGCATATGC
ACTTTGTTG
CAAAAGGGC
AGCTTTGGC
TCGCGGAGG
CTATATTAC
TACTGCTCT
TTATAAAGG
GAAGAAGAG
TATTAGTGT
ATATCTACA
GTGTAATGA
CTTTAGCAT
GGTTTTAAT
CTTAGCGTT
GATAATTGT
TGCGAACTT
TCTTCTCCA
TTATGTCAA
TCCATTCTT
CTTGCTTTG
AAAGTATGG
AAAACTCAG
TCAAGTCAT
AGATAAATT
AAGATTCAA
GAATATAAA
TTGGAAAGA
TTACAGTAT
AGATAGAGA
TACCTCTCA
TCACAGTAA
CTCCTTCCG
TTTTAATCT
TTATTACCT
TTTCCAGTA
AAATATATA
ACAACAATT
GATTACGGG
TAAAGCAAA
ATCACAAAT
AACTAATTC
GGGAAAGTA
TTTGGAACA
AGATAAAAA
TGTTTGTAA
ACAGGTACC
TGAGAAACA
CTTTAGCCT
ACCCAAGAT
AATCAAAGG
GAAAGACTT
GCCATTAGC
TTGAGTCAT
TAATTTGAG
TCTGCAGGA
ATTTTCTGG
TCTTGGCCA
TAAGGTTTA
CGCTATCTC
CACAAACAA
AGAGAGTCT
AACAAAACA
GTGGTGGTT
TGAATCAGC
CATCGAGGA
TGTTTTCAT
CCTCTGTAT
ATCTATCAC
GCAAGTCAA
TTCTTTGGC
AATATTATT
TATTGTCCA
TAGCAGGCA
AGAAACATA
CTACTTCAC
TCATGCCCA
AGTCTTCAA
ACCAATCAA
TTTCTAGAA
CGACTTTAA
TCCATCCTG
TGATTCTTT
ATGGGGAAT
CATTCACAT
GGCCCATAA
CGAGGAAGT
TTGATACTT
TTAGTGAAA
GACAGAAAT
TTGGCATCC
AAATAACAG
TAATGGTTT
TGTCCACAT
CTTATTTTA
ATAGCTATC
AGCGCAGGG
GATGGTAAA
ATAAAAATG
CTAAAGAGC
CTAAGTAGA
ATCATCTCC
AAACAGGAC
TTTGCAAAT
CAGGATTTA
CAGGAAAGA
GATTTTTTT
ATAGGCAGC
GCGGGCTAA
GTCTCATGC
ATTATATAT
TTGTTCAAG
AATGTGAGT
TTTGTAATC
TGCTGCGGT
CAATACAAG
AGTTCCTGG
GAATTTTTT
AATGTTTTT
AGAAAAAAG
GTCGTTGAA
GTGCTGACG
ACTTATTCG
ACCTTTTCT
TAAATAACC
CCCCAAGTT
CTGTCGATA
TGCCGGTCT
TTGATCCTT
GAATTTCGA
TACGGATCG
ATAATATCA
ATAGTTCAA
TCAATAAAA
AACGGGATG
AACCACTAG
ATTAGAACC
ATTGTTGCT
TGCTAGAAA
GCACTTGGC
TGAGGAGAA
ATTGCCCCG
TCTGAATTA
ATGTGATCC
ATTTTCACC
AGCGTATGC
GCCCAACCA
ACCCTGAAG
TCTGGTCTC
AGAACGGGA
CAAAAAAAA
TCAATTTAA
AGTCAAATG
GTAAACATG
TGCCATCCA
AATCATGTT
TAAAGAAAA
TCTGAAGTA
GCATCAACT
ACATCTTCA
GTTATGAAT
TCCATTCAC
AACTTTTGT
CAGTTTCTT
TTTCTTCTA
TTGTCTACC
GTAATCTCT
ACAAGAACA
TTAGCAACT
ATCCATTTC
TGGCAATCT
TTCAATCTT
GTCACCCTC
GGTAGATAG
CCTTCACCA
CAAATGAGC
TATCAAATC
GTAGCGAAT
TTGGAAAAA
TCAAGTTAT
TTCTTTGGA
TACTAGAAG
AGTACTAAT
AAGGTATGA
GGGTCATAA
AAAAAAGAA
TCAATACGG
TCTCAAGGC
CCAAAGAAG
TCTTCTGCA
TTCTTAGGT
AAAAATTGC
ATACGTAAT
GGAAGCAAT
TAGTAGATC
TGTGATGTT
ACTACCGTT
AAAGGATCG
TACAAAGAT
TAGCAACTA
CTAACTCTG
TTCTTCCCC
GTCAGTAGT
GTGAAATAA
TCAATCTTG
TTTGGATGT
GTTGTTTTG
TTACGTGCT
CCTCACCCT
AAGTCTTGT
TTATCCTCC
AACACTTAA
TTGATACAC
CTGTTCCAG
AACAGATAC
AATCAGAAC
GCCTGCAAT
TCCCGAAGG
CGGCTGGCT
TATACTCCT
AGTTTTTAA
TCACTGACA
AGCGATTTG
TTTGAATGT
AACCTTCTT
TGGAAACAA
CTCTTTTAA
ATACCATAA
CATACAGTT
TTCGTAACC
AACATCAAA
TCTTAATCT
ACTTGCTTT
AATTGATAT
GAAGTAAAT
TGGAACAAT
ACTTCCAGT
CTTGCAGCC
CCCGGTTTT
TCTTCAACA
GGAATTTTG
ATGATTGCT
GACATCCCA
AATATTTCA
ATTGACGTT
TTTTACTCA
AAACAGTTT
AAATCTCAA
CATCTAGGG
ATATATTGT
TAACTTGAC
CAAATGTTC
TTACCATCA
AGAAATTAA
ATGTATTGA
AGGACTCTC
TCCAATATT
TATTAGTTC
GGTGGAGTG
CCTATGTGC
AGAGGTGAT
TTGATATCA
TTTATCATC
TCCTAATTA
TTATCATAG
CGTCCTTTT
TCTCAATAT
ATATAGTCA
ATCATATTT
TGCATAAGT
TATGGTCTT
ATTAAAGAT
TTTTAGATA
TCGTTCAGG
GTGTTCGCT
TGAATTGGC
TGGCCAAAG
GCCTCCAAA
GGAAATAAA
AAGATGGGT
ACATGTCAA
TCAAGTAAG
GCAGTGAAA
GATTTCTAT
AGATATCAT
CCATTGAGC
AAGAACCAT
CCTTTCTTA
TAGCAGATA
GTAAAAAGT
AGATAGTGG
TTCTTTTCG
AGCAATTTG
CTAAGGTGA
ATGAAAAAG
GGTCACCGG
ATTTATCAA
TTGCTCGTA
ATGGAAGTG
TGGCAAGAA
ATGAATGCT
ATGTCATCC
TGTCAAATA
GGAATAAGC
GTAGTGTAT
CCTAATATA
TAGCGAAAA
TGAAGGCAG
ATATATAAT
CTTTTAAGG
GGCAGGTTT
ATTGGGTGT
CGTTGAACA
TTGTTATGT
CATTTACGA
TGCGAACTA
AGCTTTTGG
TACCTTATT
AAATTGCTG
ATTCCAAAA
CAATTTGAA
GAGGATTTG
GACCTGTTC
ATATGATGT
TAGCAGAGG
GTCGCAAGT
AGAAAATGA
ATGATGATG
AAGAATGAC
CTCAAACGT
AGTATGATA
GAAGAAAAA
CTTGTTTTC
AAGACGGTC
GAGGAAGAG
CCAGCTTTA
TAGCTAACC
AAAAAGGCC
GCCCTTCCT
ACTTACTTA
AAGATAACA
ACAATCGGA
TAATATTGA
CAGTGAGAA
AAAAAAAAT
TCGCAACTT
GAACAATCA
GGTGAAGCT
TATCCGTCC
AGAGACAAG
GAATCCTGG
TGGTGGTAC
GTGGTCGTA
GTTAACCAC
TGCTGTTGC
CAGAAATCC
AAGGAAGCT
GAAGGTCTT
ACAGAAGAT
AACGGTATC
CGTTGCTTC
GATTCGTTA
GGTTCCGAA
TATCATCTC
AATCTGCTA
TTGAAGAAG
TTACGCCAA
AGACTGGTA
TAAACTTAT
TAAGCCTTT
TTATTCTTT
ATGTTCGAT
CCCGCATTG
GTTACTTCA
CTGAGGGAG
AATATACCC
TCCCCCACG
GCGGCTACG
AAATCATTG
AACAAGCAC
ATAAGATTA
CCGCTACGT
CCATGTTCC
AACGCAATT
AATTGTGAA
TCACGCTTG
AACATACCG
TTTATTAGA
AGTATCCAT
CAAGAACAC
CTCGCCAGG
GATAACTGC
AGCGTAGGA
GAATTTGGG
GGGGAAGGA
GCGCATGTT
CAAGAACAG
CAGGCTAAG
ATACGCAAG
ATTGAAAAG
ATTAGGCAC
AGCCTGTAT
GTTTCCTTG
CAGACAGTT
ACTTTTTCC
ACTGACATG
AATTAACAA
TATTTTGCA
TCTCGTGAC
TTTCAACAA
CCGTATTAA
TACTTTTCG
GGAAAGCTC
AAGCTCATA
TTAAATTCA
GTTCAAAAG
TTCGGCTAG
GAAACATAT
TCCCGTAGC
TAACATATT
CACTTGCTG
AGGGGAACA
AGGAAATTT
ATTCTAGAA
GCTAGTCTG
CTAATATGA
AACGCCTAT
AAGTATTAC
AAGACTTGA
TGCTATAAT
TTTATACAT
TGACGTTGT
AATACCCTA
CTATGTAAG
GCATGTATT
TCGGAGGAA
GAAATTGAT
AATATTCAT
AGTAGATTT
TATCTAAAC
ACATATTCG
TTTTTTCTT
TCGTTTTTT
GTAAGAAAT
AAACCAATT
GGGAAATAA
AGTGGAGAA
CGAACCAGG
TTAAAGTTA
AAATTCGAT
TGTCGACGA
AACCCGTAA
GTCTTCCAA
CGCCTTCTA
GACTCGTAT
TTTAGGAAA
TCTTGTCGC
ATGCTTGAC
AAACATGGA
CCTTAAAAA
CGAACAGTA
ATTGAAGTA
AATCTTTCA
TTCTAACTC
TTCAACTAT
CCATTTCCA
TCTGACATA
AAATAGAAA
TTTTCATTA
GTTTTCTGT
TACCTTGCC
TAATCTGGA
TTGGGTCAA
GGGAAGCCC
CTTTCAGAA
CTGCCTTTG
TAGCAATAT
AAACCTCTA
CCCACTAGG
CCCTTGGGT
GGGTCGTCA
CGTCTCAGG
TCATTTTCA
CTTTAAAAT
TGCGGCCCC
TCTATAAGA
TGCTGTTTA
TAGTGTTAT
AGCGGTTCA
GAGAAAGAC
TTAGTTTAT
GCAATCCTG
AGGAAATGG
CTTTAGCAA
CTTTGTAGC
GAAGATAGG
GTATTTTTT
TTTCCATCA
ATAGTGTCG
TCTTTTCCA
GTGCGCAAT
TCTGAGTTT
TTAGTTGCT
TACCGATCC
ATCACCACA
TTGCACGAG
TTTTCTGAC
TGCAAACAG
ACTCTGGAA
TAGAAATGG
TTAAAAGAA
TGAACTTAC
ACAGAGAAA
TCTTAAGCA
AAGATCAAG
TATTAAAAC
CAAGCGGAA
CAGCTACTT
TTTTTTTTC
ACTTGTATA
TAGGCGGAT
AAATGGCTT
ATAGAAGAA
GGATTTTTT
CATCAGTCA
CCCGAGTGT
CTATGACTT
TCAGCTAAC
CTCAGCAGG
AGGAACCAA
TTATAGAAC
AATAAATGG
GGGTGCTCT
TTACTGCAA
AGCACCAAG
GGTCAGAAA
ATGTCACAG
GTTCATCAT
CACAAACAC
ATCAAAGCA
CAAATCAGC
ATTTGAAGG
ATCCGTGGT
GTTTGTCAC
AGTCTGAGT
GCAGGCACC
GGTTAATGA
TTGTACCAT
AAACATTTT
TGTGGTAGA
GCTCAAGAG
CACTTGATC
TTTTTTTCT
CGGGTTATA
TATATTTAC
TTGGCGCGC
GTCCACGCC
GTCCTTCAG
TCTTGGCCC
CTTGCATGC
AGGGATGAA
GCTGGATCA
AGAGAGTGT
TGTCAGGAC
AGGTTTTTC
TCCCCCAAG
GTGTTTCCA
CCGACTGCT
GCCTTCTCG
CTCTGCTTA
AAGAATCCC
GGCTGGCAA
TCTTTTCTA
ACGTTTCTA
TCACTTTTC
CTTCAATTT
TAAAACCCT
GAGTATGAT
ATTGGGAAT
TCTTCCATA
AAGTTACAT
CGAGAAACC
GGTGCTTCA
GTGGGCTAA
ACGTTTTCC
TCCCCAGAC
CTCTCCAGT
AAAGAGCAG
CCCCGCGAT
GCAACAGCC
GCTCGAAAT
GAAGCAGAC
TGATCAGTC
AACTGAACC
AGTAAGAGA
ACTATTGAA
CTCGTAGGA
GTGGAACCT
GATGAACAG
ATAAATATT
CATCTTTGT
GAAAGTCTC
GGTCTCTCG
AAGGCGTCT
AACTCAGGT
TTCCTGTGC
AATTCCCAT
TGTAGTTAC
ACAGGTTAT
GGTCAGATT
ATTAGTTGC
AACCATTAG
TCCGCATAT
TCTCAGATC
TTTTCACTG
TTGGTCGCC
CACTGGTGA
GAAGACGTT
CATTTCTAC
TCTTCATGT
TTTCTATTG
AATTTAGTT
GATCTTTTG
CCCAGGGCG
TGTGCCACA
AGCTTCTGG
TGCTCTCCA
CCTTGGCAC
CTTTACGTG
CCTGGGGTA
ATTGTCGTT
TCAGGAAGT
CAGAATTTG
TATAGAGAT
AATACTGAT
ATGGTTATT
AGGGTGGTT
AGTGAGTTA
AATTAGACT
TCAGCTAAT
TACAGGTTA
TAGACTTTT
ATAACATAA
GCCGTGTCG
TATGAGCTG
TTTCTGAGT
TACGTATTC
TCTAGACGT
GAAGATATA
GATATAATA
GAAGAAATG
GCGAGGAAC
GCTTAAATG
ACTGAACCG
AAACATTAT
GCAACACGC
GACTAACCC
TGAAATCTA
GCATCTACA
GATGGATGA
TGGATGTTG
ATCACCTCT
AGCTGTGAG
TTGGTGATA
AAATTGTCT
TGCTTTGAT
CAAAGATTT
CCATCTGAA
ATTCGGCAA
TTGAATATA
GCTGCTGAA
TGCCGGTGA
AAGCTGTCA
TTGGGATGA
TTTGTAGAA
AAAGAATAC
ATATATTCA
TTTGAAAGT
TTTCATGTA
AACCAAGAA
TGGTATATA
GCTTGTCTT
AAAAAAAAA
AGCGTATGC
CTTTTGATT
ATTTCTAGT
TAGAGAAAT
ATTATAAGA
ATATAGCTC
CAAGAAAGA
CTCTCAAAT
GAACATTTT
ATGTCTTGA
CTGTATGTA
TCTACTGTT
TGTGGACTC
AGTATGAAT
TTGGTTTAG
TATTTTTAA
TGTGCCCAA
TTCCAAAGT
ATTTCAGAA
TCACGATTA
CGATAATTA
ATTACCGTC
GAACGCGGG
ATACTAATG
TTGAAAAGC
TGCGAATAC
AGGATTTTC
CCAGAAATC
GTAAATATA
AGCGTGTTT
GTACTTATT
GTTACACCC
ACGTATATT
TTTTGATTA
ATAAACCTC
ATTCCAGCT
CCTAAAGAT
ATCCGATCA
AAATTAAAC
GCAATCACC
TGACCGATT
TTGCCTAAA
AGTTTTTGG
CCATGCCAT
CTATCTCAC
ATTTTGGAA
GAGAAGTCT
ATGCATAAG
GCAGGACTT
CCGCAACTG
GGAATTGGC
ATTCCAACA
ATAGAAATT
GAAATGTTA
AGGTTATCT
TCTTCAGAC
GACGAATAT
ATGGAAATC
CCAGTAACA
CCTAAATAT
CTCTCTTGA
GGTTAAATC
GAAATTAAA
GCAAAAATT
AGAATTACA
GATGCACAA
TATTTTTCC
TCAAAAAAA
AGGATTATT
AATTATTGT
TGATCTTGA
AATGATCCA
AATTTTATA
CTTTAACAT
CCTTCTAAA
CTGTTTTAC
TTGGCTTCA
AGCACATTC
TTTTTGCCT
GATTGTATG
ATGCTCTCT
GCCGGCGCC
TTATTTTGT
CTCATACCG
AATGAAGAC
ATATCCAAT
TTTAGATGA
TTTAGGAAC
CAACATGCA
TTGAGACCA
GGTGAGTTG
AGGAAATAC
TGCAGCATC
GATATATCC
TTATATTTC
ATTATTTAA
AAACTATGT
CTTCCGTCT
GTAAATCGT
AGTACACTG
CCCAGTTCC
CAGCCAAGA
TTTCCCGGC
CATAGCTGC
GGCATTTTT
GATATTACA
AATTCCATA
CACCGTAAA
AGACCAATG
TTCAACTGT
ATGTTATTG
AAAGGCTTG
TGATACCTG
TGACTTGCT
ATCGATCTC
TGTTGTTGC
TACTCGCCT
TCATAAGTA
CCTTACCTC
GGTTTTCAA
ATCTCTCCA
TTGAGCGAT
ACACCGTCA
TGAGTGGAT
AGATAGTAG
TACCTCTAT
CTTTGAACA
TGAGTTGAT
ATGCAAATG
GAAGACCAC
TGAAACGTT
TGATCGCTG
AACGCAATC
GGCATCCTT
GTTGATTCT
TTGTCTCTG
TTCGTAACT
CGCAGTGCA
CTCCTCAAA
CGCTTTCTG
GAATACATA
CTATTACAA
TAATATTTT
AATCCCCAA
TTTTCCGAA
AAGAGGTAA
GACTCATTC
GCCGTTCAG
AGTAATTCA
CCATGGCTC
GAGAAAACT
AGGCTATTG
TTCTGATGG
TCATGAAAT
TTCAGTAGG
ACATAGGAC
TTTCGATTT
AAGGATTTC
TAAGAATGC
ATTTATCCG
TAGATGCTG
ATTCTCCTG
CCACTATTC
GTAACGGAT
AACAGATTT
TAGCGTCTC
ATGGAAACT
ATTACTATC
CCTCATCGT
AACAATTCA
TGAGGAGGA
TTTTCACTA
CCGGCCTTG
CTCCAGTAA
GAATGCAAT
CTGTTTGAT
TAGTAACTC
CGACCTGTG
TAGGAGGAT
ATCTCTGAG
TTTTTACCG
CTCAGCATA
GGAGAAAAT
TCGAAACTT
ATTTTTTTA
AGAATTACC
CAAGTAGAT
CCGATCTGT
TGCTGGAAC
ATGAAAACT
ACTTCCTCA
TCGGATACC
TGTATTATT
ACAGATAGC
AAGCTACTC
CTACGAACC
GAGGTTCGA
TGGACCATT
AGTTGTATA
CTGGTAAAT
CGAAGTATT
TTGTTGGAA
TATAGTTAT
GCTATGAAA
GATAATGTA
TAATATTAT
CGAGGAGAA
AATAAAAAC
CCTTCATCT
GTAAAAAAG
GCTGAAATA
AAGAAATAG
TTGTATCCT
ACCTTAACA
TCAAAATTC
TTTCTAACA
CTGAATTTT
CAACGCCGC
CTGATATGG
ATCTTGTCT
TATCTTTGT
CAGTAGTTG
CGTAGATAA
AGTTAAGTG
TTTGTGCCC
TCCGTAGCT
TTCGCATTC
TGCTTAGTT
CTTTTATAC
TGTGTCACA
TCTTTGTCT
GTCTCATCT
GTTTTCATC
CTGTATCCA
TCGTTATCA
ATTCACGCA
TATCTTGGC
TTGGTCCTA
ACTTCCACT
CTGGCTCGA
TCTATGTCT
TGGTTTTTC
CATTTCCCT
TTTCTGTAT
GTTAGAGGG
ATGCTTCAA
CTTTCCATC
TAGCCTCTT
TTGTGCCAC
GGAGTAAAA
CAAATCTTC
TCCAACAGG
TTTGAATGA
GTCGAAACA
ACTTTTTTG
TTTCTCCCA
CTCATAGAA
GGAAAAAAG
ACCAAAGGA
AGGTTTTGC
CATGCGCAG
GACTCAAAT
ATAATTGAA
AAGAAAGCC
ATTATCTAT
TTTTATTCG
TTTTTTGTC
TTGCGTCGG
ACCTGTCAT
AAAAGAAAA
TGATTCTAT
TTCTATGTC
ATATTTTGA
GAGTAATAT
TCTCACCAA
GGATAAGAC
AGTGCGGCT
AGCATCAAC
CCTCTTTCG
TTAAGCTTT
CTTGAGTAG
GTAATACAT
AAAGCAGTG
GTCACTCGT
TTGAATACT
ACTTCAAAA
TTCCCTGCC
AGTAACTTT
TCTTCCTCC
GTATCCACC
TACATTTCA
TAGTAGCTT
AAGATATAG
GATCGACAC
AGAAATGAA
TCATGTTAT
TGAACATAA
GTAAGATCC
AAGGAAGTT
CTCCAGTCC
TACCGGAAG
TTTTTGAAT
TGAAGGAGA
TAGAAGTTA
GAGAGATTC
TTTTGTGAA
TCATATTTG
AAAGAATGA
TTTTTATTA
CGTTTCTCT
TCTGGAAGA
TGTTTCCCG
AAGATGCGA
CCTGGTTCC
CCCTTCTCT
GATAATAAC
AGAGGAAAC
CAATCTGAA
GGTAATCAA
TTATAATTT
CGCAGTACC
ATTGAGATT
AAGAGAACT
GAATACATA
TTTACTGTG
TCTCCATCA
TCCTTTTCG
TCAACCGGT
AACAATCCA
TGCCGGTTT
TTGATAAGA
TTGACCGGT
AAGAGCTTA
ACAAGAACG
GACATTGTT
CAACGTCGT
CTAAATTTT
GATAAAACG
TAGGCTCTT
GTAATTGTT
ATATATGAA
TTCCACCTG
TCCTTCCAA
AATAAAATT
ATGTGTAAG
TCAATATCC
TAAAAAAAA
AGTTTTTCG
ATTGAAATA
GATTGATTT
ACAATTTCA
AGTTCATCC
TTTTTCAAA
CAATTGCTT
CGTGATCTC
GTCTTTGAA
TATTGTGAC
GCTGATGGA
ACCTAATGA
AAGAAGCAG
TTTTGTTGA
TGCTGCAGA
TCTGGTCAT
AATTGAGAC
TTTCAGAAG
TACCACATT
CTGCCTAAA
TAATTTAGC
CAAAAATGT
CTATAGGGT
GTCGGAACT
TGGCCTCAT
TCAAAAGCT
TGAGGATAA
GTTGAGATA
GGAGATTTT
GACTTCCAT
CTTTCTGCA
TCATCATTG
ATGATCTTT
TATTCAAGT
ATAATGGCC
ATCGTTGTC
CAATTTGTC
TTCTCATGA
GTTCGCAAT
CAGCGACGG
CCCGCATCT
TTGAGAAAA
TTTCGTCAT
CAATCCATA
CGAAGATGA
TATTATCCT
CTACTACTT
CTTCGTATG
CATATTTCA
TTATGACCT
CAACACGTG
TGATGATGT
CAGCCTGAG
GTTTGTCGT
CCACCCGGC
ATATCACGT
AATTTCAAT
ATACTGGTG
ATCAGTATC
AAGTTGACG
AGATCGGAG
TAACAAAAC
CTCCACTAT
GCGTCACTC
TGCTGCGTT
GTTCATCAG
TCATCAGTT
CTCTCGTGG
TTCTCCAAA
TTTTGTAAC
CACATGCTT
ACTTGATGA
TGAAAGTCG
CTTGTTTAT
AATACGTAC
ATCAAAGTT
AGGGTCCTG
TCACACACT
TTATCAGAA
TAAATTTGA
AAGAAGCTG
TTAAAGGGG
GATGTTAGT
TAAATTTAA
ATGCAATCG
TGGCCTGGA
CTTCAGTCC
GTAAAGATA
TCCCTTGAA
CCGTCGATT
ATCTTCAAC
CATAAATGA
ATTTCTGTA
AATTTTGCC
CCCAAAAGC
CCGAATAAG
ATAGGAAAA
CTTCTGTCG
TCAGCCTCA
TGTGGCAAT
TTATCTATG
GTCTTGATG
CTTTTTATT
CCCTTAGGT
TATTCGATG
AGCGGTGTC
TATATAAAC
TTCCAGAGG
CACCATTCT
GCAGTGGTC
TGGTGTCTG
AATCGAACA
CCAGAATGT
AGGAGACTC
CACGTTTTA
GAATCAGTC
GTTAGGAAT
GGTCAACAC
CTCATTAGC
ATTAGATCT
AATACAAAA
ATGCCAAAT
CCCATCAAG
GATTGGGAG
ATGGAAAAA
ATGAACCTC
TAACGAAGG
GGTTTTAAA
TTTACGAAA
CTTACAGGA
TCCCCTTAA
CATTAAATA
CAGCTTTAC
TTACGTACG
GTAGCTGTA
TTATATCTT
GTTGTGTAA
TGTAGACAA
ACTTTTAAC
TTGTGCAAA
ATGGCGAAG
AAAACACAA
GTAATAATT
ATCTTTGGT
CTTTACTTT
GCACGCAAC
CGGGTGGCA
CTACCCGGT
GGAGGCCTC
GAACCCTTT
TGCCGAGTG
AAAATCACC
CTTAGCTTT
GAAGAGAAG
TTGCCAATA
ACTTAGCTA
ACAATGTAA
ACACCAATG
GAATGGAAA
TTCCGTGAT
AATCTGAGC
CTCCGGTCC
TAGCCTCTT
TAATTTCGT
TTAGTTAGT
TCATCGGGT
GAAAAGATA
TGTTAGTTA
GTTATTAAC
GTCAGCAAA
TTTGGATAC
TTTTCTAAA
TTTAATCAA
TTTAACCAC
ATTTTCCTG
TGTCTGATT
ATTAATCCA
CTGGCTTTT
TCCCACTAA
GCCATTGCT
TAACTTGGG
CTACCCAAA
GTTGGCTGG
TGGTGGTAC
TATTTACTG
TGGGGTTAC
TTTGATGAC
CTAACGTTT
GCTTACCCA
AGATTCTGC
TCTTGCCAG
TTAGGTTTA
TGAAAAGAA
CTAGTATCA
AAGAAGGCT
AGAGGAGGA
ATGTAGCAA
CCGAAACTT
ATTATAACG
GATTGTAGC
TTTTTCATT
GCTTCAAAT
ATGAAGCAC
TTTTTTTGA
TATAAATAT
TTATTTGTC
GCATTTTTA
TCACATTGA
TGCATATGT
TTTTCAGAG
GCATAAAAG
CCTTCTTAA
CATGCTTAA
AACTTTTGC
AAGTCTTAT
GATTTTTTA
TTTAGATCA
ATTGGGCAC
TATTGCCCA
CAGATGGGA
TTCATTCAG
TTTCCGTGC
AAAAAATCT
CTTGAAAAA
CAATCAAAA
TCGCTTACA
TCGTATATC
CTAATAACT
GACCAAAGA
AGCAATTTG
TATTCAACT
GCGTAAACG
AGCCTCTGC
TAGAGAGTT
GGTATATCT
TTCCGGTTC
CATTATGAT
TGTGGAATA
GTCAGCTTC
TCTCTTGCA
TCCAAATCA
TATTGCCGT
GTCTAATGT
CCATTTTCT
TAATCTGGC
TGTATGACT
TCTGAGAGA
GGCATCGGT
TCTTCGTTA
TCTCGTTCT
ATCCGGTGC
TCTTGTTTC
CTCTCCGTT
CACGTTTGA
TCTTTTTCT
GCTTCATCA
ATTTTCACG
CCACTTGCT
GGTACGTAA
AAAATGTGA
TATTTTCTG
ACTATAAAT
AGACTTTTA
ATCATTTCA
TTAATACAA
CGGAGGGTT
GGTTGTCCG
TATACATTT
TTAGGGGGG
CTCTGTTGG
TTTATTAAA
ATTTGAGCA
CACTACCGA
AAGTACCGT
ACCATGGAT
ATGATAGCG
GAAGACGTT
AATTGACTG
TTCCAATTG
CCATTTGCC
ACTTGGCGA
TAGATTTGC
TCGAAGAGT
AGTCTACAA
ACGAAAACA
AACCCAAAG
AAAACTTCA
AACAATGGG
ATTGATTCT
TGCCAATTC
AAGATGCCG
ACTTGGAAT
ACAAACCCA
TTTGGACTT
CCCATGATG
ACAAGTCGA
ATTGGAACG
ATAAAGACA
ATTAATTGG
TTTCTGCCA
CAACGTGGG
ATATACTAA
AAAAAAAGC
TGCCAGTAG
TTTAAATGA
TCAAGATGA
CTATTTTAC
ACTCAAGTA
CCGAATAGA
AAATAATAT
GAGTTGATA
CCAAAAGAT
GGGTTATAA
GTTTCATAG
GTTCCATAA
TATCGGCCG
ACATCTAAC
GCGTACGGT
CAGATGATG
GAGGCAAGT
AGCCGTTGT
TAAACAATC
ACTTTTGTG
TTACTAGTA
AAAAAGTCA
GGAGAATAA
TTCGCGTGG
TGAAAAACG
ATGGTAATT
TTGTCAGAA
TTTCGGTTT
TTTTATATA
GCAGATATG
CCTCGATGC
AGTGACATG
GGTTAGCAT
AAAGTATCA
TAGGTCCTT
ACAATGAGA
ACCGCAACC
GTTGTTGTT
TTATGTTGT
GTAAGCTGT
ACGCTTTTC
TCAAGATAA
ATAACGAAT
TTTGAATTT
CATAAAAGT
GTACGTCTT
AGCGGCATA
TTGTAAGTA
TAAATAGAG
AATAAATAA
ATCTAAGAC
GTAGGACAA
TGTATCATA
TTAGAATTA
AACGTCCTC
CGATTTTTT
ATTTGGGTC
GTTCTCGTT
ATTCTGCAT
GCCAGTGCA
CTTTTCCTT
AGGAAGCTG
TACTTATGC
TAGCCTTTG
GTAGTTCTA
TCATTGCTG
AACAAATGA
TATTAGACA
TTATTTGTC
CCCATTCAT
GTACATTCT
GTTGTACTG
TTGAGGAAG
TTAATCCCG
TGCTGTGAC
CAACGAATG
CAGTATTCC
GATCAAGTA
TTACATTTC
TAAATGATT
AAACATTGC
AAATATTTA
ATATATATA
GTGTGTGTG
ATTTTTTTT
TATAAAGAA
ACATAGTGA
TAAAGCGTA
GTTCTTCAT
TTGTTAAAT
CAAGGCTTT
TCAATGATA
GGCGGGACA
CCAATTCAT
GCACGCTAG
CATTGGTTT
GTTTTCAGT
GCATATCAT
TTAACAGGA
TGTTTGAGG
CCTTACAAT
TTGATTCTC
CTGTATAGC
TACATTGGA
GGAATACCT
AAGGAAGGT
CCTGATGAT
TTTGGATAT
TTGGCACTT
TTCCTAGAA
TGTATAACC
GCCATAATT
CGACCATTC
AGAGTCTTT
TAGTGCACT
ATGCGTAAC
ATAGCTAAT
GTGACCATC
GTAGGCATA
AAATTCACA
TGGACAGGT
CTTGTGACT
GAAATGTCA
ACCATTGAA
ACGTCTCAA
ACATTTTCT
ATGTATGGT
GTCTGTTGC
TTAGGTGAT
ATAAATACA
GTACTGCTT
TGGATGAAT
GTGATTTCA
TCAAAGGCA
ATTAGTTTA
TCCTCCTAA
GAATAAGGA
AAGAAACTC
ATCAAAAGA
AAAGCTTTT
CCATTACGT
TTTATGTTG
CCGGTTTCT
GTCAAATTG
CGTCAGGAG
AGTTACTAT
CTGCGCCTC
TTTATCGAA
TCCCGTTAC
CGGACCCTT
CATCTCTGA
TATCCTTCG
GTCCTGTGT
AGTACTGTG
CTCTATACG
TGCTCTTGA
ATCCAATGA
TTTTGAATT
TGACCTCTT
TGCATCATC
CCAATTCGT
GAAAGCTTA
GGAGACAGC
TTAAATTTA
GAACCGCCG
GAAAGATTG
GAGCTTCAT
GCAAGAATT
ATGATTTGT
TTTGCATTT
TTGGCTTGC
GGCTTGTAT
CCATTGGAA
TTCGTGGCG
ACTATCTCC
CCCTCCCAG
TGGTCCTGT
ATCTGGAAA
ATCTCTGGC
CTCAATTCA
ATTCGATTT
CCAAGGCTT
ATTGATCTG
TAGTGATTG
TTGATTGTT
CTTGGATAA
CTCTATACC
TACCAGAAC
AGGGTAGAC
TTGGCCGAC
TAGCGTTCA
TCATTCAGT
TTTCTTTTG
TCTGAAACT
TCCTCGATT
TTGATAAAT
TTAAGTTGA
GAATGTAAT
TAATAATTT
TAATGGGCA
GGAGTAGTA
AGTAGTGAC
TGAAATTGT
TGGATCAAG
GTCATACAT
GTTGGTTCA
AAAAGAACC
ATCGAAGTA
CCACTTCAT
CTTTTCAGA
ATCAAATTC
AGCCACCTT
CAGACAATA
CGAAACGCT
AGAAAGAAA
TAATAGCAA
TTGCTTATG
TACTCATTC
TTTAAGTTT
GGGGTTCAC
AATTTTCGA
TTTTTAGTC
CAAAGCTAG
TTATAGAGT
TGTAGGGTA
GCCATTTTA
ATTAGAAGC
CTACTCCAG
TTCCCCATA
GGAGTTCAC
TGCTGGTAT
ACTGTCGAC
TTGGGCCTT
AGGCGACTA
TGAAAAGTG
TATTAATTT
GGATCTGCA
AACTCAGCG
GTTACAGCT
CAGGTTTGT
ATTTTCGGA
CGAACCTAC
AATACTGGG
CGTTTTTGA
TCTGGTAAC
TTCTGACAA
GAGCTTGCT
TACAGGGGT
TTGAGTCTT
GAAGTAAAA
TTCTGGTGG
TCACATTAT
CTTTTCTCT
CTTGCTTTC
TTTTCTTAG
AATTCTTCC
TGGCGTTTT
TGCCTACAA
CTTCTCAGT
CCTGCTTTT
CCCCATTTA
AAGATATAG
AATATATTC
CTTTTACAC
CCTCAATGA
AGACTAGAA
CGATATTTA
CCATTGAAA
GTCACGGCA
TGGAGAAAT
AAATTGAGG
CTTCGAAAA
TCACAGCAA
TACAAGTTC
CCATTCAAA
AGAGTTCAT
CAATGGTGG
ACGAGAACC
CCACCAAAG
TGCAATTGA
GATCAAGAA
TTATATCAG
TTCTGAAAT
TCTGCCACT
GGATATGAC
CTCTATTAT
TAGAATTCA
TAGAAACCA
TTAATTGAC
ACTAAGTCA
GTTATATCA
ACTTGCTGC
ATAAATTGG
TCGGTGGAA
CCCCAAGCT
ATGTGAGCG
AAACCCGAA
AGCAGGGCA
ATTTATACG
ACCGGCTTT
CTGTCACAA
TAAGAGACG
AATGCTTGC
ATATTATAC
GATTGCAAG
ATTTAATTG
GAGTTTCCC
TCGGGCTTT
GGTAGGTCA
AGCCATAAA
TGTCTGATA
ACGGATGTA
GCCTAAACA
GCTTTGCGC
ATATCTATA
TTTCAGAAT
GCACGTATT
CTACAAACA
CAATGTTTT
TGGGGGACA
TCTGAACTG
TGAACCTGG
CCAGGAAAT
GCCCTATAG
TTTGCTGCT
CTCATCTAC
TCAACTCGC
GTTTATCGT
GTCTTCTGT
TTTATATAA
CCAGTTCTG
ACATTATCT
CAAACACTC
AGGGGTACT
GTTGCTTTG
ATCAGGACA
CCTGTAATG
GAATCTGAA
TAGACCTTG
TTCCTCCTA
TCTAATCTA
GGGGAACTT
TTTTTGATT
GTAGTTTAG
GTGCAAACA
AGCCATTAC
GAGAGTTGG
TTATTCATC
ACAGATGTT
GTATCAAAT
AAGTTGCGC
TTATGTCTC
AATCCTTGT
TCACTTCAT
ATTGGGATG
GAAAAGTTC
TATCACGAA
CTTCTCATA
GAGAGATAC
TTTTTTCAA
TTATTTACC
GACCTCTGT
CATAGGTGA
CCAATGCTG
ATTTCTCTC
AGTTTATTA
ATTTTAGGT
AGAAGAGAT
AGATATCTT
GCAAAATTT
GGAATCGGA
CCAAAATGC
GTATTTAAC
TGGAAAAGT
ATATTGGAA
ATGGAACCT
TTGTGTCAC
TCTCGGTAA
CAGATAAAA
TCAGATATA
TTTATTACT
TTCTTCAAC
AGCGCGAGG
TCTTTTTCT
AGCCCTAGC
ATTTTCTGC
ACGGAATGA
AGGCCCTTT
CCCCAATTC
TGACTATTA
AATTGCGAA
ATTATACAG
TCAAGGGTA
TCCAAGTTT
TGTGTTTTT
GTATATTTT
GTAATCTGA
CATCATGTC
GGGATATTA
AGCATACAG
TAATGTTTT
AGGTGAACG
GTCATTCGT
CGGTGGCTC
TTTCCGTTA
TTACCACTT
TAGTCCTTA
ATAAGGTTT
GAAAGAGAA
ACCCGCTTA
GAATATTTA
CCTCCTCTT
GATTACAGT
CAGATATGA
ACCAGAAGT
TCTGTCCTG
GTCGGTTTG
GGTATTCTC
ACGTTTTTC
TTCGCTTGT
TTTCAAGTC
TTTGGTATT
ATCTGGGAG
TTTAGCTAG
GGAAATTTT
GCTCATATG
AATATTTAT
TTTAAAGAG
GATGTAGCA
CCAAGGAGA
AACGACAAT
TGCAAAACG
GGACGTGCT
CCTGTGTAT
AAACGGACG
TTCACAGTC
CCCCGTTAA
GTTTGTCCT
CCTTTTTTT
GCAGAGCCG
GAAGCATCT
TAGCACGTG
ATTTTCTAA
AGCCGGTGT
TGGTCCTGT
CTTCGCTGC
ACGTTGGCG
ATCGTTCGT
CCAGCTGGT
GAAGCACTA
ATTATATTA
GGTATAATA
TTTATAACA
GCGCCTGCA
AGTGCTGAC
AAGATGATT
GAAGAGGAT
GGAAGAAGA
AAACGGAGG
CATGGCAAT
AAACAAGGT
CACTCAAGA
CCCAAGTAG
TTCAGCAGT
CACTTAAAA
GAGGGTATA
TAATTTCGG
AGAGGGCTG
GTACCTCAA
TTCCTTTAC
TAGAAAATA
TTTGAAAGA
CACAAGTAC
TCCCGAAGA
ACCAGATCG
ATTACTCCA
TTTGAAAAT
GAAAGTAAT
TCTGTGACT
AGGTTTTTT
CTTTCCATT
CTGGAAGGG
CTCCTTCAC
CGACATTGT
AAAAATATA
ACAAGCAAA
CGTGATATC
TAGTTAAGT
TCCTTAGTT
TCATAAATG
TAGCGTAAA
ATATTGGAA
CCCCCATTA
TAAAATATT
CCTTGTATC
CTGAATCGC
CAAGCCTGC
AAGCTGCAA
CTCAAGGGC
GCCTTGTTG
AATTTGCCA
GGAACAATT
ATGTGTAGC
CATTGAATC
TAAATGCTT
TTCCTGAAC
CAGTAACTA
CCTGCAAAA
ATTTCCGGC
CAATCATTA
GCTTTTACA
AATATAAAT
ACGCGGTTA
AGCCATACT
TGCGTTGAA
CAGCTTGGA
ATTAGCGCA
AAGACCAGT
ACTTCATGG
TCCTCTAAA
ACCCTCGGC
TCCCGGATT
TTATTCCCG
CTTTTTCCC
CTTGAGTTT
CGTTTCAAC
TATACGTAC
GAAGTGGCA
ATTCCTAGT
TACAAGCGG
GCTGACATA
GTTGGAATG
GCGGCACAT
AGATCGAAA
TTTTCTGTC
CACACTTAG
CGTTGGTTT
AGTAGGTGC
ATTTTTAGT
ATTATGCAG
ATATATTTT
CGGAAAATG
AAAAACTTT
TTCATACTC
GCGATGGAG
GCTGGAATC
GGCAAACAA
CGTTAAGTT
CACACAAGG
GCCAGTTTG
CCATGGCAT
AATAATTGC
TTCAGCGTC
CAAAAAAAC
TTAGGTAAG
ATATAACGA
TTATAAAGT
AATGGGGAG
ACTGTTGTA
TCAGCAGAA
GTTGGGTTT
GTAGCTGAA
GGGCAAATG
TCACCTGCA
TACCATCAA
CTCTGGACC
ACAAAGATG
AGTGACCAA
CAGAAACTG
GTGTAATTG
TTGGATGAT
ACCCGGCAG
CCAGTACCT
GATCGACTT
GGTCTGGTG
CTCTGTAAT
AGATACCTC
CACTGTGTG
TCTTTGGCA
AGAAACTAT
TGGTTCTAT
GTCAGAGAA
CAGCATCTT
GATGAGGTA
AAGAATATA
TTTTTTGAA
GCCCTTTCC
GGCCGTCCC
AATAATCCT
ACACCAAAT
AGACATGAA
TGATTTACT
CCGGATTGT
GAAGGTGCG
TCCTACATA
GGTAAATAA
TACCCAATA
GCGATTCTA
TCCATAATT
CAATAAAAA
CGTGCACAA
AGGAGAGTC
TTTGCAATG
CCTCATCAG
TGGTAATTT
TAAGAATAC
GTAGGTTAA
AAAAAAGGC
GAGCACCAA
TTTCGACTT
CCCTTGTAC
TGGACAGAC
CGCGTAGGG
CAGTGTAAA
AATTCACTA
TCATTATAT
TCGTTTGGT
GACGATAAA
ATACGTAAA
AGACACCAA
TCTCGCTGA
AAGGAGGAG
AAGCACATC
AAACACTGC
GCTGCAAAG
GAGGAGCGA
CCATATTTT
GATATTGAA
AGCAATCGA
CCTCAAGGA
CTGGATATG
CCTACCATA
GAGTCCCTA
TTTTATGTT
TCAATAGAA
TTTTCTTAC
TTTAACTTT
CTATGGGTC
GGCCATCTT
CTCTTACCT
ATTTGGTAA
CCCTAACTC
TTGGATCGG
GTGCTTTTT
TCCCCCTTA
GCACTTAGC
GTCCTTGCG
CTTTTTCAC
GATCTGTTT
AACCACCGA
AGCAAACAA
TTGATTTCT
CTGGGTGAA
CACACCCGC
ATGCTGGCG
GACAATGAC
CGCAGTTCC
TCGTGGTTC
CAAAACAAG
TGAAGAGAG
TCAAGAGAG
ATTAAAGCA
GAAGCCTCA
CTCAAGAAT
TCTCGCGAG
CACATCTGA
GATGAATAA
ATTTTTGAC
CAAAATCTT
AAATATGGA
GATCGCGTT
TAAAAAAAA
TTGTATTGA
TCCTACAGG
GGTACTACT
TCCAAGAAG
CTGCAGTCA
AAAAGAAGC
TAATCTGTC
AGCCTACTA
TTAAAAGCC
TCTTGGGTC
TTTTCAAAG
AATGCAGAA
TCCCAGCCC
ATGACGGTG
ACTGTGAAA
CACAGTACC
TATTTGATG
GCCGCTGAA
CCCTCATCA
TGGCAAGAC
TTAGTGTTA
TATGGGTTT
TTAGGCAAA
CCATTAACT
AATAGGAAA
TAGGTGTTT
GCTGTCAGA
TGGCTACGA
ATTTGATTG
GCTTCTAAA
TTTGCTTAC
TTATAGATT
AGAAGATTC
CAACGAAGA
AAATTACGA
TACCTTCCT
ACAGATATT
GACAATTGA
GTTTGTAAC
TATAAAGGA
GTAAGTTAA
AAGGAGAAG
TGAAAATTT
CCATACCTG
CCAGCCATA
GAATCTAGT
CTTCAGTAG
AAGCCGTGC
AATATTGCA
GTGACTCGG
AAAGAGGAC
CACACATGA
ATCCTGAAA
ACTACGACA
AGCCACCAA
TTCATTATA
GTTATCACA
TGTAAAGCC
CACTTATAT
ATAGGTTTA
GGGCCTATT
CGATACGCT
AGTCCCAAA
AATAAATTG
TATTCAGAT
TTAATCACC
TTATAAACT
TATTAGAAA
CCGTACACG
GGTTCTTGA
AAGAAAGCG
TCATCTAGG
TAAGCTTGA
ATTTCGACT
GTAGTGTCT
CAGGACTTT
GTGCATCAA
ATAAATTTA
TTCAGATAC
CATTTGGTA
AGTGAGACA
TGTCGCATT
TACAATATA
CAATTAAGT
GCCGGCTTG
CTAAAACGC
GTGGCCATT
TTATTCATG
TTATTGTCC
ACGTTCTCA
AATTTTTAC
GTGCCGATA
ACCATTTTA
TACCGGGCT
CTATATTGA
CTTGGTAGA
AATAGATAT
AACTTACAT
TCAACTACT
GGATTCATC
CTAATAGCA
GAGTATACC
ACCATCATT
ACCATACTG
GGAATGGTG
TAAGGTCAA
CCGCATCCA
AAAGTAAGG
TGTACATGT
ATTTACCAA
ACCAATGGA
GAGCACGAA
TACATAATA
GCAGAGTTA
TGAAAGTAG
AAAAGAAAA
TCTGCTTCT
GGAAACTTA
GAAATGTAG
ATTAGCTGT
CGCTGTTAG
TAAGTTTTT
GCTATAATT
CAAATTCGC
GAAGAACAA
AAAAACTAT
TCTGGAACC
TGGATATTC
AAGAAACAT
TGCTCGTTT
AAAATAGCA
ATATTTATT
TGTGATTGA
GATATTTAA
GGTGGGATC
AAAAATGCA
GTTCTGTGC
CCTTTTTAA
ACACTAAAA
GAAAATACA
AAGAATTTG
TATATTTCT
ATATTAGCT
CACAACGTA
GCTGAATTT
GAGGGTTTT
AAAGAAAAA
GATAGCGAA
GTTTAAAAG
ATCACAGTA
AAAATAAAA
ATACAATAC
ATTCTCTGA
TTGATGTGC
CCTAAAACA
ACACTTTAT
AATTTCAAA
GAACTCTCT
AAACGTTGA
GAAAATTGG
TTCCTTTCA
GGATGTCGT
GAGAATTAT
GAAATGTTT
AAGATATTA
TAGTAACGA
CATCCTAGC
ATGAACATA
CTGTCATGT
CAATAACAG
CCTTATGTA
AATCCGCGT
CCTGCGAAA
CCCATCCGG
CCATCAACC
TTTCAATTT
AACAATAGC
ATCTTCCAT
CAGGGTAAC
GACCACTTA
GTTTATTTC
AGGACAGTA
GACGATGTC
TTCCAGAAA
AATATTTTG
TATCTTCCC
GAAGCAATT
ACCCAGAGG
CGTAAACCG
CGGGTGGCT
CGGGAAAGA
AGGCACTAG
CGTGCAGTA
TCAGATCGA
TTCAATGTC
TTTTTGTAT
TTATCTTTC
TGAGTACTT
TTCATTCGC
CCCTTTGAG
TAATTTTAC
TGCTATTCT
TTTTCATCT
ATTCGTGGT
TTTTTTCAT
TTTCCAAAA
TATTCTTCA
GAATAATAC
TCTAAGCAG
ACTTCTGCC
TAGTACCAT
CTTTGGCTA
AGTTCTTTA
TTTGAACAT
TGCAAGAAG
TTCTCCACC
TTTGGAAAG
ACATCAACA
GTCTCTGAC
CTTCGACAA
CTATTTCTT
AACAACACT
ATCTTTGTC
ACTTGACTA
AAGGTCATT
AGTTACTGG
GAGGTGGTG
TTGAAGAAG
CAAGAACGG
AATCATCCA
TCCAATGCT
TTCTAAGAA
TCATGGGTG
AACAATTTG
TACCATTCC
TGTAGATAA
CTATATTAT
AATTAAAAG
TAATGAAAT
AAATAAGTA
CAAAGTGCT
TTTTAACGG
ATACCAACT
GCTCTTCTG
CTAATAAAT
ATAAATTAA
AATCTCTTG
AGATGGAGT
AGGACCCAC
ATTTCTCTT
AACGGTCGC
CTGCGCGGA
TCTCTTTGT
TTCAGCATT
GACGCTTAC
GCCTTCTTT
AACATGCTC
TACGATCAG
TTTTTCTTC
AACTTCTTT
TATGATCTA
TTGTTCTTT
TAAGCTTTT
CCTCAGTAA
CGTTTCTTC
TTCAATAGC
CCTGTTCAG
TGAGATCTC
ATCCTTGTT
TGTATGAAG
TCAAGCAAC
TTCTTCTTC
CGTCAGTTT
TCAGAGACT
AGCGAATGT
CTTCCACAG
TCTAACGGA
AGTAGTGAA
CTCTTAAAG
ACTAATAAA
TTCAATGAT
TGGATTCGT
GCGTCCAAG
AGATGGAAT
AAGAATATG
AACTTATAA
AACAAAGAA
GTTTAGGAG
GATCTATAA
TTGGAAACG
CAACTAAAT
TGTTGACGT
CTTCAAACA
CCAACAAAG
CAAGTAAAT
AGATTGATC
CACCTTCCA
GTTTGTTCA
AACGGCACC
TGTACTGGT
CCAATTTCC
CCAACGGAT
CTTGTTTTT
TCAGGACGG
TGGTTTATT
TTAGTTCAC
GACTGAAAA
ATTCCAATG
TAAAATTTA
GATCCTTTC
AATTTGAAA
CGGGATCTT
ATACCGACA
AACTCTACC
ATTCATCTA
CTCAAGATA
GATCAATAA
GCATTTGTA
ACTAGAGTC
CGCATCTCT
TGCCTGACA
TTTAAAGCA
GTGGATTAA
GGACGTAAC
AGCATCATT
AAAAGCGGG
CTTTAAGTT
ATGTTGACG
CTCAATCTC
AGTTAACAT
ATGTCGAAA
TTGGACTTC
TACGATTGG
TCCATTTTA
ATCACCTCT
TAATAATAT
GCATCCTTA
ACTCAAAAT
TTGTACCAA
TACAATAGC
AGGAGGAAA
CTTTATCCA
ATCACAGCA
TAAACCATC
TTCCCTTTG
CCCAAATCG
TTGGAACTC
AGCAACGAA
ACCGCCTTA
ATACGATTG
CGTCTTGAT
CCAATGGTT
TAAATTATC
CAGCAGCTA
TTTAAATGG
ATTTGCAGC
AAAGGCTGA
GTAGTACTT
GTACGCCTA
TTTTTAGTG
TTTAGAGAG
CATTGAATT
AAGCAAATG
ATTATTGAT
ATATTGGTA
AGGCGTTCG
TGGCGTTTA
TCTTCTGGA
ACTTATCTT
AGACAAACT
GTCATTGAG
GGCCTTGGA
AGAATGAAC
CTGTCTGAT
GTCAACAGT
TCAAAACTC
TCTTCACCA
CTCGTCTTC
AGGCTCTCA
GTTTTTTTA
GTTGATACC
CTCTATTTA
TTAGATAGG
ATGGGCAGT
GCATGAATT
AGCTGTGAC
ATAAATGTG
CCGATAAAG
TGCCTAATT
TCCTAAATC
GAAGCATGC
TTTACTCCC
CTGTAGGAA
AAGCTTCAT
TCGTCTTCC
TTGCTCTAT
CAAGAAAAA
GCCTCTGAA
TAAGCAAAT
TTTCCAAAT
TCGACCATG
ATTATTTTC
CTTCCGTAT
TTACTACTT
TATTTCGTT
TTTTATCTT
TCATTGGTT
CACCTTGCC
TTCTTCCAG
TCTTTTTCC
TGTGATATT
CAATAGCAT
CAATTTTTC
ATATTGAAA
TTTTGATGA
AGAAATGGT
TTCACAGGC
ATTTTGACC
TCTGATATT
CTTTAATGA
TTTGTTTGG
GTGGGCAAT
TTGTTCATC
CTTTCTCTA
GTTTCTTTA
AATTTCTTC
TTGAGATAT
GAGGAAATA
TGTACTGTC
CGGCGAACT
ATTTCCTCT
ATTTTCATC
ACTGCCACA
GTTCCGCTT
TTCTTCAAC
CTATTGCGT
TTGCTGATA
TGATGATAC
GATGTTCTT
ATGTTTCCC
TGAAATCGA
AGAGATCAA
GCTTTGGCA
TATTCAGAC
ATTTTCACT
TGACTTGCT
TTTTTTCCT
ACTTTTCAT
GAATATAAT
CATTCCTGT
TTTCCTATA
CTTTAAAAA
CTTTCATTT
TATAAGTCT
AGAATAATA
TTTCATAAA
GTCTGACTT
TTGTTTCTT
CAGATCGGG
AGTTATTCT
CCAAACAGA
TTGAACTTC
CAATAGTAA
CGTTGACGC
ATATGCGGG
CCATACTGT
AATTAAGGT
TGTACTGTT
ATTAGAGAT
TGTATCTAA
TTTTTCAGC
TTCTCTGGC
CGATTTCTG
CAGATGGAT
CTTTAGGAT
ATATCTTGG
GGGAAATGG
AGGTCCCAT
CGGCTGAAC
GTTAGTAAA
TGGCCATAA
ACGTTTAGA
TATAGTCAG
CTTTACTTT
AGATGAAAA
AAATACAGG
GCGGGAAAA
GCTCGGCCA
GCGGAGAGG
GATACTTTG
GTAAGACTA
GAATAGTGC
AGAAAGGAA
GCCTTTTTA
AGGACCCTT
AGAATTTAC
TAAATTAAC
TTCTTGATT
TTCCTACTC
AAAAAACTT
ATCAAAAGA
GTGTGGCCT
AGAAAAAAG
ACAGCCTGT
TGGCAGGTT
CTGCTTAAG
CCAGCTTTT
TAGGAACTA
CATGTGCCC
AGATATGAT
TTTTACGCC
GCGCAAGGT
CCTCATTGG
ATTTCCCAT
TATTCTGGG
CCCTCACAA
CATCAGCAA
TGGAGAAAA
ATTAAGTTT
TTTCTTACT
CAGATTCCT
CTGATACCT
AATTCTAGA
ACAAAAAGA
CCGTAGTTT
AATCTCATA
TGCTAAATC
ACAAGCAGA
CCCGGACAA
TTGTGATAA
GACTGATAA
TTTGGAAGA
GTTCAGAAC
CCATACAAA
GAGCTTCTA
AAACCTGTT
TCAGTGATT
AGCAGTGGA
CAACGAGAA
CCAAAACCC
TACAAGTGC
ACTCCACCA
CAATCCTGG
AACAAATAC
GTTCAGTTC
TAGTCCCAA
TACTACAAG
GCCCATGTA
AAGGTCTGC
TCACCCCAG
CAACCAATC
CTCGTACAT
ATGATTGAG
AACAAAACC
TCTTATTGT
AAGTTCTCT
TTTTTTTCT
AGAATTGCA
ACTGTGATT
AAATGTTGT
GCCAGATGG
TCAATACCA
AAGCCAATG
CCTACCTTG
CGTGAGGAT
TAGAGAAGT
AGTGACATC
TCTACCGCG
AAAAGGACG
AAAGGAGGG
ATTACTTGA
TAGGCAGAT
GCGAATGCC
AGTGGTCTC
ACGTTAAAT
ATCAACTAC
TGATGTTGA
TTCCTGGTG
CTATTAGCT
CAAACCTCT
TATCAAGAG
GGAATCCAC
TTCTCCAAA
TCCTTGTTG
ACGACTATG
CATCGCGAA
GTGGTGCTG
AATTTACAT
TCTTGCAGC
ATGATAGTA
AAGTTTACC
AGAAGACCC
TGAACATAA
GACAGGATG
TTTTACAAG
CCATTTTAG
CGCATGGTT
TATTGGCTG
CTAACTTAA
CCTTTCGCC
GGCATTGAA
TCCATGAAC
GGTGGTGAA
AGATGCAGT
GTGCTCCAA
GAAAACATC
TGAAAACAT
TTGAAACAG
AATGCTGGC
TAAAGGTGC
CAAAGAACT
CTTACCAGC
ACCAGAAGC
ATCTTCCCA
TCATTAAAG
AGCTTCAAT
CCATACCGG
GACGACGGT
TGGCATCAA
ACAATTGAG
TGTGCATAC
GTATGTATA
AATAAAGCA
AGCTCTGTT
CACGTTGAG
TTGTGTTTG
GTGCTTGTC
AGACACGTA
CTGGTACCC
TTGAGCATG
TTACGATGG
GCTTGAGCA
ACCGACACC
CCCTGTTAA
TATTCGCGT
TATAGAAAA
AGTAACTTT
GTCTCACTT
ATTCTTCCA
TAGAAACAT
ATCGTTCTT
TCAGGTGAT
CAATTCTAT
TCACATACA
TAAAATCAA
ATTTTTGTT
AAGGAAGAC
AAGGAGTCC
GTATAGTAC
AGCATCGCA
TGGCCTCCT
TCACGGAAA
GGAAATGAG
ATAAAGTTT
CTTCAAATT
CATTAGGCG
AAGACTAAA
CCTGAAGTG
AACAAGAAA
GCCATCGCT
CCAAAATCA
CCGGTATCG
TCCTTTTGG
AGCTTTGAA
AGAAAGAGG
GGTGCAGCT
CAGAACCAG
GCCAATTCA
GGTATCGCA
GGTTTATAG
TGCTAACTG
TGGGTGGTC
GAGAAGAAG
CTATAGATT
TTCAAAGGC
TATTTCCAT
AATGATCAG
TTTCGATCG
TAGGAAGGT
GAATAAATT
GAACTTGAG
CACACAATT
TGTTAAGTG
CCATTTTTC
TACGGAAGC
AACGGAACT
TTTTCCTTT
CATTCCATT
CATAACGGT
GATAAGCAT
TAGATAAGA
TAACATTTT
AAAAGGGAG
TATTTCCAA
GTTAAAAAA
TATTTTTGA
CAAGACAAA
TAATTTTCG
ACATAGTAT
CAGGTCTTT
AATTAAAAA
CCTTTTAAT
GTTATTGAA
GCGGACGTA
ATACTATAC
CCCTGTCGG
GATACTTTC
CTCTGATTT
CTCTAGAAA
AAATGAAAA
TATTTAGAA
ACAAACGTT
CTTTTTTTA
CCTAACAAA
AGATTTATA
GCAAATCAA
CTCGTTCAA
AATGATATT
TATCCTCGC
TTCAAAAAC
TTGCAAGAA
GAGCAGATG
GAGCCCCTA
CCGCAAGTC
ACTTATTGC
AACAAGAAA
GAATATGGA
AAGCAACAT
CTATATCAC
CTAGTTGTA
GCCCAAAAG
TAAAAGCCC
CTGTTTTTC
CCGCCTTAG
ACTGGACCC
CTCTCTTTT
TAGAAAAAC
TAATCGTGT
ACGAAGAAG
TGTTTGATG
AGAGATACA
AATGTCACC
TAAAGCTTC
TTCCTTTGC
TCGTGACAT
TGGTGGGGC
AGATGGTCT
GGCCATTTT
GAAACCTTC
ATTTGCATC
GGGTATTTT
TCAATTTTT
ACTTTCCGT
TGGATTTCG
TAATTTTTA
ATATGAGCC
TTTCTGTGG
ACAGCTTTG
AGGCGAGGA
CAGCATGTG
AGTTCTTGG
TTTTTCGTT
CTTGTTTTG
TTTGCAACG
AATAGCAAC
TCCACGAGT
ATGGAAGTA
GGTCAAAGT
CAGAGTTCC
GGCTTATCG
AGCTTTCCT
TAAATGGAG
TGTAGAAGA
GGGGTCTGT
AGCTGAGTT
TTTGGTCCA
GTTTTCCAT
ATTGATCTT
GGTAAACGG
TGCGGTCAA
GGGGAACGT
GATTTCTTT
TTCTACGAA
AAATAAGTA
TAAATTTGC
TAGTAATAT
TCAACATGA
AGAAACTCA
AAATGGTTC
GGATGGCGA
AAAAATCTA
ATAGTTCTG
AATTCGATA
GATTTGCTG
ATGATATGG
AAAGCGGTT
TGCAGATCA
TTCGACATT
TAACACAAT
ACCGCTTGT
ATAAATCGA
AACGGTTAT
AGCTTCCCT
ATGAAGTCA
ATGGAAAGT
TAGTGGTGG
AAAAAAAGT
AGTTTCTCG
AATTATGCG
AATAAAATA
ATCGAGTCT
CTGCGGTGT
CATAAAATA
GTACAGCAC
TGAATGCTC
TCTGATCAG
TACAGGTAA
CTGGAGTCT
AACAGAAAA
CACGCCAAG
TGAAAGAAG
GGACTTGCC
AACAAAAGA
AAAACATTA
CCTATCAAA
CGAAATTTC
TAGAAACAA
TTGCGAGTC
AGCATTGAA
TCCATAAAT
ATCGAATGC
CAATATCAT
TGAATACCA
GAAAGATTA
AGCAAAAGT
GTATAAGTC
CTTTGTTAT
TATTATTTT
ATTAAATTT
ATTGGAATA
GAAAGGGAG
CAAGTCGAC
CCATATCCA
TCAGCTACA
ACTCAATTG
ATGACAGGG
TCGATATCC
ATCCTCAAA
TTAATGTAT
AGATCCATA
TTCGACACC
CTTGTGCAA
CAATCTTTG
TTTTGCTTC
TGCTTGTTG
GAAAGAAAG
ACCAGAGGA
AGTTACGCG
ATAATTAGA
TACATAAAA
ATAATAACA
TACGTTGTA
AGCATTGTA
CCTTAGATT
TCACCCAAT
ACGGACAAT
CCCTCTTAG
GGTTCCTTT
ATATATGTT
TGATAAACA
TACAGTAGA
GCGGCTATT
GCTACAACC
CCTCTTTAA
CTAGCTGTG
GCTCACCCA
TGTTAGGAG
ACTTGCTGT
GACACCACC
GTACCATAT
ATATGCAGG
CAGCTATTT
AATGTCGTA
CCAATGAGG
GCATTGCTC
TACATTTCT
GCATCGAAT
GTTGCCCCT
TTAATATTA
TCAACTTTG
CGCTAATCT
TCGATGGGT
TGTTTTAAT
GGTCAATTC
AGTCAGTAC
TCACAAGAG
ATCGTTAAT
CGGTGTAGA
TTGCCCATG
TATACCAGC
TCAACCAGA
GTAGCGTTA
TCCATCCTG
ATTCATCTT
AATTCGTAT
ATTCAAACC
ATGTGGTAT
CCTGGGCAC
TTCACTGAC
TGAAATATT
GGGAAACTG
ACGAGCATG
TGTCTGAGT
ATGAAAAAC
ACGTGTGTA
TACTGTAAG
TTCATTTCA
GAAAGAGAA
GAGTGCCAA
GCATTAACT
AGGTAATTT
TCAAGGCAT
GCATAGGAC
GTAAATTTC
TGCGATGCC
TTGATTTTG
TAATATGGG
TTCGGATAT
TTTGGGTAT
TGTCTCAAT
GGTCAATTC
AGTCAGTAC
TCACAAGAG
ATCGTTAAT
CGGTGTAGA
TTGCCCATG
TATACCAGC
TCAACCAAA
GAGGCATTG
ACCCTCATG
ATTCATCCT
ACTTCAAAT
GTTCAAACC
AGGTTGTGT
GCAGGACAT
TTCACTGAC
TGAAATATT
GCGAAACTG
ACGAGCATG
CGTCCGAGT
ATGAAAAAC
ACGAGTGTA
GACTGACAG
TTCATTTCA
GAAAGAGTA
GGGTACCAA
GCATTGGCC
TGGTAATCT
AGAGATGAA
ACGTTTCAT
TATGCCTTG
TCTTCGAAA
GTGTGAGTG
AACTCTTTT
TGCGAAAAC
AGCGCTATG
TACATGAGA
TGACATATT
CCGGTCTCC
TGGGGACTG
CAGTAAATA
CCTACAACA
CCTAGCTAA
AATAGAACT
TTTTCTCAC
AGGGAATGT
GTAAAAATA
GCAATTGAA
TAAAAATTC
CTAACGATG
TTTATTCAG
TGTACCTCA
AAAATTTGA
ACTTTTTGG
ATTACCTTA
TATTAATCG
TTGTCTAAT
AAATACATC
TGGAATCTG
TATTTTAAT
TAAGAGATC
AAACAGATC
GATACAAAG
ATTCAACGG
ACGGTAATG
GCACATAAG
TTTAACTGA
TGAAAGCCA
ACTGAGGAA
TATAGACCC
AATATCTGC
GGAGGGTGT
GCTAGATAT
CTTATATAT
ATACAGACT
TTTGGAATC
CATTAGATG
GATAAATGG
CAGGGTATT
ACGATGAAG
GATGTAAAT
GCGCCACTT
CTATGGATA
GATTTGCAA
GCCATTTGT
ATTTGGAAT
AAAGATTCT
GAGAAAGTC
TCTTAGCTG
GCATTTGAA
TAAATTACT
ATTTGAAGA
GTTACCCCC
CCCGAACTT
AAAAAAAAA
GCTAAATAA
CAATTTAGG
CCGTCTTCC
TGTTGTAGC
TAGTAATAT
ATCCTACCT
TAAGTTTCT
GTCGGGCAG
AATGTTGAT
CGCATTAGA
CAAATTCTT
TTCGAGTTA
GCTTGCCCC
GGTTCAAGT
TCCAAAAAC
TAGAATTAT
TTGAGATAG
AAAATCTCC
GCCGTAATA
TGTCGTTTT
AATTTTATT
GCGATGCTC
AATTGTTCA
TTACCTCTG
ATCAAGGGA
TCCTTCTAG
TTGCTTTCC
GATCAACAA
CAGGAGATG
TTACCAGAA
ACAATAATG
CCGCTTAAA
AGACTTCCA
AAAATAAAA
TTGCTGCTT
GTTAGGTTT
AGGGTTTGA
GTTTCTCGT
TTCTACTTT
AAGAGGTAA
AGCATTATC
GAAATCAAG
GGATGAGAA
CCGTCTTAT
AAGACCATC
GAAGGTCGC
GTGGTTTCC
TCAGAAATC
ATCTATCTT
TTCGGTAGA
GAAAAACAG
GAGAAATAC
TGGGGGCAC
TTTTCATAT
CTCATCAAG
TTGTTATCA
TTTCTCCAA
CGTTTTAAA
TACGGCAGC
TACTTACAA
ATTAAAGGA
AAAATATCC
GCATTTATC
ATTCTACTT
GGTTTAACT
ACTAAAGAA
TGCTGAAGG
GTAATTCAT
ACCGATTTA
AAGACTTTC
CCGATTATT
ATGACAACA
GGAAGACAA
ATTTTTCCC
GGTGAGATT
AGAAATTAG
ATTTAGTCT
AAAGAGGAA
AAGTATTGT
TATTTGCAC
TATTTCGTA
TTTGTTAAC
TGAACGAGA
CTTATTTCC
TTGTTTGAG
TTGCTCAGC
GAAAGCAGT
AACTGTCTC
TGCAAAACA
GATATTATA
ATTGCGAGT
GTACCGTTA
ACTGATTCG
TTTGTTCAA
AAACAACAT
ACTTTGATG
GTACTGCAT
AGTTCAACT
TCGGTTTAC
ATTTTGGAA
GAATCGAAT
AAAAGAGAT
CACCGTCTA
GAAATTGGA
TGGAAAATT
GGCAGCGAA
TACAGAACT
ATTTTCTTT
TTCTAACTT
ATAGCAATA
GACATAAAT
TTCTAATTT
TGCATTCTC
AGGAAGGTA
AAAATTCCT
AGTTTGGGC
AGGGGCAAG
GTCTTCTGC
ATCAAGGTG
GTTTACTCT
AACCATGAT
AAATAATTG
TTTTTGAAT
AAATGAATA
TACTAGTAG
ACCCTGGAG
TTCAAGCAT
CTAGAGGTA
AGTTGGTCC
GTTTTATGG
TTCTAACAA
AATTCTGAT
CTTAGAAGA
CTATCTCAG
TCCATTGTT
AAGTCCTTC
ATCTCACAA
GATGATTCT
AGTTGATGA
GAATCTTCC
CGTATAAAT
TTGCAACGC
AATAAAGAA
TGCAGCTAG
CAAGAAACG
ATTATCGCT
TGTAAGCTC
CGAATGATG
CCGTTCTTC
AGTAAATTC
GAAACGCGA
GATCTTGAG
GGACATCGC
TTGCTGTTG
GACATTAGT
CGATTTTCC
ACAATTCGA
GCAGGAAAA
ATACAATAA
GAACCATAG
ACAGTAGAA
TACTGATGT
GTAGTCAAC
TCGAAAACA
AGAGGTATC
GAGAAGACT
GCTTTTAAG
TCAAATGAT
GAGACAGTG
TATAACGAT
TTACGACTT
AAGAAAACG
TACACTTCA
GAATGGAAA
GAGCTATTT
CGATTGTCA
CCAAGTTGG
GCTTCATTG
ATGGAGTTT
GCGCATGGA
AATCCGCTC
GGGAGAATG
TTTTCAATC
ACGAAGGTA
CTGTTTACT
AACTTTGTA
CAGCTCTAT
AGTACTATT
TGTTCGAGA
TTTATTTCT
TCTTCATTA
CAATTTGTG
GAGAGAGAA
GACAAGCAC
GATTATATT
CAATGGCTC
GGTGCTATG
TTTGTGGTT
CGTCGAGTG
CCATTGTCG
AGCCGTTCC
TCTGAACAA
TTATTAGCA
AACGAGTTT
ATTCTTTCA
TGTAGCAAT
CCCTTGAGA
ATGTGTTTT
GACTGACGA
AAATTTCTG
TTCCAGAAG
ATTACAACC
ACCTACAAA
GTATATACC
GTGATCTTG
AATTTGTAG
TCTGGATGA
GCTTGTCTA
ACTAGGATG
GTCCTCCAC
TCAAATAGT
TGAATGAAA
TAATCCTAA
CATTCGATG
CTTTGTTCG
AGAAATTCT
TTTCCACGG
TCCACGCCT
TCTGGACCT
ATTGATCCA
ATACTACGT
GGTTTGTTG
AGTTCTCCT
CTTATAACG
CAAACTTGA
ATTCCTCTT
ATAAAGTCA
ATTCAAAAT
TTAATTCCA
GAATTGATA
TTCCGTATC
TCATGAGAT
CTATTAGAA
TATTTGATC
CCAAAACCT
AACATAGCA
TTTATTGAT
TTAAATTTG
TTATCATGA
TCTTAGCGA
CAGTATTTC
TTCAGGGAG
AGAGCTTAC
TATCCACAT
ATTGAGTAA
TCTTCTCTG
TTGGTAGCG
TTTTTTGTT
AGCAGGAGA
TCTTCAAAG
GTCTCTTAC
AAGGTCTTA
TCATCTATT
GATTAGGAA
CGTTTTGAT
TGAAGGTTT
ACTCAGATA
ACGGAAAAT
ATTGTCAAG
ACAAGAGTA
TACACTGGT
TAATGGTTG
TCTGAAGAT
TCCTGAGAT
GTAATAAAG
GAGGACGAT
CAAAATACT
GGAATCCAT
GCAAGACTA
GAAACTCAC
GTAGTGGTA
GGTAATTCA
TAAGACGGG
TATCCGTTA
GAAAATGTC
CTTTGAATT
GTGGCGATG
TTTGTCATT
AAAAACGCC
TGGAGTTCA
ACTCTAAGA
CGGACACTC
TAATATCCT
AATACGCTA
AAGAATATC
AGGTAAACG
TATGGTAAC
TAGCTACCA
ACTGTGCGG
GTTGTAGCC
CATTCTTAT
CGCAATGGA
TCGAAGAGT
AATGAGCAT
TCTTTAATT
GGGGTAGCC
CAATTACAG
TGAATTGGA
TAAGTTCTA
ATTGCACAA
TCAAACAGC
TAAAGAATG
TTGGGTGTT
GAAAAGATT
CACAGGACG
TACGTTTGT
CATTGAACA
ACAGAGAAT
GGTGGATTG
GCTTGGTAC
GTACGGGAC
GGTGCATTT
TGTGAAATC
ATTCCATTT
GCCTTTTTC
TGGTGCGAC
AGTAGGAGA
TGCTGTTAT
TCTATGTGG
ATGAGGGAA
TATGCAGGT
ATCACTGGA
GGAACTTTT
ACTTGATCA
ACCTTCCAT
TAAATATAA
AAAATTCTT
CTGTGGAGG
AGTTGAGAC
AAATTTATC
TAAAACAGG
GGTTTACCG
GTGAGTCCT
GCAATCTTT
AGCGTTTGT
AAGTAGTTT
ATTTTCCGA
TCGACCCAT
CTAGAAGCG
ATGAAGATG
GATTTCTAG
TCCGACTGC
CTTAGGATT
CACAAGACG
AAGACGAAG
ATATATAAA
GTATGCAGA
AACAGGCAA
CCCTGCGAG
CTGCCCCGC
CGCCTGCCT
ACATCACTT
CATATCTTC
GCCGGTGGC
TTGCTCTTT
TAGAAGCTA
CCCGCCATG
GCAACTCTC
TTAGAATTT
ATGGCCAGA
CGTCGAACC
CTACCGTCA
ATCTACACT
CACCAACCC
AACACAACG
TTGAAGAGA
TGGTCCAAA
ACGCTGGTG
TCCTAGTTT
GCAGTGTTA
TGTCTATTT
TGAAATGAA
TGTAAAGAA
CCGCACTTT
ACTGAAAGT
ATTGGCCCG
TTTTGTGGG
ACGATGATT
TGTGGTTTT
GGTAAACTG
TTCGTGTTG
AATATGACG
ATAAATGTA
AGCCAAGAG
TGCCGCAAG
AAACCAGGT
CGTCAGCTA
ATGACACCG
ATCTGTCCC
CCAAGAAAA
AACCTCATT
ATCACTGGG
GCAATTGGT
ATTCCTAAA
GATACCTAT
TATGGTTGT
TACCACTGG
ATTTTTTTA
GTCATTTTG
AAATCAAGT
ATCACTTCA
GTACGTTGC
GCAAAGCGC
GAGTATGAT
AAGAAGTTT
GACAAAAAA
GCCAGTTAT
GACGGAACA
AGCAGCTGC
GTAGTGCCA
GTCAAATTC
CCCAAAATG
AGCACAGGG
TCCGGCACC
CGCAATACG
TCGGGCCAA
ATCACCTGC
CGCGCGGTC
TTTGGGCAA
AAACAACGC
CTGCGGTTC
CAAGATTCG
AGTCGGTGG
AACCAATGC
ACTGGCTCA
TGCTCCGAA
CACCACCTC
GCGCCAAGT
GCCAGCAAA
GAAACAAAG
TATGATGTA
ACTTGATTC
CAGTGCCAA
TCACGAGGC
TAATGTACA
TTAGACATA
GAAATGAAG
CGTTGAACC
TCAGAAGAG
CCAAAACCA
TACTATCGA
CTAAGCACC
GAAAACGGT
GCCAACCCC
TAACATCCG
ATACCTCCT
GCCTCCTCC
ATGAATATC
TTAAACTCC
CGTTAATTT
CTGTTCCCT
ACTCCACCA
TGTTGTCCC
CAAAGAAAA
GAGAGGGCC
TTTTGAAAG
ATAAATTAA
AAATTTAGT
TCTTCTCAG
GTACAGTAT
CAACGAATA
AAATCACAA
GTTGATCTC
CGGCATCAG
GCGGCGGAG
TAGTAGTTC
CCAAAAATT
TTCATCAAA
CATCACAGT
CAAAGAGGG
TTGGAGGAC
AGTTCGATA
CTTGTGAGT
AAAAATTCT
TCTTGAAAA
GGACATATG
TTTGCATGC
TTGCTAAAA
ATAGAACGC
ATCAGCAAT
GCTATAGTC
GCCTTAATA
ACCCTACTT
TTGTGCTGG
AGTTTCAGT
CACTCTACC
TGTCAAACT
AAGAAGGTG
GAGAGGAAG
TTCCGATTG
TGGCACAAT
TTACCATCC
AATTTGCTG
ATTCAAAGC
CCCGGCTTC
CCCTAACTA
ACAGAAAAA
TGAAGATAT
ATGTCAAAT
AAAGGACCA
GAAGCGCTG
AGTTATTAC
GGGTTGGAC
TGTTATTGC
TAAATGGGT
TTTGCTATG
GCAGGAAGC
ATTTGAAGC
AAATTACTA
AATACACAT
CGACCTTTT
GGGCTGTCA
CAAGGCAGC
CCGGCGTTA
CAGTCATCA
ATAAAAAAA
CTATGTAAA
TACTTCTTT
GAATCCCAG
CTGTAGCCA
GGAGCACTA
TCGTAAGGT
AATTTGGTA
CTACTTAAG
TCATTACGT
TTGTTGCAA
CATACAGAA
CATGAGGAT
CTTGTTGAT
CTAAAGCAT
GTTTTCAGG
TGTTTGTGA
TTACCACTG
AATATCTTC
CCTCAACGG
CCATCTTTG
GGAACTTCT
TGGGATCTT
GTTTCTTTA
CTTGACGGT
CTCTTACGT
AAAGAATAA
ACGTTGTAT
TATTCGCTT
GAAAAATAA
GACAAAATC
CTGCGCAAT
TATGAACTG
ACTTTACTG
ACTAAAAGC
TGACCAAAT
TTATCCACC
AATTTATTG
ATGGTATCG
TCTTGAAGA
TTCCCAATA
AGATTTTAA
TATTTACAT
TTTTTTTAG
AATTGTGAG
TTTTTGAAT
GCCTTACTA
TGAGATGTT
CATTGTTTC
CATCTTGTT
GTAGAAGGT
TCTTACTTC
AAAGTTCTA
CTTTCTGAT
AAGCGGTTT
CAGGACTAG
GAGTTTGCT
CTCCACTAC
CAATGGAAG
TTCAACTTT
GGGAGCTTG
TATTCTCTG
ATTGCACCT
ATGCTGGAT
GTTGTGGAT
GAGCTTTGC
AGCTTGTAT
TTAACATTT
GGCTGTAAT
TTGTTGTTG
GTGCCTGCG
GCTTGTGCA
TTGTGCTTG
GTGCTTGAG
GGGGAAGCT
TTGAGCAGG
GGGCTGAAA
GTAGGTTGT
ACCGTTCGA
CTTCTAATC
TGCTTATAC
AAGAGTACC
TGGCTCTTG
TATAAAACA
AACAGCTTG
TATGCACTC
TCTAACGAC
TACGTTACT
GATGTTGAT
CACTCTCCC
CTCCTGCAA
AAGCTTGAG
TAAATTTCG
AAAAGCTTC
CGATTCCAT
GCCTGTTGA
ACAATGACC
GTGCTCTTT
TACAAGTGA
TAAAGTGGC
CTGCCAAAG
GGGTCGAGT
TTGTTGTTG
GTTCACCGC
TGTTTGTTG
GCAGTGAAA
CCTCTGGTT
AGTTCTCTC
GAAACAAAA
TCGGAAGGG
TAAACAAAC
GAGTACAGT
GAGAAAGGA
TAGAGCCGA
TACGTGTGG
CGTTATAAG
AAGATGTGG
TTTCTCGTG
GAACGAGGA
AGCCGCACC
CCACTGACA
GCTTTAGTT
GGATACCGA
GGTTTTAAA
CAAAATGCC
AGAAGGTTT
AAAACTACC
GTTACCCTT
TTGCTTCTA
TTCCCTTTT
TATAAAAAA
ATAACGACG
TTTTAGATA
AAGAAGGGG
GTTAATTAT
AACTCTGCA
AAGAATACC
AAAGATTTT
CGATGAGAA
TCAAGGAGG
AGGAAGACA
GTCACCGAA
ATCATCCTG
TATGTCCCC
ACCTTTCCA
TTTATGCGG
CAAACTATT
TGTTGCCCC
ATACAAAGG
ACGGATATC
AGTGCTGGA
ATGGACTTT
GTTATTCTG
TAGGGCTGT
CTCCGCTGC
AATATCAAT
GAAGGACTG
TCATTATGC
CAGAAATTT
GACATTATT
ATGACTTGG
AATGAAGAG
GAAGTATAA
ACATTTTCA
TTAGTTTTG
GATCTGCCA
GTCACCATA
ATGGAAAAC
TATCGATTT
AGCAAAGTA
ACGAAAATC
GAGAACGAT
TGGTAGAGT
GGTAGTATG
CAACATTCA
CTTTGAATC
AACCCTAGT
GTATCGACC
CAAGAATCA
ATAAACCAA
GTTCTTATT
GAGTTTTTA
CATATTTAA
GCTGCTGCG
TTGCGCTTG
TTGGTGGAG
ACCTCTTCT
TGCGGTGTC
GAGCTTTGG
TACAACGCA
CTTCCATTT
AAGTATACA
GCAACGGCC
AACACGAGC
CTGGAATCT
TCATCTGTG
TCTGACAAT
ACTCAGCAG
GAGTTCATT
AAGTTTATC
AGGAAACAA
ACATTGATA
AACCCAGTG
CCAAATCCA
TCGCCTAAT
ATAGGTGAT
TGGCCCTGA
CCTAACAAA
AACAAACAC
AATATTCTC
GCGTCTTCC
TGATCCACC
TCGTTGGAT
TTCTTTAAG
ATCGAAAAA
TACTTAACC
TCGTCAGTT
AGTTGGGAA
GTAGTTTAT
CTTTTCTTT
TAAGCCCTT
GGAACTTAG
ATCAATGTT
TCTTACCAA
TTCTGAACC
CAGTCACCG
ATCTCTTGG
CCAAATAAT
TCTTTATTC
ACGAACATA
CGTTCCTGT
GGCATGACA
TTTAACTTC
TATTAACAA
CGTTTTGTT
TGGTGTAGT
GGGTAACTG
GTACCAATA
TGGTGTAAA
TTGTGAATT
AAATAATAA
TTCGGAACC
CAACACCTG
TCGCCATTG
GATGGAATT
CTACTAGTT
GGTTTAGCA
GTCGATAAC
CCATCAAAT
TTGATACCT
GATGTCGCG
TCTCCACAA
ATGTCGTGA
ATCAGGTAA
TGCAATTGG
TCCGCAACA
TAAGTTCAA
CCACTAAAT
AAGGCCAAA
AATTTTTTC
GCTTGTTCA
GTTGGTTGA
AATATCATC
AAGCGACAG
GGTAGCTGT
GCGTAAAAA
CTATCCAGA
CTATAATTA
ATTTTTTTT
CCCAGCGGG
GTATTTCGA
ATTGCAAGT
AAACTGTGC
CAGTTTCAA
CATATGTCA
GGAAGTGTG
CTTCCCATA
TTCAGCCCT
TTTCAGGCC
TGAGCATAC
CGGAACACC
CAAAAGTAT
GTATCGTAC
TGTTGACAC
CACCCTTCA
TGTCGTGAT
ATAATACGC
TGTTTGGAA
GGACCATCC
TGGATTACC
CGAAGTTCA
GAGATACCG
AATGTACCT
CTACCGCGC
CCACCGATC
GGATGTCTT
AATGCTTTT
TCTTTACCC
CCATTCCTC
AATCGTACA
CACCTCTTC
AACACCAGC
CCTTGATTA
CTAGAAATG
CCAACCATA
AGGTTTTAC
TTACCCAAT
CTCTTGTAA
TGGGAAAGC
GCCATACCA
TTCCACTCC
CTTGTCTAA
TGGAGCATT
CCTGTCTCT
TGAAAATTA
CCAGATTGT
AACCGCAAG
TTTGATTAG
ACAGTAAGA
AATTCTGCA
TCTCTTGAC
CTCCTCCCA
GGGGAGATG
AAACATGTA
TATCGTGTT
TTTGTCCCT
AAAGCAAGC
CCCAAAATG
TTTGTTATG
CATGCGGTT
TATATATAT
CTTCCCCTG
CAATCAGCA
ACCCAGACC
AAGAGAACG
GAGTTGCTG
TGGAGGCAG
TTCCATCAC
TTTCCTATT
TTCTCTTGC
CTTCAAGGT
GAACTATAA
TCGTTATCG
ATTTACAAG
GGAAGCCGC
ACAAGTTAA
TGGAAGTTC
TCACAGAGA
GTGCTATCT
TCTAAGGAT
TGTTAGACA
ACGAATCCA
AAGGTTGGT
GAACGGTGA
GTTGGGAAA
GAAGCCATT
GAGATTGCC
CAGTCGGTA
TTCGCCCCA
CGAACAATT
AGAACGTTT
AAGAACGAT
TTTGAACCA
GTCACACTG
GACAGAAGA
CGGTGACGC
AAGCTTTCA
AGACAAACT
GGCCGCTAA
AATAATTAT
ATTAGTTAA
TAGGGGGGG
GCACTATTT
AAACCATAC
TCAACAAAA
ATATACCTT
CATTATTCT
TACCCAGTA
CACATTAAT
CCACAATAA
AAATGGGCC
CAAGCATTT
AAAATACAC
GAAAGGCTC
AAAAAAGGT
AGCAAGGAA
AGTTCAGGC
AGAAAGGTA
CCGTAGATT
AGAAACCTC
AACAAAGTC
ATTGTCGCA
GCGTTCGTA
AAAATCAAG
TACCATAGG
TAAAGAAAT
ATGTATTTA
CAGTTCTCA
TTTATTAAC
ATCGCCAAT
AGGCACGAA
ATTTTATTT
GGAAGTTCT
CTTTTATAG
CTAAATCTT
ATCCTTTGG
TGACGACCT
TTAACTTGG
TTCTTATAA
GCCCCTACA
CGCATGTCC
TGTGAGGAA
TAAACTTCC
AATACGTAT
CTTCTCGCT
TAAGTCATT
AAGGAGTCA
ATATCGCGG
GGTGGAATC
AGTCAATGG
CTTTTACCA
CTTTCTTAA
GGTTAGATA
AAGGAAAGA
CTCAAAAAC
CACTAGGAA
TTAACCAAT
TATAGTAAA
CATCTTGAG
CTGAATTTT
GACTTCAAT
TCTTTTTGG
ACACATTCA
AGCAGCATA
TGGACTCAT
AAGTAACCC
AACTGTCTT
GCAAAAAGG
TTGTCCAAT
GACTCTTAA
CGATAGAGG
TTGTTAAAA
CTTTAATTG
CCCTTGGAG
TTTTCCATC
CAAAATTTC
TAATTTGTT
GCAGCGGCA
TAAGCGAGC
CACCAGTCT
CCTGAGGTC
CAACATATC
TGTTTTGGA
CCACCGTAC
ACTTTCTAG
TATCTTCTA
GAGTAAAAT
AACACGAAT
TTGAACAGA
CGTGATAAG
TCAATTTTT
CTACAATGC
CCATTTGCC
AAATGTGTG
GTTCGCAGA
ATGTTGCGG
TGAGATCTA
AAGGGGAGC
TACCTGATT
TCCATACCG
CTGTGTTTT
AATTTGGGG
AATCTGTCC
CCTGCTAGG
TTTCACCCT
AACTCCATT
CAGTTGAAT
CAGGATATG
ATTAGGAGT
TGGAGGCAT
TTATTTGAT
GGGACAAAA
TTGGCATAT
ACTTCATCA
AGGATCTAG
TAACATCAA
TCATCGTCT
TTCATTTTC
CATCAAAAT
GAGGACATT
ATTGGTGTT
TGGATTCTT
TTATACTCA
CCTTCTTAT
TCGCCTTAT
TCACCAATT
TCCATCAAA
ATACCAGGG
AGTAATTTC
CACTGAACT
GCCCCATTG
TGGTGTATC
TGGACGTCT
ATTCATAAA
TTCGCGACC
AACTGTCTT
ATGTTCCCT
TTAGCTTTA
AGGTGGCGG
AGATCAAAT
GAATTGACA
TTTGAACTC
ACATTTCTC
CTCAATTTA
ATTATTTTT
ACTCATCTC
TAGCTCTTG
TCCGTGCTG
TTTCGATGC
GTGGAGACA
CGTAAATTC
GAATTGATG
TGGAAGATA
CTTGGTATA
ATTTATCGA
ACTTCTCTG
ATGTGAATT
ATATTCATA
TGCTTTGGT
AAAAAAAAT
TCCCAAGCA
TTCAGATAT
CACTAGGCC
CTTGCAATG
TTGTCAAAG
CAACAATTT
ACTTTATAA
TCGCAAGCC
CAATACGTC
AAGTTAAAT
GTGACACCT
TACTCCACC
GTATCAATT
ATGCCATTC
CACATACAG
CACACGAAC
AAAGCGTCT
TCTTTTAAA
TTTCGAAAC
TTACCGTTG
AAATTTCGA
TCAATGACA
TACACAACA
ACGATAGCC
CAGTTGACG
GTCAACGGA
GTTACTTTC
TGGGATAGA
ATGCAGTTG
TAGCCAATA
TGGGATAAA
TGATGTTTC
AAGAGGGCC
CTACAGACA
GTCATTTAT
GGCAGAGAA
TCATCAGTT
ATAATTCAT
ATGTATTTG
AGTCAAGGC
TTACAATAA
AGGATTAAG
AACCAAGTT
CAGCATATA
TGGATGGGG
CAACTCATT
GACTTGGCA
TGCTCGTTC
GATGTAATC
TTTCCTTCA
TCGGTGAAC
GAATCTGCC
CTCTTTGCA
CCGACTAAA
TAAGATTCT
CGACCTTAA
TCCGGAACC
GTTCATAGT
ATGCCAACC
AATAACGGC
GATTTCATC
CCTTCCTCA
CCGAACCAC
CAGCCCTCC
TAGTGATTG
GAAGACGAG
TCTTAATAA
TTACTTAGC
CAAGATAAG
TAATCTCTC
CTCAGTGCA
GCCCAGCGG
CCTCTCCCT
TATAAACAG
TGTTCTGGT
GGCTATCAC
ACGGACCGC
GTCGTTGCG
ACAAAAAGA
CTTGATGTG
TCAATTACG
AAAACACAC
ATCTTTGGG
CTTCAGCAA
CTTCTTACC
CGTCTCTGG
TTCAACATC
ACTTTCGAA
TTTCGAATT
GCCTCTTCA
GTACTTGGC
TACCTTCAC
TTGATTGGT
TTGACCCTC
CATCGTTAG
CCCTCTACT
GTAACCAGG
CTTCTCTAA
ACATGACGT
TCTTGGAGT
ATAATGAAG
AATCTAGCG
ATTTTCTTC
CCTGTCTAC
GAGAAAATT
AGCAGAAAC
GGTTGATAG
GGACCGTTG
GTCTTCAGA
TCTTCTTGA
CTATCTCCT
CAATGTCAA
AAATGACTA
GGCTTCACA
CTCCTTATC
CTGTCTACT
TTAAAATCA
AAAAAAAAA
TGCTTATTA
TACACACGG
GTCATGAGG
GTCCTCTTT
CCAAAAGTC
CACCATATT
GGATATCCA
AAAATATTT
ATCGGAAAA
GTTTAATCA
TTGATGGAA
AGATATTAG
GCAGCTTCT
CTAGCCGAT
ACTAATTTC
AACATTTAT
TTACTATAA
ATTATTCTT
GGGGATCTT
ATGGCCTCG
ATCCTTTAA
TCGTATTGA
ATTGGGCAA
CTTTTTCTC
CCTTAATTT
AAATAAATA
TTAATAGTA
CTTATATAT
AAATTTATT
TAACCTTTC
TCTTCGAAT
ATGCTTTTC
ATTAGTCAA
TCTTCTTTT
GCATTTCTT
TTGCTCATC
CCTTTTCGT
TCACTACCT
TTCAAGGGC
TTTGCCCTC
GTTAATATA
CGGTATGAC
ATTGGTTTT
CACCATAAA
ACCATCAGC
TATTTTGAG
TCATGCTGA
ATTTACCAA
GCTACTATT
TATAGTAGA
TCGTGTCTA
AAATGAATC
GCCCCGTGA
AGTTCTTGT
CGTTATTAT
ACTGAGGCA
AATAGAACC
TATTGTTAC
TTTCTTAAT
ACTCAAAGC
TCAAGGTTT
TTCAAGACG
TTCGTTCGT
AAGAGTGAG
GATTTCAAA
ATCTGAATT
ACTCTAACT
GAATAGTGG
AACTTCCAT
AATTTTTCG
TAACGGTTA
GTTCTTTCT
GATTTAAAT
TTACTCAAT
CAGCATATC
CATTTTGGC
GCCATAAAA
ATTATCCTG
GTGCTTGAT
TCATGGCAA
TCTCGCCCG
ATTGCGATG
CGTGGAACC
GAAAGACGG
TCTACCAAC
TGGCACTAC
GAGTAATAC
GGCGAAGAT
TATTAAGGT
GCGACGATC
CTTAGTTAC
CAAGGACTT
TCTGGAATG
ACTGTAATG
TTATAATCC
TCTTGCAGA
ATTTTGGTT
TATGGGAAC
ACACATTAC
GGTGAAATA
GCTACAAGT
ACGAAGAGG
CAAAACAAT
AACACTCCC
CGACTGGTG
CCCCATTGG
TTACTCAAA
AATCAGAGG
ATTTCCCCA
ACTGAATTT
GCCTATTTT
GACTTCAAC
ATTGTGTCA
ATTGCGATA
AAAGAAATC
TGAAAGCAT
TTAACGATA
ATTATGGGT
TGGAAACGG
ATTTCTTGA
GTCTTACAG
TTTTCAGGA
TCAAAGAAA
AATAACGGC
TTCCTCTAA
ACTGGTGGG
GACATAGAA
CAAAATAGG
GAAGAGACT
AATGATTGA
TCAATAAGT
AAAAAATGC
AAATTTGGA
TTATGCTTT
GGTTTTCAA
TTGAAGTGA
ACCGATGTT
TCCATAATT
GAACATGAA
GAATGGCAA
AAAATAAAT
GTAATCAAG
TTGCAAAAG
TGGGCACAC
TCTAATGCC
ACCAGCAGA
ATATTCTAA
GCGCCAGGC
CGAACAAAC
ATCTCACAA
TTGACCTCT
CGATGCCTG
TCCCCACAT
TAATTACGA
AATGAACGT
CCAACCAAA
AGCAGATAC
ATCTCTCCA
TCTGTACGC
GAATCGTCA
GAAAAAGCA
CACACCAAA
AAAGCTTTT
AGCAATCAA
AATATAGCA
TCATGTTCA
ACCCACTGA
TTATTCGAG
CCGTCATTT
AAGTTATGG
GAAAACTAT
CTAACCGAG
CTCCTGAAT
ATTGAAGAG
GTGCGGCGC
GGACGTATG
ATTCACAGA
AACACTAGT
CTTCGTGCC
AGATCAAAC
TTCGCTGAG
TGGATAGGA
ATTTGATTA
GGCTAAAGT
TTGCAGCAG
CTCTCCAAA
CCGAGACAT
GCTTCAAAG
TCACATTTC
TTCGCTAAA
ATATATTGT
TCGCCGCGG
AACTGTAAA
GCTCGAACC
ACTCTATGG
TTTTTGGTA
ACCTCGGTA
CAGAGACAT
ACTTATGCA
GCCATTTGG
TCGAAATTT
GGCAATTAT
AAGTTCGAT
AACGGTCTC
TATGGCAGA
AATATGTGG
ATCCGAGAG
TACTTTGTC
ATTCTCCGC
ACGCATAAT
CTTTAAAAT
GATTACTGG
GCTAACCAT
CAAAGAGAT
TCCACAGTT
GAAATGGAT
GAGCCTGTA
GAGGCGCCA
TCGTTTAGA
CTCCAGCTC
CATTGTCTA
TGCGGTTCA
GAAATCTTT
TAGGAAGCA
GAGACATTT
GCCTGGTTT
CTTTGTATA
ATTCCACAC
GCTCCTATA
TTTTTCTAT
ATAAAAACA
TTTTTCTTT
GATAAAACA
GTTATAAAA
AAAGAATGG
ACATCAGTA
CCGCGTTGG
CTATGTACC
GAAAGAGCA
GTACTCAGA
TGCTAAAAG
CGTATATTA
GGGGTGGGA
TCAAAAGGC
GCTCAACAG
ACATCAAAC
CCTAGCTTT
CCATAACTA
AACAAGCAA
AGCATTAGA
TTCTTCTTT
GTCAACTAG
TAATGAAGA
AGGCCCACA
TATTGGCAA
AAAAAAGTG
AAAGATCCT
ATATCATGA
TTATTGTTG
GAACTTTGA
TGAACTATG
AGCTGGTGC
GCTTACTGC
CTGAAGTCT
AAGGGTCTA
TGGGAACTC
ACTTTAACT
TGCGAACTA
TCTAGTTGT
CCCCAGCGT
CATCATTTT
GGCCAAAGG
CAAAATGCT
CAAAGTGAA
TGTATATTT
ACGATAATA
TTGAAAAAT
GCTAAGGTT
TGCTCAAAT
GGAAACGAT
TTGTTTCAA
TCGGACGTC
AATTCCACA
TGAGAAAAC
CTGCGGGTA
CACCCAAAT
TTCTCTACA
GAAACGGTC
AATTCTAAC
CAATATATC
TAAAGTTTC
ATTGCTTGG
ACTACTTTT
GAATAATGA
ACACCATAT
GGGAAAAAA
TATTGGGAT
ATCCCTTAT
TAAGATTAT
ATTTACTGA
CACGGATTA
TCCAACTTT
CTTTAGCTG
AGTGACAGC
CACCAATTT
ATAACTGGA
AATATCTTA
AGGCCGCAC
TTCTTATCA
ATTAGTATT
GGCCTTTAG
TCTCTACTG
GAGTTCAAC
AATCAAAGA
TGGCTTTAG
TTTGCAAGA
ATTTGCTAA
TAGACGATA
GATTTTACA
GGGTGCTTT
TATGCGAGA
ACAAAGCAT
TTTGAATGA
ATATCCTCG
TTTGTTGCC
AGAGTCATG
TATGGGAAA
TCTTCCTTG
TCCTTCTAA
CATTGGATT
TTTTCCTCT
ACCTTATAT
ACGCTGATA
TGCAATCTG
CTATGAATC
AGTTTAAAC
ACGAAAACA
CCCTTCAGA
GGTCTGCTC
AACCAAAAT
AGGAGACAT
ACTTGGTTT
GCACAAGAC
TACAACCAG
TAATATCGA
CCAGATGTG
AGGCAATGT
GAAATATTG
TTAATTGCC
CAATTCCTT
CGACGCTGC
GACCTCAGT
CACTACCAT
CAAATCATT
AATGAACAA
ATTGGCGAG
ATTGTTTGG
CTATGGAAG
ACATGAAAA
CCGTGCTAT
TCCGAACAA
ATGGGATAA
AGCGCAAAA
GCAATATCT
AGAAAATTT
CAATTTCTG
GAAGATATA
TATTTGGTA
ATCAATCAT
GAATACCCC
TTCTTCAAA
AACATTCGC
AAAGCATTA
ATCAGGCAA
CATCTGCAA
CTAGAGTCT
TATAATTAG
CAAAACAAT
TGTAAGAAG
AACAATGGA
TGGGCATAA
TTGGAAATG
GTACGAAAG
GGCAGCACA
GATAAATTT
TCCAATCAA
TCATGGCAA
AACATATTA
CTGTTTATT
TCAGACTAA
GGAACATTT
TGAAGTAGC
TGGACCACT
GGTATAGAT
AACATTGAT
TTGGTTGGC
CGAACTTCC
GTTAATAGA
GATGTTGAC
AAGGACTAT
TAAGAGCAA
TTTAGACAA
AAGAGCTCG
CAAGATGCC
TTTCCCCGA
GCTTGTTTC
TGGATCCAG
CTATATGGG
TGGACTCAA
GAGAGAAGT
GGAAGAAGA
AAAGTCTAG
AATAGAGGC
TGTTATTTA
AAAAAATAC
CAATGTATT
AAGAAATGC
TCTTGCTTC
TAAAATGAT
CGTTCTATT
TTTAAGGTC
CATCTGTCG
GTACCGCTG
CTCAAAGAT
CAATTTCTT
AGGGCCTTT
TTCCGATAG
CCAAGTTAA
ATTTCAATT
ATTTTCTTC
GTTCAAAGC
TTTACTCTC
CAAATCTGA
GTATGTAGT
TCTGTTAGC
CCTATTACG
TGGGCCGTT
TTAGTTTCG
GTCATCAAT
TTTTAGGCT
AACTGTTGG
TCTCTGCAA
TAAATTCCT
TCCTGGACG
AATATCACT
TTGAGCTGG
TCCAACACC
TTTTAATTA
TGTTGGATA
GTGCTTAGA
AAATTTCCT
ATAACGCTT
GAAAATTGT
TACCGACAT
TATTAGCAT
ATGATACCA
ACACAGCAA
TACAACTTT
CAGTAGATC
TACATGGAC
TAGGAACGA
CTGGTTGTT
ATTGGCGCC
CGCTTCAAT
GTGATGAAA
TTCCTGGAA
CCACATTGC
ATGAGATCG
ATGATTGGT
ACCAATGGC
AATGTGAGA
TTATGTTAT
CTGTGACTC
ATGACATTA
ACAGGTCTC
AACGCTAGG
TCACCGGAT
ATTGCTGAA
TAAGGATTA
TGGAATGGA
GTCAGTAAA
TTTCACCTT
AACCGGAGG
GCTTTTTCG
AAATGTTTC
CGTTTCATT
AATTATAAG
AGGAGCACG
TAAATTGCC
CTGATCAAA
AAAGTTCGA
TGTGTAACA
TGATTGTTC
AGAACCTGA
AGAGCAAAA
AAGTGCTCC
GCCAGTTGA
AGTTCATCT
ACTTAAGAC
TTGGGTTGG
CAATCTAAT
GAAACCTAA
TGTATGACT
ATTAATTTT
CGTGTACAG
AGAGTAAAG
TCTTTCATT
AGTAAAGAC
GCTCTGCGA
AGGGACGTG
AGAGAAGAA
ATTTTGCCT
AGCATAATG
GGAGGAAGC
CGGAGATAA
AAATTTTTC
ACAAACATT
CGACATCAA
TGGGAAAGT
AATAGTAAG
GTAGAAAAG
ATCTCTGTC
TCTGTTTTC
TCACGTTCG
AGGTAAGCT
ATAGATTAT
ATACATGTT
GTAGGAATA
ATATTTCCA
TGAAAATTA
GGGGATTTG
TGCCACGAG
ATAAACCTA
TCTTTAACA
TGAAATATC
GGGCATAAT
ACCAACTTT
TGTGGTGTT
TGTTGAATT
TGCGGAATC
CACGGGACA
AAGTAACTC
AAGGACTTT
AATTGTAGT
GGTCCATAA
CTTGATGCT
GAAATTAGC
GTTTAGAGC
GAGTCCATT
GATTTGTAT
CCTCTTCTT
AATTCATAC
AATTTCATT
TGTCGTTGA
TTGGATTCA
GAATTTATG
TTACATTGA
AAATTGAAT
TAAGATATC
TAACTTTAG
ATAATGATA
CAAGAAAAC
CACTAGCAG
AAATCATCA
CTCAAATAA
TATCAATTT
CTCAAAGTT
CAAAGCCCT
CGGCCCGTT
GCATTTCTA
ATCAGCAGG
TGATTATAT
TGTTTCTCA
TAAAAAGGC
TGAATTTTA
ATTATTACA
AAACTGATT
AGTGATTGC
CTTGAAGGC
TTTTGCAGA
TCTGCAAAT
TCCTTATTA
ATTCTTTAA
CAAATGCTC
GAGGACTTG
ATCAAGCAA
TCTTTAGTA
GATGAATCC
TTTCAGTCC
CAATACTTA
TTCAACCAT
CTCGAGTTT
ATGATAAGC
TCTTGCATA
GCTTCTAAA
AGTAAAACC
TCGGATCCT
AGCCACTGA
AATCAATAT
TAAAATCTC
TGGCGTATT
CAGCACCAA
TGGACTAGG
TTGAAATTT
ACTTCAAAT
AACAAATAA
TTCAAAAGT
TAACTTGTA
ATAATATCC
AAACCAGTT
TTCTTGCTT
TTCAATTGT
TTTGATGTT
AAAATCCTG
TGTTGCAAT
GTCGTTCGG
GGGCTAACA
AAAATGTTA
TGGTAAGAT
CTGAGTTAA
TCCGATGAG
AGCATCAAA
ATTGATCTA
TTATCGTCA
GAAAAGTCT
GTTTTTTGG
AACGATATT
ATGTCTTAA
CTAATTGTA
ATAAAAGTA
TTGACCCAA
TTGAATCGA
GACCTGATA
CAAATTTCT
GCTGTAAAG
TTTTTGGAT
ATTCATTAT
CATATACTT
GCAGTATGG
AATATTTTC
TATTAACTC
TGAGAAGTA
TTTTCTACT
GTGGAATAT
GTATTCATA
AGTCGATGT
ACGGATACC
GGGGAAGTA
ATTGCCAGA
AGTTTGGAC
AGATGGTAG
AAAAGTGGA
ACGTTTTAT
CTATTATAA
TGGCCTTGC
AAAGCGAAT
ATGTCCAGA
TAAATCCAA
ATAAAGGTG
TTGGAAGCA
CTCGGTATA
GTAAAATAC
ATGTTCTGT
TTTACATAG
GCCTAGATG
TTATCGTTT
AAAAACATC
CATCTGTAA
ATTAAACCT
TATATTCAA
CATCAGCAT
CTATCAAAA
TTTGTCTTG
TGTATGTTA
GGCAAAAGA
ACGCGCTGA
TAAATGAAA
TGTTTCAAT
GAGCAGTAA
TTTACTTAA
ACTTCCAGG
CCCAGGGCC
GTGGAACTA
TGGCTATTA
TGTTTTGTC
TAAAGATGT
GCACCGCGA
TATCAGGTC
AATCCTGCT
TTTCTAAAA
AATTTCTAA
ATTTCTCGA
TTTTGACTG
ATTCATTAT
CCTTTGATT
GATTCCATA
GCCCAGTCT
TCTCCTCGT
ATCGATTGA
TGTCTTCTG
TCTTGCCCG
TGGTATCGC
TCGATATTA
GTTAGTTAG
AGCTTATAA
CATTATCAT
ATCAGTTTT
GGTCACAAA
AACCAGTAG
TTGGAAGAA
TTTCGTCAC
AAGTCGGAG
GAGTCCGAG
GTTGAGTGC
TTGAGAGTT
GATGAGGAT
TGATATTTC
CAATGACTA
GAAATTCAA
GGGGAAAGC
TTGTAGAGA
TCGTTAATC
CTTAAAAAA
TATCTTTGA
TACGATAAT
ACTGTTGGA
CGCTAATCC
GAGTTCGAA
AGAAAACTC
CAACATTCT
AAGGATAGA
ACACTTAAT
CAAATCCTG
TGTCCTCCA
CCCAGGTAC
TGACCGTAT
TCCATGACA
AAGCGCTAA
TCTCAACAG
CCGGGTGTT
TTATATTCA
CTGCCATGA
AGAAAAACT
ATCAACTAA
CAATTGAAA
GGCGAACTG
CAATTGGTT
ACGAAGACG
AAAAATAAA
GAGAGCTAC
GACAGAAAT
AAAAAAAGA
AGAAACTTT
GAAGAGAAA
CTAAACCCA
AAGGTTTAC
AATTTAAAT
CTCCCCCTT
GTCATAATA
TGTAACGCA
CCTTCTGAA
GTAGTTAGC
TTTCTTGGC
GGTTCAGCG
TCTGATAGT
AATCCAATG
TCCTGGGAA
ATACTTGAC
AACCGTTTT
GCTAGTCTT
AGCAGAACC
TAAAATTTT
TTTTCTTCT
ATGCTTTTT
TACCGGACA
CCGAACTTG
TTTGTTATC
TGTCAAAAG
CAATATAAA
TTGTTGGGT
ATTTAATAT
AGTGGAATT
ATTACCTCT
TCTCAATAT
TCTATTTCT
AAAGGTGTC
ATGTATTTC
CATTCAGGG
GGTATTACT
TCTTCGTAC
ACCATGTAT
ACTGCCCTT
TATCCTCTT
GGGGGAAAT
TTTACTTAC
ATATCAGAT
TTCGACAGC
CCAAAAAGG
AGTTCTTGG
TACGTGCTC
ACGCTCATA
TGGATCAAG
GTAACAGAA
GAAGAGAAT
TCGAAGATG
AGGATATAT
ATCCAAGCG
GGATAATGG
GACAGGGGC
TGTGTTTGT
GGCATTGTA
GACAATGAA
CGTATTGTC
GACTACAAG
CTCTGATTG
TCAAAGCAT
TCTTTTATG
GAACCTAAG
TCATAGTGA
TTCCATTAA
TCTAACGTT
GAATGGGAC
AATGTCCTT
GAATACGCA
CAATCTTGC
AGGCGTTGA
GGTGCATGC
GGGTTACAG
TTGAACAAT
ATTGTTGGT
TAATGTGTC
GGCCCAATG
AATTCCGAT
TTGTGTTGG
GAGGTTTGA
GAAATTTTT
TGAGACTTC
TTTTTATAT
ACAATGAGA
GTACTTTGC
CCTATACAA
GACATATAA
AAAACTAGC
AAAGAAATT
TTGGTTAAA
CAAGCGGAA
CCTGCCCCT
TGAATTGCC
ATCCTAACC
TACATAAAA
TCCTTGGAT
TAAAGCCTA
AACATTGAT
ATATTATAA
TAGATGAGT
GCGAAAGTA
ACAATTGAA
ATCCACTTC
ACGTCTGGA
TGCGAAAGC
AAGCTGGCG
GGAAAAAAG
GTGCATCTT
TTTGACACA
AGCATTAGA
GTATTCGAA
ACTTCATCT
ATGACTCAA
GAATAGATT
CATAAATAC
CCTGTAATA
GCGAGCATC
GCTAAGAAT
TGTTGTGTT
AGGGATTAT
AACGTCATG
AGCTGCTTA
GGTATGACA
GATCCTGTG
AGACGTTTT
ATAGCCAAT
GAAAGAGAG
TGCCGGAAT
GTATTCCTA
ATTTTAGGG
GATTGTTCT
TCTTTTTAT
TCAGCATCT
AGTTTTTAT
TAATAGATA
AAACTTACT
TTATGGAGG
GGCGATGCC
CAAAAACGA
AAAAAGTGA
TAATTTTTT
AGGTTGAAG
AAGGATACG
GGGTAGCGA
ATACTGGTA
CCGACAGCA
CAATGATGT
GAAAACTAG
AAGGACGAG
AACTAGCAA
GAAGTTTCA
GTGAAAGAA
TTCTGATGA
TGCAATCAA
AAAGGCGCT
AGAGTATAG
AGAATGTTC
TTTACATCT
GAGACATGT
ATATTGATT
CTCGACCAA
AAAGGGTAG
AATTGGAGA
AAGCAGGAA
AAACAATGA
ATAATAAAA
ATTACCAAA
AACTTCAAA
CAAGAGAAA
ATATTTGGC
TGACAGCGT
CATTACTGA
AATGATTTG
TAGTGCGCT
AAGAAAACA
TTCTCCTTA
TGCCAATTT
ATAAGGATA
AGTACAAAG
TTAACAATT
CTAACTATC
TGCCGATTA
AAAATTATA
GAGGGGGAT
TGATAAAAG
GCCTCAACC
AATATACTT
GGACAGCAA
GCTGCAATC
GACAGAGCC
CTATCAAAA
TGGGACGAA
GGAATACGT
TTAAGGACC
TCTGGAAAA
GCAATTGGA
TTGGTGTCT
TGCAGAGTT
ACAAATGGA
CATACTCAC
GTGAAAAAG
TTCTTACCA
CAGTTAGGA
TTACAAGAG
TGAGCCATT
TGGACAATT
TCGCTTCTT
AACAATATG
ATACGCGCG
TATAATATT
TAAAAAAAA
ATTCGATTG
ATGACGCAT
TAGTCATCG
ATCATTGTC
CATCATCAT
CTGTTACTG
GCCATTTTT
CAGCGCCAG
TATTCCTCG
TGAAAATTG
TGAAGGACA
GCAGCCATC
ATCATCTTT
CATAATAAT
TTGAACTTT
TGTTTGCCA
GCATACGGG
ATGGCATGT
AAAAACCGT
AGTATTCAA
AAATCCAAT
TTCCCGTTG
GGGTTATCT
CAACTCACT
GTTTTCCTT
TTCTATCTA
AGTGTATCG
AGACTCTAT
CATATTCAA
ACCCCTTCT
TTTATCTCT
TTTCCTCCT
TCTGTTGAA
AAGTTCTAG
CCACTTTGA
TTTTGTTGG
ATCTGCGCG
AAGTGAAAG
TCATGATTA
GGTGGCCCC
TCAATCTTC
TGATCTACA
ATTTTTGAG
TATTATCAC
AGCTTGGTC
AATGGGCGA
GAAAATGAA
CTTTTAGGC
TTCAGCTAG
AAACAAAAA
AGCACTGTC
GCTTGCACT
TGTGTAATT
GCGATATCA
CTTCTTAAC
TTCTTTTCA
ATACAGTTT
CTTCCTCTT
ACTCCATGT
AATGGGTGA
CATTATTGT
TCGCAGGGA
TTATGTTTC
CATGCTTCC
CTCCTGCTG
ATAAAGTTT
CATGATAAA
ACCCTTTAG
GGTGCAAAG
GGAAATAAA
AACAAGTGC
CTATTTATA
ACCGAATAG
AAAGAAAGT
GAGATATCT
CAAAAACGT
AATTTCTCA
ATAGCTGCT
TTTGCGAAA
AACGCCAAA
ATGATGCCT
TGGTGTGAT
ACTAAACTG
TTATGCGGG
CTGAACGAC
TCCTGACTT
GACCAAATG
CATACTACG
AGTTTTTGA
ATTACAGGG
CACAAATTT
AATTTGGTT
ATCTGATTG
TGTATTAAG
TTTTGACGC
TCTAAAGCA
TATTTGCAA
TTGGCCATT
TTTCCACTT
TATTTCGCC
AAGAACAAA
GGTTACTGA
ACTTGACAC
CAGACCAAA
GATTTGGGC
TGATGGCCA
GTCCCGAAA
GATATGAGA
TTTGCAGAA
CACGAGTTC
GCTAATCAA
CAATTACAG
ATAACGATG
CAGAACGAA
AGAATCAGA
AAGATGGGA
CTTGATCAC
TAACAACCG
TAGGCAAGA
CACCGCATC
GAAAATCCC
TCGCAGAAC
AATACAGTA
TAGAAGATA
CAAAACTAT
TGTCACACT
CTGGAGTGA
TATTTGAGA
AGCTGATAA
ATTCCCCAA
GGTTCAAAA
CGTTGTTGT
CAATTTGTC
TTTGAGATA
AGGTGCCAA
GTCTTATAA
GTTAGCCCA
CATTACCGA
AGAACTCCA
GCCTTTCAA
CTAATTGTA
AAATGCCAC
TCACTTTTT
TAAGGCTAC
ATCTATACC
TGCTTTGGA
ATTAAAAGT
CACTTGGTG
TTTTCTTGA
AGGCTCATC
ATATAGATT
GGTCTGCCC
TTCGACTTC
TTACTGTTC
TGGTCCATT
TAAATCCCC
ACCCTTGTT
AATAATATA
TCCGCGGTC
GGACAACAA
TAGCGATCA
TAGTCTCGG
AAGATATCT
GTGCGGATA
ATCTCTGTT
GATTATAGT
AGTGAGGAA
TTCCGGCAC
TAAAAGTGA
AATTGGTTT
CCAAACCAC
CAACTATCC
GAACAGAAT
GTGGTGAAA
GAACCACAC
CAAAGCAAA
CTGTAGAAT
GCGGCATGT
CAGTAAAGC
CAAGCAAGG
GCAACATTT
TATGTTATC
AAAAACAGC
GAGAGCGCA
AGTAGAGTT
TTGAATCTC
GAATTTGAT
TGTTGACCT
AGGAAAACT
GGTGGTTTG
GAAAGAGTC
TTGTGCCAA
AAAGCCTTA
TAACGCAAA
AAGTGAACG
ACTTGATTT
ATTCAAGAC
AGGATTTGG
TAGTTTGTG
GGGGATTTA
AGTATTTAT
CATTTCCGA
TTGTCGGTA
ATCGAAAGG
TAAAGCTTG
TGTTTCTCT
TGATAACCT
CTGGTGGAA
GACTCTGGC
TTTCTCTTT
TATTTTTAT
ACAGGGCTT
GACACTTAT
GAACATCAC
AGCTTTTTG
AGAGGATTT
TATTTTTTA
GTGGAGTTT
TGTTAAATC
AAATTTTGT
ACACTGGAT
TATAGCAGG
CCTTTACTG
ATGTGTTGA
CGACCTTCT
TTACTGATT
TCTTCCTTA
AGACTCCGA
GTGACCATG
TTCAATGGC
CATTCCTTC
TATCGTTAT
TCATTCTGG
GACATCCAT
TCTTTTTGT
CATTCACTA
TGTTAGATT
CTGGCTTCC
GTTTAAATC
AAACGTTTT
TTTCTTTTT
GAACAGAAT
TAACGCTAT
TTATATATT
CAAAACAAA
GTCAATATC
TATGAGCAA
TCTTTCAAA
GGTATTCAT
CCGGTGAAG
TTTCTTGAA
ATTTGGCTT
AACTTTTCC
GAATGCGAA
CGCATTAGG
CATCCTTGT
TCGCCTTGA
TTTGCTGCT
CATAGAGTG
GTAGTAGGA
TTTGCCCAT
GTGGTGTAG
TTTGTAAAA
TTAAATGCT
AAGGGCTCT
AAAGTCTTC
CATATAATT
GTATAAACG
TCGTACAAA
TAAGGACCC
TGCGCCTAT
GACTTGCAT
TGCTACGGA
GCTAGCAGG
CCCAGGTAA
ATATTAACG
CGACGAACG
ACTGTCAAC
CTTGTTATA
GCAAAAGAA
GAAGCTTCG
CCGGCTGGT
AAAACGTGT
TTGTTATGG
GCGACAATT
TACCTGCAT
TATACCTAC
CGTGGAACA
TGGGTACGC
GCTCATTTT
GGTAGTCTG
GCAAAATAA
TCATTAACT
AGTTTCCTA
AACTTCGGT
TTAGGATGT
CTTGCCTTG
GTTTGTTTC
TAGTTGTGG
AGACTATAC
AACAAAAAC
ATAACTTAT
TATACCTGT
TGGTTTAAT
TTTGATAAT
AAACTAGAA
CCAGTCACT
GTCCATCTT
AGGAAGTAT
CAAAGTGGA
TTCTTCAAA
TATCTTTCA
TGCATGGGC
CACCAACGG
TTAGGGCAA
AATTCCTGA
CTGCAAATA
TATGAGCAC
ATGGTCAGC
AGAAGAAGC
CTTAACGTA
CCATAATTT
TGAGACCGT
GATATAGAA
ATTTTACGT
TCCATAAAC
AACTTTTTA
TTTAAGAGC
TGAATTGCC
AATTTAATT
GGAAACTGT
AATTTGCTC
TGTCGTCTT
ATTTCCAAA
ATGTGAGGC
CCCATTCTA
AGAAAATAG
CAGCTTGGG
GTTTTTGTG
TACACACTT
ACTAAATTT
ACTTTTTAC
AGAAAACTA
AGACGAATC
GGGCCTTTT
TTTTATTTT
TGCAACTTC
AAGCAATCA
GCTTCAAGA
TTGTTTTTG
TTAGCTCTT
GTATGGTGC
GTATTGGTA
GTATTGATC
AGAAGATCA
AGGATAAAG
CCAATCACC
TCCATTTTT
ATAACACTG
GAAACTGTG
AACCATGGG
ACAGTGGTT
GAATTATCT
CACTAGCTC
CACAACAGT
TCTCAAGAA
TCAATTTGT
CCATTAATT
GCCGCAAGA
TTATACAAT
GGCTTATGT
ATTAGGGCA
GAGAAAAAT
GACCAAGTC
ATTGGAAAA
AGATCAAAT
AAAAGACTT
GTTAGACTT
TAAGACTAG
ATCTCATTA
TATTGTTCA
ATTTGGACC
GGAGCTGAT
ATACTGCCA
TATTGATTA
CGTGCTTTT
ATGGTATAG
GTGTCGATA
AAACCAATC
CAGAGTATT
TGCCTGATT
CAAGTGGTA
CCTCGCGTA
ACCCCTACT
TACAAATGC
ACAATATAC
ATTCATCGT
AGCTTTTCA
GTCGTATTA
GAGGAAAAA
GGCCTCAAT
TTTCGCATC
TCCGCAAAT
GAATAACCG
ACACGATTT
TTTCAACAA
TAAAGTAGT
ATTCTTATA
ATTTGATTT
CAGATGAAC
TCTCCTCCT
CGATATCCC
ATCCGGATT
ATTAAACAG
TCCAATTGA
GTGGTATTT
TTGTTGAAA
AAATGATGT
TCAAATCGT
ATCATGGGC
TAAGAGATG
CTGCAGATT
TCCTCCTGG
CATCTTGTC
ACGGTGAAT
AAACGCTAT
GAAACTAAC
GTCACGAAT
CCCTACGAC
CGACTTAAC
CATGGATAA
ATCTTAGTA
GAGAAAAAA
TAATAGTAT
TTAAGAGTG
TACAATAAT
AGAAACCCT
AAACATAAA
ACTATGGCA
ACATCATCG
AATAGTTTT
CAGTTGGTC
ATGTGTGAG
CATTTCACC
GCAAGGTTC
TGATTGTAG
GAAAATTTT
TGTAATAAC
ATCATGAAT
GGAGGCAGC
CGAAACAAC
ATGAATGTA
CCAGTCACC
CAGCAGAAG
GTTTCAACT
AGAAGAAGG
CTGTTTGAC
TCAACAGCA
TTCACCTTC
AAGCATTAG
ATCGGACCC
ACCAGAAGC
TATTGGTGA
ATGGCATCG
AGCGTTCAC
TGGAAAGCT
TATTTTATG
TATTGAAGG
ATTCTGGAG
TTGAATGGA
TAGAGATGC
ACAAGGCTA
GATGAATCA
CGAATTTTC
ACCAGCACT
AAGAAAAAG
CTTGACGTG
CAAATATAA
GTCGAAGTA
CAAAGACTG
ATACGGTAA
CCAAAACTT
TTGCAACTA
AGTGTACAG
ATAACAACA
AAAAAAGAT
ACGTGCAAC
AAGCTTTGT
CTTTTCTTC
TGGATTTTT
TTGATGGAA
CCAACTAAT
CAATAATTT
CTAAGGAAG
TTTGGAGAA
AGGTTTAGA
AACGATTAT
AGGAATTTT
CTTAAAATT
ACGAAACGC
CTTGCACTG
GCTAGATAA
AAGGTGACG
GAAGATGGC
GGAAAATGT
GGCACAATC
CAGAGCTGG
GAAGTCGAA
CAAAAATAC
ATGTATTAT
CTACCATAG
CGCCCATAA
TTCGCTAAT
TGCTTTCGA
TCAATGATT
CAAGACGAA
TGGACATTT
CGGCAAGGT
GATTTAATG
CTTCCCATA
TGGTTTGGT
AACTTCAAC
GAAAAATAA
AAATTATTC
TATTCTAGT
ATTGGGTTA
CAATAAATC
TTTCATTAA
AACGATGTA
CTTACTAAC
AAACAAATT
TTTTTTTTT
AATCAACCA
ATGCTACGA
TTGGAGACT
AAAAACCAG
GAAGTTCCT
ACGAAAATA
GATACTTGT
AACTTAGCG
TCGCCAATT
ACCCAAAAT
ACATTGAAC
AACTTTCTT
ATTACTCAC
TGAAAGTTC
TTTATAGGC
TACCCGTCC
TAACCTACT
AGAGCATCA
TATAAGAGC
ATGGCTTAC
GCGCCATCC
CAGACTTAC
GAAGTATAT
CATCATGAA
TTTCGATGA
GATTTACTT
AGACTTACA
GGATTATAT
TTACAACCA
TATCAGCAA
ATGCTCAAA
ACTAACAGC
TAACGTTAA
AAAACTTAC
AAAAGGTCA
TAGTGAGCA
TAGAATAGT
TGTCACAAT
AAAGAAGGC
CTTTTTTCA
CATCTCGTT
TTTGAACAC
ACAACCGAG
TATGAATGA
CAGGTTTTA
GGCGTCGAA
CGAATCAAC
AATTGTTGC
ATCGTGTCA
CTTAGCTTT
TTAAACTAA
TGTGCACTT
CGAATAGAT
ACCATTTGT
GCAGATCCC
GGTAATCTT
AACATGCCA
CTGTGATTG
ATGAAGGGA
CGAAAGCCT
GTTCCAACC
GGATGCTTC
GACCATTTT
TCATCATAA
TGTAAATTT
CAATGACTT
TTTATCAAG
TGTAATTCT
TCAAAGCTT
CATAGCTGA
AATCTAATA
CTAAAAGTA
GCCCTTTTC
CATGTCGAT
TAGTTTTAG
CAACCTAAT
AACATAGGA
TTTTCAGTG
TGTATTTGC
TTTGGTAGA
AGTTCTCTT
TTAAGTAGC
CAGGAAAAA
ATTGATGTA
TACCAAATT
ATATTCAAT
AAATACCCT
GGGTAAACA
CTTTCTCTT
GCTAATTTC
CTGAAAATA
CCCTCTCTT
CGCATATCC
GGCTGTCCG
CTGACCATA
GCCATTTAC
TTCTATTCT
AGAGACACG
TGTGTTGGA
AATTAAAGC
TTGTTTTGC
GAGATACAT
TGATATACA
TTTACTGCT
TTCGAGTTT
CTCAAGGAC
CTTCGGGAC
TAATGAGCA
TTGAAGTAT
ACAAAATTA
CACTGATGG
GTGAAGAAG
GGAACTGAT
CAGTTCTTT
TCCATTTGT
TTGCCTAAC
GGACAAGTA
TAATTTTCA
TTATAATAG
AGCACTAGT
ACAAAAATT
CTATCATCA
AATATCATT
TTTCTTCCT
GCCAGCTCC
ATCACCATA
CTTTTTCTG
CGAAGGGTA
GGCAACTAA
CGTTCAACT
ACATCTTTC
TTCTGGTGC
CCGTTGTGT
AACTTGACC
AGTGAAGCT
AAGGATGAG
GTAATTAGT
ACGGTCTTC
GATCAATAT
ATGGCACAT
AGTAGATGA
CTGGGATAC
ACAGTTAAT
CTTCAACAA
AGGAAACGT
GTGTTCGCA
GTTATAAGC
ACTGATCAG
AAGTGCTTG
AGCCATAAT
TGATTCTTG
TACGAAACG
TCCTGCAAT
ACCATACAG
TCTTGAACG
AGCTGAAAA
TACCATTTT
TCAAATTCA
CACAGTGTT
AGTACCTAT
GAAACTTCA
TACTGAGTT
TATATCCTT
TTTTAAGGG
CTCTAAACG
CCAATTTGT
GATGTGATT
GATTTACAT
TTCTATTTT
TTTCCTGAA
TTTAGTAGA
CTTCCATTC
AATGAAAGT
GCCACATTG
CATAGCTTG
AGTTGGTTT
AGATAGTCT
ATATTCATT
TAGTGTCAT
TCTGCAGTA
ATCAATTTC
AAGAAAAAA
TGATGCCTA
CTTATGTCT
AATCTGTAA
CTATCAATC
ACCGTCTTG
CCTTTATAC
TAGCCAAAT
AATTATTTC
GCTGTTGTA
GGCCATGGT
TTCTGAAAG
TTTCATTTA
TTCTTCTCA
ACACATACC
TTAATCCGT
CTTAGTGGA
GGATCCGAT
AATAGTTAA
GTTCGATCA
ACAAACAGT
ACTTTTCAA
TGTGTACCG
ATATCGATA
TATTTGCCA
TAGACGCAT
TCTAAAAGT
GGCTTATTT
GAGTTTGCC
GACGTTTTT
TTTATACCC
TTTGCTTCA
ATCCATATT
AAATGAGTG
TTGAACAGA
GGCTCCTCA
ACTGGAAGA
GATACTTTA
CGTTATGGT
ATCAATCAA
AAAATAAAT
GATATGTAT
TCATTATCT
TGATAAAGA
AGTGTTTTC
TCATCATTG
ACCTTGTTT
TTCTACCAT
TCTTTAGAT
GTTATTGGT
TAAATTCTT
GTAGAAGTT
GGTTTTTGA
AAGTCACCG
TTTACTTGT
TTCTATGAA
TCCCTTTTG
GATGGTAGG
CTTTTGCTT
CTTTCTTCT
GCATTGTTA
GGAATTTAA
TTTGTGTGT
AAAGCTTCT
ATCATCCTC
TTTTGAGTT
ACAGATTCG
GTATTCTTG
CTAATTTAA
ATATTGTCA
AGTGCCAGT
TAGAATCAG
GGATCCGTA
GAAAATATC
TCTGAAGGG
TGGGTAGTA
ACTGGATTC
TCATATTAG
GCAGCAGTT
ACTCAGATT
CGTTTCTTT
TCAGGATGG
AGGAATAAA
TACCAATAG
CCTAAAAGA
GCTTGCAGC
AATCCAGGA
GAATCTAGT
TTGCGAGTC
TAGGGGAGG
TGAACTCGA
GAAAAGTTC
TGAAAAATT
TTGCGGACT
ATAAGTATT
GTATAAAGA
TGCTGTGGA
GGGTAGACG
ACGGTGTAT
CGATTTCCA
TGTCGATAC
CAATGTTGA
CTGCACCGC
GATGAAAGA
ATCTTGTGG
TCTATTTAA
CTTTAATAA
AGTGAAAAA
TATTGGAAA
GCTAACATG
AGCTACTTG
AAGGACTTA
ACACTAGTC
AGATGGACA
TTCATTTAT
GTGATATCT
AATGGACGA
AAACAATAT
AATGATTCA
CTTTGATGC
ATTGGAAAA
GAGAATGCA
ATGGGATTG
TTGAAAAGG
GAAGATGGA
ATATTGTTG
CTTTATATC
ATAATGTGT
TTAAAGAAT
CAAGAGTAT
GATTTTCAG
TCACTGCTG
GGGAAGTTC
GCGCCTTAA
TGATAGCTA
GAAATTTTT
CTCTAAGCG
TTCAGGATA
ACTGCGTAT
TTTACTCTT
GCACAATTA
TGCAGAGCT
GTTTGAATC
AATTGGACA
AAAGACAAA
ACCTGTTAT
GAGGTTATA
TATGAAACC
TGAATGTGT
TACCAACAA
GTTATATCT
GAAGCAAGC
ACATTGCAA
TTCAAAGTT
AAAGTAAAA
TTTTAGGTA
CATTGATCC
TGACATCAT
CTTGGTAGC
CTAAATCGG
TATGGTTGA
GGTAGGAAC
AATACTCCA
TCAAATTCC
CGTGAACAT
GAGAGCCAT
GTTAAGAAT
CTGGCTCAT
TAGCAGCTG
GCCAGCATC
TGGATGTCT
GATAAGCTG
CTGGTATTT
AGCAAGAGA
GAATAACTA
TCTTTCAGG
TGTCGCCTT
TTTGATCGA
GTGCAAACT
AGGAAATTT
TACCTGTGA
GTTGGGACA
GTCTTTTAA
CTGTACCAT
ACTTCTGAC
TATCAATGT
GAGGAAATA
CCTTTTAAA
GAACCGGAA
AATCATTAA
GCAAAGTGA
TTATGTATA
CGATGTCTA
TCGTATAGA
GTTTTCCAA
ACGACCTTA
TTTGAGGTT
TCTTTTGTA
GAATTAAAT
GATAACTTC
AATGTTCCC
GAATTTTTG
GGATAATTT
AGTTTGTCC
TTAAGTAAG
GACAAAGAT
CATTAGTTC
CATTTTTTC
TTGGCAAAT
GAACGCTTC
ATTTCGGAT
TTAGTATTG
GGAAGTTGT
TCAATGTTT
TTCATATTA
ATAAGTCTT
AATTGCGTA
CTAGAATAT
ATTTTCATT
GGACAAAAT
TGCTTTAGG
TTTTTTCAC
TAAACTCCT
ATAACTAAG
CGAGTCCAT
CATTCCTTA
ATCTTCAGT
TTTCAAAGT
CAATGGCTT
TCCTCTATG
GGTACATGG
TGCAAAGAG
GATGAAACG
TGATACGAT
TGAAACCGT
AGTTGTAGA
CGGGCGAAT
TTAATATAG
CTAAGTTGT
GGGCAACAA
TACGGTCAT
TTGCGTGAG
CTGATCTGT
TTCCTTCAG
ATCAGATAA
CTACTGTAA
TAATATTAG
ACTGCGCAC
TATTATACT
AGGGATCAC
TTCCCAATT
AGCCAAAGC
TTTTCATTG
CACAAACTC
TGATAAGGC
CAAAAAAGA
ACCGTTTCA
GAACAACCC
ATTAATGAA
TGATGTCTT
AAGCAAAAA
TCAAGAGAC
TTCCAAGGA
TTTTGGGCC
CAAAGGGAA
ATTTATGGC
ATTTTGGTG
ATTGTTAAT
TGTTTTAAG
GAGCTGGCA
ATAGCGTAT
TGTTGCTGG
GTTTCACTT
CTTCCAGAA
TGACAAAAA
ATAAAATAT
GTCAATAAT
AGGTTTGAC
CGTCCGTCA
ACGTTTTCG
TGGTGCTGC
CTGGTGGGC
CCTAAAAAG
AATTTTACT
TTCATTATC
GGTATGACC
CCCCAAAAG
TGGGCGCTG
GGAATTGGA
GATTGGTAT
AATTTTAAG
TTATTATAT
GACTTCAAG
TGGACCTTC
GCCAAAAGT
CAAGACATA
GCCTTTTCA
TTCGGCAGC
TTTGGTGTC
TTTGGAGCC
GACGAAATC
TGTTGTTAG
AGACCTTCC
AGCCAAATC
CACCATCAC
TTGATTCTA
GTCGTTACC
CGGCTTCAC
ATACGGTGT
GTAAGAAAT
CCGAAGCCA
GTTACAGGT
TTCCTTTTT
CGGTACGTG
GAGAATTTT
GTCAGAAAC
TGGGTGATA
ATAGTTTCA
TTAAGATCA
GACCGTGCC
ATAGGATTT
ATGGGCCGG
AACAGCAAA
AAAGAGGTT
TTTTTAATA
TCAATGCAA
TACATAATT
ATTGAGTGC
GCTAGAAAT
TCTATAGCC
CTTAATTTT
TTCATTAAT
GCTACCGAG
TTTAGGCGG
CATAAGTGC
TTCTTGAAT
GGCGAGCAT
TTCCTGAAT
GGAATATTT
GTTCAGTTG
CCAAAGTAT
AAGCTCTCG
ATTTGCCGG
CCACTAAAC
GGGTAAAAA
AGTATCCGG
TTGCAACAT
CTCCCACCA
TCTTGCACA
AATGCACCA
AACGGAGCG
CGAAACTGT
TTCTTCGCC
TAGTCACCA
GTTTTGATG
AGAATGTAT
AGTACTGAC
GAAAGTAAC
TTCTTCTAC
ATCTAGAGC
AATAGTCTG
ATAAAGAAA
TAATTTGGC
TCACGAACA
CTCCAATTA
TTGTTACTA
GTACCTCAA
AATGATAGA
GTGTAAAAG
TAAGAGCAA
ATTTTCTCC
GCCATTATC
TCATGGCAT
TTTTTAGTA
ACCATCGTT
CAGGAAAGA
CGCCCCTTC
TTAACGCGA
AACTTTTTG
AAATATCTG
TATTTTTAT
TCCTATATA
ATACTTACA
AAATAGAAG
TCCCCGGCG
AACTATGTC
CAGCGTATT
ATAAATTAG
GGAGTAGGA
ATTGGATGA
TAGTATGCG
GTTCCTCTA
TACAACAGC
AAATTTTGT
TTGACGTAC
TTCAATGGC
TACTTGATA
TTGGCTTTA
ATTAACTGG
GGGTCATTA
AAAGTCTTC
TTCACTTGA
AAAAGGAGA
ATATTTATT
CGAAGAAAA
AGTTTAAAT
CTCAAAGCC
AAAACAAAA
TAATTCGGG
GAAAAATCA
AAGACCAAT
CTAATAATT
ATTTGTCCT
TGCCAAAAC
TCCCATGTC
TCTCAACTC
TAAAAAAAA
ATTTCCCAA
TCCCAAATC
CAGACGCAA
AAGAAATTC
GATATTTCA
TTCCGGATA
TTCCTTACT
AGAAATGAC
CAGCAATTT
TTTCTTCTA
TCCTTTATT
ATACGCTAT
GTGATATAT
CCTAAGGGT
ATTTCTTTT
TTCCTCACA
AATAGAAAG
TTCTAATAA
GCGCAGAAG
AGTGATATG
TACCGGCTT
GGAAAACCA
TGGGTTAGA
AACTTTTTT
ATGAAAAAC
TAAGAAACT
CGCATTTAT
CGTTAACTT
TTCGGTAAT
CATATCATT
CACGGTCTA
CTTTGCTTC
TCCGGGAAT
ACTTTATCA
CTAGCCTCG
CGACAAATT
TGGCTTTGT
CGAAACAAT
GATCAATGC
TCTTGTAAG
GGATTAAAA
TTCTTTATT
ATGATATCA
ACACTCATC
AATTTGCCT
TTTTGTAAT
AATTGGATT
CCAATCACC
TTTTGTGAA
TTCAGTCAA
AGCACCAGT
ATAGTACTG
TCAAAAATA
AAGGTGGGC
ACATTTTCA
TATGAGCTA
TCAAATGTA
TCTGACTCG
GTTAAAAGC
TAAAGACTT
AGTATTGAA
AAGCCTAGC
TTAACACAG
AAAAAAATT
GAACTTTCA
ATTCAGAGG
GAGTTCATT
AAATGGCAG
ACGAGGATG
GTGGGAAAT
TATATCATA
ATTTTGGTA
CTCAAGATA
TACAACGCT
GAACAGGTA
AGGCGGGAA
GATAATAAT
AATCGTCAA
AAGGTCAAT
TGAAGCAAT
CAGATGGAA
AAAAAATAC
ATTAGATGA
ATCCAACAG
ATGATAACT
GTTCTTCAA
CGGTATGTT
CCTTCTTCA
ATGCGATCA
GCCCTTGAT
ATGAGTTTG
CGGAAGTGA
CATACTCAT
GCTCGCTTT
ATCGTGAAC
ACAATCTTG
CAAGATACA
AAGGCATCT
AGCTACTGA
AGTCTTTTT
AAAACCTTC
GGTGTTCTC
GTGTGGTGG
TTTTTTGCA
AGGTTTGGA
TGGAGGAAG
GAAAAAGGA
TGGTAAAAA
CCCCAGTTT
GACCGTTCA
GTATGTTAT
CAGTGGTGG
ACTCTTGCT
TCAAGCATT
GGATTCTCT
ATTTATAGA
TTTTTTTTT
GTCTTGCGC
TGTCACGGT
TTTTCATTC
TTTGAGATC
TTTTTTGGG
TGAATAGTT
TTGAATCAC
AATCATTGG
CGTAACTGA
GGGCATACT
AGATGTAAT
TTCCTAGCC
TTTCAGAAA
CATCTGTAC
TAAAGTTGG
CAATCCCAT
TTGTTCATT
GCAACAATG
TCACTCTGA
GAGAATATG
AGCCTGAAT
CGACACTTC
GGAACATCT
TACCTAATT
ACTTGGGCC
ATCCAATTT
CTTACTCTA
TTGAAGTTG
AATTTCTTT
CTAGAGACG
AGAAGATTG
TTATGTTTT
CTCAAGTCT
TTAATCACT
ATCTTTCAT
CTTCTCCAT
GCTAGAAAG
AGAATAAAT
TTCAAATCA
GAAAATGGG
CATTGGATG
TTTTGATCG
TACACCTTG
ATTTAAAGG
TCTTGACCT
AGTCTGACA
TACTGGAGG
ACATGCTCA
TTGGCCCAC
GCCACAATA
TTTTATCAC
TGTGCAATT
CAAAAATAA
ATCTACAGC
GAAATAAAA
ATTAGAGCA
AAATTACGT
AGTCGTTGC
CCCTTTTTC
CAAAACAAT
ATTTCCTTA
CCAACGTGA
AGGTCTACA
CAAAAGGGT
CAACGTTAC
ACAGATATC
TCCAAGTGT
GCGTGCTGA
CAGCTCAAC
CAAACTTTG
CTGGTTTTG
TATTTTTAA
AATTTGTAC
GACTACTCA
CATCTCTTT
TTACGCCAA
AACTTCACA
ATAGAAACT
ATTTTGTCT
CTTACATAG
ATGCCTAAA
TCCATATTT
AAATTCCAC
AAACCATGG
AGTTGTTAC
TATTTTTGA
ACTCGTCCA
GGAAACACT
GCTTGTTTA
AGTATTAAT
GTTCAATAA
CCGCAGGTT
ACAAGAGTA
GAACTCTTG
GCTTGTACA
CTTCAATGG
TATTGAGAA
AAGTCAAGG
GTGGCTAGT
ACAAACGCC
GTTTCAAAG
TTGACCCCG
TACATGGGA
ACTCTAAAT
AAAAGTGCA
AACCTACTA
TTTATCGTA
CCTTTTATA
TTTTAAAAT
AAGTAGATC
ACATCATCC
TGAAGCGTG
CATATTCGT
TGTTGCAGC
TCCAGATGT
TCTTCTTCC
AATTTAGGC
TTGTAGAGT
GTGATTGGA
CTGATTCTC
ATCTAAAGC
GGAGGGAGC
ATATTCCAC
TCTTATATC
AGGCAATTT
TTTAGACAC
TATCAAGGA
CATTCCATC
GGACCCAAG
CAAATAAGA
GAGAGAAAT
AGAAGCTGA
TCGGTATAA
GCACCATCA
GCGAACTGA
CAAAGTGAA
CAATATTGA
CTTGAGCAT
ATGGTTGAA
GGAACGTTT
TGTGAACTG
GCGTCCCAC
TATAGTTTC
GGCCAGCCG
GAAACGGAA
TCTAATATC
TTAAAGAGT
TTTTCACGG
GGAGACCGC
GCATCCAAG
AAGGGTAAA
AACTTGAAC
GCAAGTTCC
TCCATTGCC
CTCAAAGGG
TTGTTCTAT
ATATCTGGA
GAAGAAAAT
AGTTCTCCG
GACCATTTT
ATCTTCAGG
CATCCGAAG
CACTTTGTT
CTTCCAGTG
CATGAGTTA
TATTGTTTG
AGAACCTTT
TTCGCGACA
GTAGTTACT
TTACGTACA
TATAATAAT
ATGTTCTTT
AATTGATTG
GGAGTTGTC
CAACACCCC
AAAGTAACA
AATCTTTTG
TGTGTGGGA
TCCTTACCA
CATCTTTTG
AGATGAAAT
AAAGAGTGT
AGAGTAGTC
CCATTGACA
AATGGAGCA
AGACAACAA
TGAAGTGGT
TCATAGCCA
GTAACGACC
TACCGAACT
TTAGCAATG
GGCAGTGTT
CAATCAAAA
ATGTGAGTA
GTAGTGCTT
CAATACCGA
CATTCACCA
AGAGTCGAC
TAGCTCTGT
TTGATGTGT
CTCCTTGGC
TCTTTGAGT
TTGTTCAAT
AGACAAAGT
CTGGCAATT
TTTAGGCTG
TGTATTAAA
TGATTATGA
AAAATGGGA
GTAACAAAA
GATATATAT
CAAACCCAA
TTCCTATAA
CATCCCGGT
GGCCTTGTA
AAAAACGAA
CAATGAGAG
TGCTTCCGC
CAAGTGCTG
ATTTTTTCT
GCGATGCAA
TCAACATTG
AATGTTTAG
GTGTATTAT
GGAAGTGGT
AGTTGATAT
AACCGCACT
TACAATCCT
GTTTCAAAA
AGACGGAAC
TTTAGACGG
ATCAGCATC
TTCTCACCG
TTGATCTTT
TCAGCTTGG
AGTTGAGCG
TGGGAACCC
CCAGTGTAT
AGGTTTGAG
AGTATTACC
TGGTTAGGT
GTGGAATCT
TTGAACCAG
TGGAATCCG
CCCATTATT
TCTGGAAGG
CGCCTTTCT
GAAGACGCT
ATCTAATAG
ATGCTGTTA
AGGGCTAAA
GGTGTAGAA
GACCATATT
TATCCAATG
TTTCAAATC
CGTTTCCCT
CCACGCATT
AATACCATC
CAATAGAAA
CCTGTAGAA
CACATAGCA
GTCCTGCAA
GCGGTTTGG
ACTAACATC
TGTGAGTAT
AGTAAATAC
GTGCCCCAC
TTAACGCGA
TTGATATAA
GAAATCTAA
ACACGCTTG
GATTCCTTG
TGGTAAAGG
TTTCACCAT
ATTTTATCT
TTTTTCGTT
CTCCACTGT
TCATCCTTA
TTTTGGGAA
GTTTACCAT
AATTTTTCC
ATTTATTAC
AAAAATATA
TTGTGAGAT
AGAATTGAC
AATCGGGAG
GCCACCAAA
TAGTTCCGG
TTGAATATG
CCGCTAGAT
TGGATTGCT
ATTGTTCAG
TGAGGTGTT
GTGGTATCC
ACGCCGAAA
CTCTGTTGC
TCGTTGATT
TCGTACTTT
CCCGGAGTT
GCTTTATTG
CTTTTTTGC
AGCTACTTT
TATAAGACG
ATGCAGATA
TTACAGCAG
AACTGATAT
TGATCATTC
GCGAATGAG
TGCTTCTCT
CTGATGAAC
AGGCTACAC
CCTTGCTGA
CTGAGCCAA
AAGGCAAAA
TATAATTTC
GATATCCCT
GATGGAATA
TATTGGTCC
ACGACCAAG
GTGGAATCC
TCATCCTCT
TGAATTTCT
AATGACAAG
CATCGAAAC
ACTATTTGA
AATCCAAAA
GACCAATTT
AAAAATATA
TGGGGTGAT
GTCAAGCAT
CGAACTGTC
GTACCAGGC
GGCAACCTG
GAAGACATT
CATCTGGGG
TATGGAATT
GAACATTCA
AAGGTATTA
TATGGAATT
AAACCGAAA
ATTCTTCCC
AAATGGCGA
AATACAGCC
ATATACTAA
TTGTCAAGA
GATAGTAAT
TTCTCATGA
GGTACCTTT
CCAAAAAAC
AAAAGCCAA
TGGAAGGTG
GCTTCAAAT
TGAAGTGTT
CAAGTCGGA
ATTGTTTTA
TGTGGGAGA
TTGCTAAGC
TTTGTTAGC
AATAGAAGA
GCAACATTG
CAGCAGCAG
GGTTGACGG
AAGATGAGA
ACGAGGCAA
ACTTTTGGA
GACAATGGT
GTTACCAAT
GGCAGACCT
ATTCCTTAT
GACGAAAAT
CTTTGCAAC
ACACTTTAA
TCTTTATCG
AACTACTAA
TGAAGGGTG
ATTGATACA
GGAGGAAAT
TGAAAATTT
TTTTCTTCT
TTATGATGA
AAGGTATCC
GGACATATA
ATATTTTTT
TAAATTCAC
AAAAAACGT
TATAGGTAT
AGAAAAATT
TGTGTCAAA
TTTCATTGT
CCCAAAGAT
ATAATCACT
ATACCTGTA
ACTTAATAT
CTCTTGATT
CTGTCCTTT
TGAGTCCCT
ATAGACACC
TTTTTATTG
AAGAAAAGC
AGGCGACAT
TATCAGGTC
AGTTATGAT
GATATTCGA
TCAGCGCTA
AAATTCTGT
CAGCATTGA
TCGTGTACT
TTCGGTGCC
AGTAATGTA
TCATGCCAG
TATGGCATC
AACACCCTA
GTGAACGCT
TAGGCCAAG
ACAGTACAG
CTGTCTCAA
GTAATTTTC
GGTGTATGA
TAGAAGCCA
ATGTAAGCA
CTTGTATGA
GTCCTCGAT
TTTCGCCTT
GAGGAAAGA
TACCCTGCT
GTAATTAAC
TTGCAGTGG
GGAAGTGCG
AAAGTTGCC
CAGGTGTTC
TCGTACAAA
ACGACAAGG
CTGAGAGCA
AGAGGGTAA
AAACTATTA
TATAATAAG
CTACCCTTG
TCGCGTTTT
AAGGAAATT
CTTCTTTTT
ACTACAGTA
AAGGCAATA
CAATACAGA
CCTGTCGAC
TTTCAAGCA
ATGAAAATT
CCCAAGTAC
CGTGATTAT
TCCAGGGCA
AATCACTTC
ACCAACAAA
ACCAAAGGA
ATCCGAAGC
GAATGATGC
CTAATTTAA
TGTGCTCGT
TAGGCAGAT
TTATCACCA
ACCTGCGAT
TTTTACTCC
CAAAGGGTC
CAGGAATGT
TCCTAGGTC
CGCCTGGTG
ACCGGTTTC
GGCACAGTT
CTTCTGATG
TATAATAGG
CGTAAAGAA
TAGGTGACG
GATCCCGGT
ACCTCGAGG
CCGCTGCCG
GGTGCCTTA
TAAGATGGA
AAACAATTT
ACCTCAATC
ATTATCACC
TTGATATTC
AAATTAGCC
TTTGGACTT
ATGCTAAGA
GTGCAAGCT
CAAATTTTC
GATTATCTC
GATGATGTG
GTATCAAGA
TCTTTACGA
TCATATGAA
ACAATTAAG
TAATTAATG
ACAGACCAG
GACCGCTTC
ACGCTTGAA
TTTTTCCCC
TCTGTAACT
TTATAATTT
ACATTTCGG
ATTCTTGTT
ATAGGGCCA
GGGTACCGT
TCCAGAAAA
AATCCGAAT
ACTTTTAGG
GAAGGCAAC
TATATATAT
TAATATAAC
TCCGTTTAC
GGACGATAG
ACACTCGAA
AAGGTCGAG
TTGTTTCTA
TATCATAGT
AGTTGGTAA
ATGGCTCAA
AAATCTCCA
TTCCATAGG
CTATCATAA
TCCTTAATC
TGGTGCTTC
CTGGTAAAC
CATGCTTGG
TGCCAAAAT
TAAGATGTC
CTTTATAGG
CACCTCACT
ACCTATCAC
CAAGGCCTA
CAGATCTAC
CCATTTCTA
TCAAATGGC
GAGATACAG
AACTGAAAA
GGAAATTCC
CGTTGCTTC
ATGTCTCAT
TCTGGTAGT
TTCTGCGAA
ACATTACGT
AAGGCAAGG
TGACGATGA
ATCGTTCTT
CATCCGTAT
GCCCCTAGG
AACTAAACC
CAAAGATCC
GGAGTCTAG
TGACCGATT
CACTCACGT
TCAGGCGAA
CAAGAGAGG
TTAAAGAAG
TGAAGAAAA
TTGTGTGGT
CGCCAGCAT
CTTATTCAG
GTAATGCCA
TCAAATTTA
AAAGCTATA
TATCAAACT
ACTTCTGAT
ATTAAAAAC
ATTATGTTT
GACAAAATG
CAATTTGAT
ATGTTGGCG
TCTTTTAAC
GTTTATTTT
TATTTATAT
CTTTGATTT
TTGAAAATA
GTAGCAGTG
TTCTACAAT
CAATTCTGG
TCACTTTAC
TTTTCAATA
CTGTTTCAT
CAGTTTCCC
ATGTTGTTT
ACCTTGTTG
CCTGATCGA
ACACCATAG
GATATGTGC
TATCAGCCA
GAATGCCCT
ATTATTCGG
CGAAAATAA
CTATGACCA
GTCCACAAG
CAGGCACGA
TTGTGACAC
AAACTCCTC
CTGGTTTGC
ACAATCTCT
TGTTGCTTC
GGTTTAAGG
CATCTTGGT
GAATGGCGC
TTAAAATTT
TCAATATCC
CCCAAATCG
ATTCATTGG
CAAGGTCCC
GCCAGTAAG
CCATCCCGT
CCAGGAATT
GACAGGTTC
ACCATTTAG
AGGCAAAAT
ATCGATACT
TATTCCATA
CAGGGTTCA
AGAGTGGAT
CAAGTTTTT
GTGAATATG
ATCAAGAAA
TTCGAATGA
TCGAAATCG
TTTGATTAC
TGCGCCAGT
TCCATTTCT
CCTATCGAA
CAAGGACGT
CAGCAGGAA
TAGCGCCTG
TATATACAC
TCTTGGGTT
CAAAATTGT
GAATCAAGC
TCTAAGAAT
TTTGAGGAT
CTTAGAAAT
GTCTGTCTG
GGTCTTCCA
CTTACAAGC
CTGCTAATA
TACGAGTAC
TACGGCTGA
CGGGCGGCG
GTTAGTATC
TTATTATGA
TGGGGTTGT
AAATTAGCT
AACCCAAAA
CATTTATAA
GGTATCGGT
TGCTACTGC
GTTCTCTTT
TTGATCGCG
AGACTACGT
GACCCGGTT
AATGGTGAA
GACGAATAG
TGGTATTAA
TATATCCCA
ATTAAGCAT
TCAACTCTA
TCTGTGCCC
CAAACACAC
ACTATGTAC
ATAAAGACT
TTCATGCCA
TCACCATTG
TATAATCAT
CTTCAATAA
TACTCAGAA
AGGTTTGAC
ATTTGGCAA
GTGATGGAA
AAAAACACT
CAGTCATTT
TCAAATGGG
TTTGTCCCA
TGTTAGCAG
CTTTCTGTA
ACGAGGATC
AACCTAAAA
CTTGAAATT
TGGAGCAGA
TCTTCGAGT
TTCCAATTT
AAGCAATTC
ATCTAACAC
ACAAGGGAG
ATTATCACC
CAACCTTTG
GTTTCGAAT
ACCATCCAA
AGCTTTCGT
TGTCCAACC
ACCACCTAA
TGAAATTAA
TGCATACCA
AATCAAACG
CACTGAAAA
TGGGGACCA
AGGAATTAA
TTTCTTCAT
CCATTGTAT
GTATTTAGG
CGCTTGTCA
GGTTTGTGT
ACCAGTAAT
TCAACGTTA
TTCGCCAAT
AATTCTCCA
CACCGGGCA
AAAATGTTT
AGACTTCAG
CTAACGCTT
ACGATAATT
TTTCTTAAC
CAAGTAAAC
AAACGTGCC
ATCAGGTGC
ACCCTGTAA
ACTTCTAAA
CGTACCAGC
TTCTTAACG
TCGATAACT
AGCAATGGC
TGGCATTTT
GTTTCACCT
AGAATCGAC
CCATAACTG
GATGTGATA
AATCTGTCT
AAGGACCAA
GCATTTTCC
TTGCTTAGC
CGGTTGTGC
GAATATTTA
TTTTAATGT
ACACGGTAT
TCAAAATAT
GGCTTTGTA
ATTCTAACT
AAAGCACCG
AGAGCCATT
CATTTTTGG
CATAAATAT
CTTAAGATG
AGTCTGGTC
AAAGTACCG
GTTAGCCAA
TAATACCAT
GCTGCCAAA
ATTGACTAG
GACATGTGG
TTTTGCAAG
ACTGTATTT
ATTCCTTTG
TCGGCCACC
CTCAAAATC
CAGCATTGG
TTTTTAGGA
GGAAACATA
TGATGCGGA
ACGCAGTCT
GCCCTTTGT
TACCAGAAC
GCGACCACC
GCTAAAAGC
CTGTGGCAA
TTTCTTAGT
GGATGGACA
TAACAGCAA
CTCTTTAAA
TATCCACGC
CAAGAAGCC
CAGTCTTGG
AACTGTCAT
TATTTCTAT
ATCAGCTGC
ATATGATCC
GTGAGCGAG
AAACATTCA
GCAGGAAAA
CTGCGAACA
ATTATAGAG
CTCGGTAGG
ATTGTTCGT
GCGTAAATG
GCTAACAAC
AAAGGGTAT
ACTAATGTG
TTGAGGAGA
AAAGAAGCT
GCTGCGCTA
AATATAGAT
AGAGAACGG
CTTTATTTT
TTGTTGGAC
GCTGAATTT
CATTTTTAT
GTAAGGAAT
TGAATGACA
GGTTAAAAA
AATAAGAGA
CAATATAAT
ATTCCTCAT
CACAGCTTC
GGCGCAATC
AGCATTGAA
TCCAACATA
AAGATTCTC
CCTTTAGCA
ATTTTTAAG
ATTAATATA
GAAATAGCG
GAGAACTTA
CAAAGTAAA
AAAACAACA
AGATGAATC
TCAATCTCT
TTATTGTTA
TCCTCCAAG
TCTTCTATT
TTCTAGTAA
AACCGACTC
CCCAATATT
TTGCAGGCT
CCCAGGTGG
TCTTCTTTG
ATCAGGTAT
TCACCTGAT
TGGTTGTTT
TAGCCTGCT
TTTCTTCTG
AGAAAGCCC
AAACATAAG
CACCGTGGA
CTATACCAT
ATACAAACT
CTCTAATTC
TATTGTCGT
ACATTAATA
AGATAAAAC
GTCAGGAAC
TGAATTCCA
GCAGACTAT
TGTACCAGA
ACGGGTACT
GCAAGTAAA
CAGAAAATT
ACCTTCTCA
GAAAATGAT
AGAGATTTG
ATAACACAA
ATATACATA
AATTCCCTA
TATTTATCT
TGTGCAATA
ATCTTGGCT
AAGTCAAAT
GCTTGTTCA
AATTTCATT
CAAGTACCT
TCTAATATG
GAGTCGCAG
TTTTATTGA
TTTATGAAT
CGATGATAG
GGTCTTCAT
TTTTCAGAG
ATGTTCATG
CGAAAGAAT
TGAATAGGT
AATAACATC
GCCTAAAAG
TGAACACGC
AAATGAGAG
ATAGCTAAT
TTGGATACA
CAGCTTCAA
CCCAAACTT
CTTCATACA
GGTTATCAT
CAAAGAAGC
CTCTGACTC
TTCCAAATA
TGTAATTCC
CAATATTAA
TGTTTTTAC
TCGCCATCG
CTAACGCCT
TCATCCACA
AGATTTGGA
AACTGGATA
TTGATTCCT
GAATGCTGA
ATTCCCAAA
ACTCAATTA
GGACGCTAA
ATTCCCCAA
AGATTGAAT
CCCAGAATT
CTGATTTGT
CGCGTGATG
CAGATTCGG
GGAAATGGT
AATAATATG
GCAGCAACA
TGATTAAGA
CTCAATGCC
TTCAAACAT
ACCCCACTA
GAATTTCAA
CAGGATTCC
TTGATGCTG
AGTCCAATA
AAATTCGAC
GAGCGCCAT
CAATATGCG
GCAGCAGCA
ACAACAACT
GGCAGCCAT
GCAAGAAGA
CGCTCCATC
CAATTTGGG
CAATAAAAC
TGAATTCTA
ATGGGAAAC
CTTAAATAT
AGCATCCTA
TGATTACAA
CTGCGTCTC
ACCTAGTCA
TACTACCTA
TTCCGTTTC
ATAATTTCA
TCGCTACAA
ACACACACA
CAGACATTT
TATAATAGG
AAGACAAGA
TTATATAAG
CCTACACAA
ATCAGCCCG
GACCCCACG
CGAATACCT
CCTGTATAC
GAAAGATTC
CTGTGACTT
TTCTGATCT
GATGAGATC
CGCTGTCGT
CAGACGACA
GACCTCTTC
GGATCTTTT
CTCCCAGAG
CCTCCTCTT
GGGATTTTG
TGCCTGTTC
ACAACCCAA
TCCTTCACA
GCAATTCTT
ATGCTGTCT
CGACAAGGA
CGCCTGGTC
CCTCAATTC
TCTGTCATG
TGATCGAAC
GAGGCATTC
ATCTTTCCC
ATTCGTACC
CTTACTGCA
GAAACTAAC
TGTCCACGG
ACAAACGAA
GATAAAGTA
TATTAAACT
TCTAAGCCA
GCCCTTAAT
TTGCAGTCA
GACGTAAAA
ATGTCGCCA
GTAAAGATT
AGGACTCTT
ACAACCGCC
CTAATACTG
GGTGCGACT
CTCTCCGTT
CCATCGCGA
CTATTCGAA
GACAGACAT
TGGATCCGC
TTGCAGCGT
CTTTTACAA
TTTTGTAGA
CTATTTTGT
ATATGTATA
GGCGAATGT
AAACGATTT
GGAAATGGA
TTCGTTAGG
GCAATTGTC
TGGCAAAAT
ATAACAGTA
AAATTTTCA
ATTAGCGAA
TAATTTCTG
ACAAACCCG
ACTATATCA
CAGAGGAAA
GAAAGAGGA
GTTAACTAT
CTAATGGCA
TATGCAGAA
CCCAAGCTC
CACAGAATA
ACACCAGGA
TGAAAGCAC
TGAAAGCTG
AGCATTAGT
GCCTACGTC
CAAAGCCAA
GATTCTACC
GAAAGAGTC
GCTCTTTAT
AATAGCACG
TGCAAAATC
AAATTCTAC
GACGTTCCA
TCAGGTTAT
AAAGTAAAG
CAATTATCC
AGGAGATGT
GGGAAATAG
AAGAAGTCG
TGAAGATCC
CTGCCACCA
GGTCACTAT
TGTTAAAAA
GACATAAAA
TTTATATGA
TCCGATAAT
ATAAACTTG
GTGGAAATG
TTAGAGATT
GGTTCGACT
TAGATCTTC
TTAGCAGTA
TGGATAGTC
TAGTTGGAT
TGACCTTCA
TTATCCTTG
TACGGACGT
TAAACTCAA
AGAGTGAAA
TTGAAGTAG
TCAATTCTT
AGCCAGTAG
ATATAATGA
TATTCATTT
GAAAATAAT
GGCCTTTTG
AAACCAACT
TTATAAATA
ATCAACATC
GATATTCGG
CAATAGTAT
AATACCAAA
CTTCCTCCA
TGTATATCT
CACCCTACG
ACACAAATT
AACAGAGTA
GTAGGATTT
AGGATGGAA
GGTAACGTA
ACTCTTGGA
TAATTAAAC
TTCATTACA
GACATTATC
CGATTTCAC
TCAATGAAT
GCCATATAT
TTTTGAACG
AGTGTCTGA
TTATTTGTT
CATTGTCAA
TGACAGAAA
TATTCTACA
CGAAAATGA
GAACGGCAA
CATACCGTT
TGGTTTGGC
GTGGCACTT
AAACAAAAA
ATTTCAGCC
TATCAATGT
CTGAAAATG
TCCGCAGCA
AGCTTATTG
CGCTGGAAT
GATATTAAA
CACTCAAGA
GAAGAAACA
ATTTGGCAT
TATATAGTA
AAAAATTAC
CAACAAATC
TAACTTGAC
CTCAAAACA
TTTAACTTC
CGTGGACAT
TCTGCAACT
TCTTTGCCC
TCAAAGTCT
GCTGGTGCT
TTCTCTGAT
AAGCAACAT
CTAATTTTT
CAACTTTCT
ACCCACCGT
TCAGGAAAG
TTTGTTAGA
GGGTAACTT
CTTTTAGTT
TAACAAGTT
GATCTGGTC
TCGGCCCAG
ATCAATGTT
AAGTTAAGC
GCTAGGGCA
ACTGTGAAC
TTAATAATT
CCCAAGATA
GTAGTCTAA
AAACAGTAG
ACTTTTAAT
AACACCATT
GTAATGAAG
GGAATATTA
CTCATGCAA
CTAAAGCGA
GCCAAATCG
TCTCCAGGT
TGGCAAATT
GGTGGTGCA
ATGGGGGAC
TAATAGAAG
TGCGCTCTG
AATAAAAGT
GAGTCAATA
ATCAGGGCA
GCATGAACA
CTGCATAAG
CGATAGACC
TTCAGTGGT
CCTGTAATA
TGGGCAGAA
CACTTGAAT
CAACCAAGA
AATTTAACA
CTTTGCTGG
AGTCTCTTT
TGAACTTCA
ACCATTACC
CTGCCACGT
CCAAAGGCG
AAGTGCCTC
GAACGTTAG
GAGTCAATA
TACTTTGTC
GGATGAAAT
GCCAAGTAA
CGCTTCGTC
ATATGGCGA
ATCGGAATT
CAAACTGAA
TTTATTTTG
ATTTTGCAA
CAGATAGTA
TGTAATCAA
AATCACAGA
ACACTCCCT
CTGCCAAAA
AAAAAAAAA
GACCCCTCT
TATCAGCAG
TAGTTTTCG
GTCGTATAG
GATTCTCAT
TTCCTGTAG
TTTTCTTGA
CATCTCCAG
CAAATATCC
TGATGTAAT
GTGCACGCT
AGGAATAGT
TTAACCGCG
ATATATGTG
TATTCCAAT
ATATCACGA
TGCTTCACC
GCCCCACAA
TGACCTTGT
ATGGGGTCC
TTCGAACGG
AGCCTTGCT
GCAAATTTC
TTTCAACAC
TCTGAGTTG
GACCCTCCG
GTAGGGTTT
AAAGCATGC
TCCAGTGGG
CGACAGGAA
TTTGCGCGG
GCCCAACCA
GCCAAACCA
TACCGCGAT
GATATGCAC
TGGAATGAT
CTACTATTG
GAGAAAATT
TAGAAACGG
AATATAACA
GACCCGCTC
TAACTATGG
CTTCCCACA
CGCATGCCA
AAAGAAAAA
ACTCATTCA
ATATATACA
ACCAGTACG
TCATTAGTA
AAAAGTTCC
TTTATTCAA
TCAGGGAAA
GGCACCAGT
ACTCCATAA
GTGGATTCA
AGCTTCAGT
AGACACCAT
ACGTTTCTT
CTTAGCCTT
TTTCAAAAG
TTTGGATCT
ATAAGGGAC
AGTCCTGTG
CTGAAGACC
TGCAGCGGA
ACATAAACT
AAACCTGTG
ACCGAACCT
GTGCAACTT
TCCGCCATG
TGAGAATCT
GGGCACGAC
ATGTTGAAC
GATTATCAA
CGTCCGAGT
TGACAGAGA
TAGATACAC
CGGAGAACT
CGAAGTCTC
GCTTAGGCA
GTATTGGCG
AATTGTACA
CAAAAGTTT
GGTAGCTTA
GTGCTTCTT
TCTTCAAAA
ACACCAAAT
GTCGAGCTC
TGATTCTGC
TCACCGGTT
TTTTGGATT
CTTCGCCGA
ACGACGGTG
TGGAGGCAG
AGGCCTCCA
GCTGGAGCC
AGGGTTTGG
AACTGAACC
GGATGGAAT
AAGTAAAAC
AAGATCTGT
CTTCTCACA
GGTACCACT
CAGGGAATT
CGGTAAATA
TACCCTAAA
ACGTGGAGG
TTTGGGACG
CTCCTTTTC
TAGTAGCAC
ATCGCCACT
ATTTGTGAA
AGGTCACCT
ACGCTAAAA
TGTAGCAAA
TAAATTTCA
TCTATTTAT
ACTCGGAAG
AAAATATTC
TTGCCATTC
GCTCTTACT
CTCAGCTAA
GGGTGGGAT
GTGACCTTC
TTCATAATT
GGTTTGCCG
GCATCACAG
GTGCGCGGG
TGTAAAATA
TGAAGATAT
GGTGACAAA
TCTGCGAAT
TTCCTCCCA
AGGAATCAT
ATGTCCCTA
GCACTTGTG
ACCCGACGA
TCAAAGGAG
ATGTCTTTC
CGGTACTGG
ACACCTGTT
AAGAATATT
ATGGTGGGA
TTAATATTA
ATAGTACCC
TTGTCTCAA
TTTTTAGTG
ACTTCTCCC
AAAAACGGC
CTTGTTCCT
CAGTCGTCG
AGCACTATA
CCGACCTCT
GATCGGTTG
CTGCATTAT
GTTTAGTGC
ACCAAGAAC
TACTGGAGA
AGGATTGTT
TTTATAAAC
ACATTGATA
ATTTCCAAC
ACATAAAAA
ATGGAACCA
AGCCATCAT
AAACTTTAG
CTGACTCCG
TCCAAAATA
TAGAAGCGG
CTTCTGCAC
GGTGGTGGT
TAGAAAAAA
TAATCAAAA
GGTGAATTC
TAGAATGGA
CTTTAATAT
AAATATTTG
TGAAAACAT
ACCCGTTAA
GCTCAATCT
TGAAGTAGT
CTAATCCAA
TATATTCAG
GGATCCATT
CCCTGGGCG
GATTTCGCA
CGCTCAGAA
TACAAAATT
GAACAAGAA
TGATTGCAT
CTAGAAACA
TTCGCTTCA
CAAAAGGAA
ACTTTTTCA
AGCCCTTCA
ACCACAGTC
TCAAATCAG
TGCCGGACT
TTTGCCAAA
ATGAACCAC
CCAAATGAA
ATATTTAAA
TATGCCCGT
CTTAGGGAA
TGTTCCAGA
ACGCCGATG
AAAGAACGG
AGGCTTACA
TAGGGTTTA
TTCAAAACA
GGACTACAT
ATACCGACC
AAAATCGAT
AAAGCCAAA
TTTTAAATT
TTATGATAA
TAGCCAATA
GGAAGATTA
TCTATACCA
GGTATGAAT
ATTTTTTAT
CCAGAATAG
CTGTAACGA
AACCCGGGC
CTCAACCCT
CTTTAGCGC
TATATTCAT
AATAAATCG
GCCAATTAA
TCAAGTCTA
AGCGTATTG
ACTATTCGA
CTTCTATCC
ATCATGAAA
TGTTGTAGT
TAACGGTAA
TGAACCCCT
GGCTAGTTT
CAACATCAA
TCTTCACCT
AATTGGAAC
CAGAACCTG
TCTTCGTCA
CCAACCAGC
CATCCGCGA
CCTTTCTTT
GCTTAAAAC
ATTTCTTCA
AGTTTCCCT
TCTAAAAAA
AGAGTGCCT
TTTAATTTT
AAATATTGT
AGAAAGGTA
TATTGTTGT
TGGATCAAC
TGGCTGTTG
GAAATGATA
GTTTGAACA
AAGATCGTG
GTTGCATTA
CTTGATAGT
ACAAATTTT
GAAAATGCG
TCATAGTGA
TTGAAAATG
GGGGTAGTG
AGAGCAAAA
GGTGTGTTA
CAGTTGATG
GAAATGTGA
GAATGAAGT
TTTTTTCTA
TTACTTTGT
TTCCCTCAA
AAGAATGGT
AACTTTCTT
TTGTGTTGT
CCTCAAAGT
GAACATTTT
TCACCTCTT
AACGGCTCG
TTTTCATTA
TGACCGCCT
CTTTTCTAT
ATTCATAGA
GGCTCCGTG
GTTATCGAT
GATTCATTA
AAGGTAGGT
CTTCAAAGG
GGGCGTGTG
GCAATCAAT
TATAAATGG
TCTTTAAGT
GTACGTTGA
ATCGGATGG
CTGATAGAC
TGAATCAAA
CTCGTTCAT
CCATAAACC
ATGGTATCA
ATTTCCATT
TGATTTCAT
CTACCCAAC
GTGCTGCTT
ACCAAATAA
GTGAGAACG
TATAGAGGA
TGTCAATGA
ACACCATTT
ATACTTTAT
TGGACGAAG
GTACCGATG
CTTTCCACC
TACCGTAGA
TCAGGCCCC
AAACATGTT
GCTTAGTTC
AGTTTCAGC
GATTTCTAC
AGTTTGAAA
GTTTGTTTT
CTCCTCTTG
GTTGTGAAG
TCATTTATA
TGGGAACTG
TTATGGTAG
GCGTCCACT
AACCCTGTT
AGTCGGTAA
AGCCATTTC
TTAAGATAC
TATAGCTCT
AATTAAGGG
TTATATTAT
CTTACAAAT
GTGTGAGTG
TTTCTTGTC
TCAAAAGAC
TTCCCCTTC
ACATACCAC
GAAGTTCTA
GCTTGGAGG
CAGATATTC
CAGAGTCAG
AGAAAGATG
AAGATTAGG
TTATGAGAT
TACGTCGGC
CGCAGGGAC
GGCCCGGGG
AGTGGGACA
GAGAAAGCG
AGAGACTAG
CAGCAAGAG
TGTGAGTAC
GCAATGGGA
CCGCCAATT
GTTGCGTGG
ATGCGAAGT
AGACGAGAG
AAGTGCGAG
AAGTCCGTT
CGCCTCTAT
CAGTCATGG
TTTTCTCTT
CCCTTTAGC
AATGAGAAA
CGCCAGCAC
ACACCCCCT
CGATACTTG
GTAAGACAC
TCCTCTTGC
AAGAGCGCC
ACCTACTAT
CGTTGGACA
CCAAACTAA
CAGAAGAAA
ATTTCGAAA
AAAAATAGC
GCTTAAAAA
GTGTATTGT
TTGTTACAC
AAGAGATTC
AATCTGATA
CTTTTTATA
AAAGAAAGA
CACCCACAC
TAGTGAAAG
ATGTTATTT
GCAACTGCT
TCTGCAGAC
CTTGTTGTG
TAGCCCAGT
CCGCCAGAA
CAAGTGTTG
GAACAGGAG
TCTTGACCC
TTCACCAGC
GCGCGGCCG
ACTTTCCCT
CTCCCAGAT
CATACTTAT
GTCTTGATC
ATTTCTACC
CGCTGGCAT
TGGAAGTCC
CTTTTCGTT
TGGGTTTTC
TTTTTCTTA
TTAATTCAC
CATGATACA
CTAGTCGTT
GCCACATCC
TTTCTGTAA
TCAATCACT
AAGGAAAAA
AACGCGTGG
TCCCCCGAC
CAAACACGC
TAAAATCCG
GTTCCTGAA
GGCATACGG
ATAACGGGG
CTTATGGGA
GGATTTGAG
CTAACGATA
GCTACTTTC
GCAGAAAAA
CAGTATTAA
CACCAATAT
TTTACCAAT
CTGCTAGCG
AATGTGACA
TTTATTAAT
TCGGAAATG
TCCACAGGT
GAGAAGACT
TGTTGATTA
AGAAGGTCG
ATAAAAATA
AAATTGAAT
ATTATTTCT
TTTAGCTCG
CAAAGAATA
ACATACACG
AGCAAGAAG
CTGGATGAA
TTCACAGCA
ACATAGAGG
TACTCGCTT
TTCTAAATA
ACGGTACAC
CAAGTGAAG
ATACACATA
TGACGATCT
TTGGATTCC
TTCTTGGAC
TTCTCAATG
AGCTCGTCT
TGATTTGTC
ACAATACCG
ATCCATACT
CACTGGAGA
AAGCAATTC
CCCTGATAC
GGGTGATCC
TGAACACAC
TTTGCATGC
GTGCTTGGA
TGATTCTAG
GTAACTGAA
GTATGTCCC
AGCAAGTCA
TTATCATGA
AACTCTATA
TATCTTGAG
ACGGCAACA
CTCAACTAA
TCTAATCTG
CATTATAGG
AACTGATAA
GAAATCTAA
GTTTTTGCC
TGGTTAGTA
ATATCTTCT
TCAAACATA
CTAAGTATG
GGGGTATTT
TCGTTTTGG
TTCTGCTAT
GCTATATCT
TTCAAGAAG
TCTTAGGGC
CCTTTACTC
TTTGGGAGA
CGGTCATTC
GTGTCAAGA
TTCCATTCC
TCAGTTATA
CACTTAACA
CAATGATTT
GCGCAGGAA
GGTACCTTA
CTTCTCCAT
AAATTATAC
ATGGCTACT
TGTATTAGA
TTGCTCATT
CTATGTTTG
ATTCTTAAT
TTTCCTCTG
ACTACAGCA
TGGCATCTC
TCATTCATT
TTAATATAT
TATTAAATA
CGAGCTGGA
TATATTTTA
TGAATTAAA
CAATAAAGG
ATTAGGAAT
TACTGTTGT
AAAGTCGCA
GTGCCACGT
GGATGAGTG
TTGTAGAAG
TTCAAAAAT
AACTATAGA
GTGACCAGC
CTACAATTA
TTCGCTTCG
AAACTCAAC
GTTTTGGTA
GGGAGACCC
AATGGTGGA
AGGTTTTCC
AAGAAAATA
ATACGAGAA
TCCGATTTG
GACTAATAT
CCGACAGAA
CAGTCGTTA
CGTGGAAGA
CTGACCTTT
AAATTAAAG
TAGTTTAGT
CTGCTCAAC
TCGGATTTA
AGATCACGA
AGGGCTTAC
ACTGCATTA
TTTACTACA
AGTAGGGTT
TCCGGTTCG
ATATGATGC
ATCTTTGTA
GGAATTTCT
CAAACCGTA
ATTCAGGAA
CCATAAGGC
AAATGTCAC
TGGGAAATT
CCAAAAAAG
TCTCCTTGC
TCGAAACGA
ACACCTAAT
GTCCAAATT
CATTGGAAA
TTTCTTAAA
AGGTTTTGT
TACGAAGCT
ATTGTACGT
TCTATTTGC
ATTTTTGAG
TGTCTTCTC
AGACACCTT
CATTACCAT
ACTGTGGAC
TTCTTGTGA
TCTAAGACG
CGGAAAAGT
ATGTTGAAA
AAGTCATTT
TATAATACA
TTGGGTTTA
AGGGAGTCT
AAAAAAAGC
ACATTGTTA
GAAAGACAG
TAGGAAATC
AGAGAAGTA
GATTCTGAA
TCCAGAGCA
TGAAGGAGG
ATTCTTGAT
GGATGTTGA
TCAAAGCAA
GAGCCGTTC
GTCAGAGAT
TAAAGGGAA
CTATCAACG
CTTAACGCC
ATGTTATAG
TTACCATTG
AACAGGGCC
AAATACATG
TCAGTATGC
TAAAAGAGG
TATTAACAC
GTAGTAATG
AATAACGCA
TTAGTGCAA
CATTCCCCA
CGTAAAACA
ATCTGGTGC
AGTGAAAAT
CATTATATT
TGTTAAATG
CAAGAAAGG
TCTTCTCTG
CGTTGGTTA
ACTACTGGA
TCTATTGCA
GCGATGAAG
GAAATGAGT
GTCGAAAGG
AGGAAGCTC
GATGACTTG
GTCTGAGTC
AGTCTACAG
TTACCCCAG
TATCAAGCA
CTGAAGGGA
TTGATCGAA
GGAGCAAAA
AGAGTACTA
ACTTTCGTA
CAATCATAA
AATAATATA
TCGAATAAA
AGGATATAA
AAAAGTAGA
AAAAATTTA
TAGTTGATT
AAAAATAAG
TAAGTTTAT
TTCTTTCTT
TAACTTTAA
ATCGTTAAC
AATATTTGA
CGGCAATAT
GCCGTCAAC
ATGCACCAG
ATTGGATTT
TGGAGTTAA
TCATGTTAC
GCATCTCTT
TTCATCTGA
TCGAAGCAT
ACTATTGTT
TAAAATACT
AGAAAGGTT
TGTAAAGTT
AATGTCGAA
TTCTACCAT
AAATCACGG
AACTTGCAA
AAAAGGTTT
TGGGTTTCT
TTTTTGGAA
CTCTGATCA
GAAGACTTT
GTATAAGAT
TAGATGTGT
GCTTCCTCA
ACCGTATTC
CTCTCAAAG
GAGTCGTAA
TCTCAACCC
TTAATTCCG
ATAGAATCC
GTGTTTCAT
AAACGCAAT
CTAATTGAA
ATTTTGATG
TATGATGGT
TTGTTGGCT
GCTTACCTG
AAGGAATGG
AATTTCATT
GTTTGGGGG
TAGGATCAG
CTAATCACA
CAAGAAAAA
TAACCAATG
GCCTTATTT
TGAAAAAAT
GTGCACACA
GAATCAGAG
GGCACTCGT
GTTTAAGCT
CGAGAAAAT
TTCCAGTTA
AGGTGGAAG
CATGCGTAC
ATACGCCTG
CAAAAAAAG
AACGGAGCT
TAGGGGCCC
AGCAGACGC
TGTTAACAC
ATAGGTATT
AGTCAATTG
AGAGACATC
CCTTGATGG
AAGTCCCTA
TTCATCGTC
CTCTTGTCC
TGACCATTT
TTTTACATA
TGTCCTCCT
TCGGCAATG
CTTTAGGTA
CATTTATGG
TCCCATTCT
CAGGGATAC
ACTCGGGAA
GAGTCCCAA
TCTTTTAAA
AATGGTTCG
GGTCCCAGT
TGGGGGTAT
TTTCTGTTT
CTATTGCCT
GTCAATAGG
GAATAGAGT
ACTATATGT
GTTGAGGCT
GGGGTGGAA
CCAGCCAAG
GAGGCCCTT
CATGCAATC
TTTCTCTTC
GTCAGTTGA
TTCATCAAT
AGAAATGAT
TTTTATCTA
ATGTGGTTA
TCATTTCTT
AAGCATAGG
CAAAGAAAT
TCTCCCAGT
ATATAATAT
AAATATGTC
TTTTTTCTT
GGCATATAC
AGTACCGCA
TGTTGCAAT
GACATGTAA
CGGCATTCC
GTATTGTTT
CTTTTGCTG
TATATCCAT
ACACAACTC
GATGTCCGG
TCAACGAGT
TTCAATATC
GCCTTGGAT
GCGCTGCAG
GGCAGCTGA
AACTGAGTA
CGTTTTCCA
TGAGTATAA
ATTGTATAT
GAAGCGTAG
GTCGGGGGT
TGAGATTTT
AACTGATCA
ATAAGTCTG
ACAGATTGG
AGCACCCAG
GCTACTTTC
GTGCGGATA
ACGCTTTTA
TTCCCCATA
TGTACATAT
ATACCTGCA
GGTAAAATG
TGCCGTTTC
ATACATCAA
AGTCCTGCC
CTCAGGAAA
CGTGTGCTA
ACACGGATC
TATACATAG
TACTAGAAG
AAAAATAGT
CAAACCTCG
CACATATGT
AGCCGCCCA
GTGGCAAGC
CTGCGGGTA
CGATGGCGA
GATACGCTC
CACCGTAGT
TCGCAGATG
TTTACCTGA
GTAGAAGAT
CGAGTATAA
CATAGTGTG
GTGCCCATG
ACGTTCCTG
CCGTGGCTC
AATATTCGC
TATAGGAGT
AGATTGATA
GGGGGCAAT
AGGACATGC
GAAAAGAAA
GCTCACGTA
ACCCAAACA
GAATCGGTT
GTCATCGTA
AGAATTCTT
GACCCCAAA
CGGTTTTGT
CCATGACTT
AGAGAGAAA
GGAAGCAAC
TCTCGGACA
TCGTTTTAC
ACCGAGCAC
ATTTAGGTA
TTTTCGGTC
ACATTACTG
ATCATAATT
AATACCCAC
ATAAACCTT
AGCCTACAT
CTCTGGTTC
CTGAAAGCC
CCAAACTAT
GAGAAGAAC
CAGATCACA
CGGGTTAAC
CGAATCTTT
AAAAGCATC
ATCAAGCCA
GGCTTATGA
ATAAATATG
GGAACGAAA
AGACGAAGT
ACTTCGCCG
ACTTTTGCG
GTACTGTCC
CTTCCAAGT
ATTGCACAA
TTATTAACG
TCCAGGTCA
AATGCTCTT
AACCGTCTT
AATTTGAAT
GAATAGCAA
CGAATACCA
GCGGGCCAA
GATAATCAA
CCATCGAGA
ATACATTGG
GTTGGGGCA
CCAAATCAA
AGTACATGC
GGCTGCAAT
AATCATCAG
CTCAAATAT
GTTATCTTC
TGACCATAT
AAATAAACT
GCCAGGTTT
TGCCCACAC
AATCCCACG
GATTAAGCA
CTTTTTGTT
CATATTTCA
TAGTAAAGC
ACAGGAGAT
AGCTAGAAA
AAATCCACA
GGACGTTAC
TTTTGATAG
CAAGCAATT
GGCCATATC
AATATCTGC
TAGTGCAAA
TGTTATTGT
GCGCAGAGA
TTAGCAACA
GAATGCAAG
CAAAGTAGT
AGTATAAAG
GTTATTTTG
TGATGAACA
CAATTATGA
AATTATTTG
ATGGAATTT
GATTTTCCT
CTGTTAAGT
ATAAATAAT
CATGGTGTA
AATGAGTGG
CCAACATTC
AACGTTCTC
TTTTACCAT
AATACAATC
TCCTCTTCT
ATTCGAATA
TCATCTCTA
TTCTTCTTC
ATTTCAAAT
GCCTCTTGT
TATTTTCAG
AGGCCTTAG
TCTCTCGCA
GATGAATTT
CCCAATCAG
TTAACCGAC
TGAAATATC
CAGTCTTCT
TGGGGAGGT
GGGGTGTGA
AATTATCAA
AGTAGCGGA
ATTCCATTC
CTAAAGTTT
AGTAAAAGT
TTCCGGCGT
CGGCACCAT
TTTTCCTTC
TAATCTTAA
TATCTGTGA
TGCGCTCTA
ATACAAGAC
CACGTGTCG
TCATCAATG
GCAATATTC
ATCTTGACA
TTCTTCAAT
GTGCTCATC
ATGGATGAT
GTTTTGGAT
TTCCAAAAT
ATAAATTCA
ATACGACGT
TTTATCCTG
CTTGTGCAT
AGTTCATGC
ACGTGAGGT
TGATTCTGT
AGGGGCGAC
AAAGTCACA
TATCTCCTT
TCTCTCAGC
ACCTGGAAT
GCAGGGTCT
TTCTTATGC
CAATTGACC
TCTCATCAT
TGTTCAGTC
ATTTGCTTT
CTTTAGCGG
AGCAGATGT
ATTAGCATC
GAGGGAGAC
GCAGTCATA
CAAAAATAT
CATTGCAAG
AAAAAGTGA
CTACATCCA
TCAAGAATC
GTTTGAGAA
GATAAGTCA
CCTCAAACT
AGTTATCCC
AATATCATG
AAACGAACT
ATGTTCTCA
CTTGTAACA
ATCTGTACA
ATAAAATAG
GAATCGGGA
ATTTGGATC
ATTCGAGAA
AATAATCGT
TAACTTTCG
ATAACATTC
GGTGCAAAT
TGTTTGGAG
ACGGCTCCG
GTGACCATG
GAAGAAGGG
TGATCGCAA
TAGAAAAAA
TATAGGCTA
TAGATTATG
TTTTACTCT
AAGGGGGAA
CATCAATTG
AAACTCCCT
TATCTTTAT
TCCTGGGTA
GTGCCATAT
CATCCAAAA
TGGTACGGT
TGTAGGTGG
AATGTAAAG
GCTTCACGT
GAAGAAGGC
GATAGTTTA
TCAAGTAAA
GGATACAAA
CCGGGTTGG
ACCTTGAAC
ACCTACCGT
CTCCACTCT
TTAGCAAGT
TCGGATAGA
AGTTAAAAT
TCTTCATCG
TTCAAAATC
CTTCGTCTT
TTGTTTCTT
TTCCTTGGC
CATCTTCCT
TTCTTTTTA
TAAAAGTGG
CCATTATAG
CGAGACAAA
ATGTTGAAG
GCCTCGCTA
TCCCCTACT
TCCAAGCTG
CATTATTGC
CCACATTAC
CTCCTTTAC
CCAAGCAAG
GGTACACCG
AACATGTTC
CTATGCAGT
GTTAATTCC
ACATTGGTA
CGAAGACTT
GGGTCGACA
CTCTATTGG
CGGCTGCAT
CTGAAGTAT
ATCGACAAT
TCTTTGCGG
CAATCTCTA
TTGGTAATA
CTTTACCAT
ACCAAATCA
GCGTGTTAG
CCGCACTAT
ATGACGTTC
GAATATATT
TAGCTTTTG
GAATTCAGA
ATCCAATCC
TTTCTGGTA
ATGTAGTTC
CGCTTGTAG
ATTCTCTTA
TGGCCATAA
GTTAAAATC
CAATTGCAT
TGAACGACC
AAACTGGAT
TTGAGTAGT
TCTGACTCT
CCGTGGAGA
TTTTTGCAG
GTCAGCGAG
GCGCTAAAC
TGTACGTTA
TTCTTTGTC
TCCCAACCT
TTTACCTTC
TCATGACAC
ACGTCATTG
AGAGTAGTC
CTTCTGCAA
AGAATAACG
ACCATGCTT
AAGCATCCA
ACTGGGAAA
GGTTCTGGC
GAGAAATGG
AAGTTGACA
AGTGTTGTT
TTCTTGGCT
AATTCATCT
TAGATCATG
TACCGGTAA
AAAGAAGTT
TAATGGGTC
CCTTTGGCA
AGATTCTTT
TATAAAGAG
AAAAATGAC
AAAGAAGAA
CATTGATTG
GCACATCTT
AGTCATTTC
ACGTTTTAA
ACTGCCTGA
TTATGTTTA
GCGCTTGCA
AATTTTTTT
TAGCTGTAT
TAGCATTCA
GTTATTGTT
GCGAATGTA
TAGCCTTTG
TTTTTGTGT
TGCATACTG
AAGCACTCA
ACAAATAGA
CTTCTTCAC
AGTAGATCC
GCATTTTGG
AACTCAAGA
GACCTTGAG
AACATCATC
ATAACAAGT
TATCCGTTG
AAGAGAAAG
TTGATAGAG
AAATGTTTC
AAACTCCTA
TTGAGTCTT
TTAAATGAT
CACTTTTAC
TTGGCAAGA
CCAAGTAAA
AGATAAGAT
CAACGAGTA
GCAAGTGAG
TGGTATGCC
TTGAATTAC
AGTATTGAT
GTCCGAGTA
AGACCATTT
GATGGTCTA
TTATCCCAA
TAACCTATA
TATCGTATT
GACCAGCTC
TACAAGATG
TGAATGTTC
TATTTGCAT
TGTATTTAC
GCACGCTGA
AGACATTTT
TATTATGAT
GAGAAGACA
AGAGAAGGA
ATCAATAGG
TTATTATGT
GTTAGAGTT
CTCCAAATG
ATCCCATAT
AGTTCCTTA
CAAGCACCA
CCATACAAG
CAATTATCG
ATCAAGGTA
AAACGATAC
GCACCACCA
CAAACCAGG
GCATCTTTA
ATTCTGCCT
AAGCGCCGA
ATTATATCA
TCAAATCAG
CGTTGGTGA
AAGAAATGT
CTGAAGGAA
TTTTAGGTA
TTGGATTAC
ATCAAAGAT
AGCTAAAGG
AGGTTGCCC
TATTCAAGC
TTACATAAG
TCAATCAAA
TTTTTCTGT
TTGAAAATT
AACAACTAA
AATAACCAA
CTCAGCAAG
ACGACATTT
ATGGTTTCC
TATTGCGCC
CTGGTGTTG
AATCATTCA
ATTGATTCT
CTCTGGAAG
TAACTTAGT
GGATAAATC
AGGAAATTG
ATAAGCCAT
CCTTTTTTT
ACAAACCAG
CTACGATAG
AATTCTGAG
GACCATGCA
CGATAAAAG
AAAGTGACT
TATAGAAAC
TATTATTTG
CCATAAAAA
TTACGTGCT
GTCTGTAAT
GTACCTCTT
CTGTTGGCT
AATATAAGC
AACAATTAT
CCATTGGAT
TTGCCATTG
GATTTAATT
GTAAACTCG
ATACTGAGG
CGTATTAGT
TTGAAAAAA
ATAAAAAAT
AAACATGAC
ATGGAAGGG
TTGGTTACC
GAATTTTAG
CAAAGACAT
TCAGTAAGC
CAGGGTGAG
TTTCAATTG
AACCCATTA
ATTACCTAC
AGCAGTTTT
AACGAGAAG
AGTGGATCC
AATCGAGCG
CCCAGAAGA
GCACTCAAA
AAGACAATA
ACTCCAGAA
TCACATTCA
CAGATCAGG
GATCGTCGT
TAAACATTA
GAATGAATG
AGATCACCA
TCCCACTAT
AGAGTATTA
AACACTGAA
ACGGCAAAG
CCAGCAACA
AAAGAATTA
GAAGACTAC
TACAGGTTG
ATGAGTACC
GAAGAGGAG
CAGATACAA
GAATTGAAT
GAACGACTA
TTCTTAGTG
GAGAATACA
GACCAAAAC
GGACAATTT
TTTTTAGTT
ATGTATTTA
GACATGAAA
TCCTCCAGA
TCTTTTCTG
TATCAGCTC
ACACGCACT
CAGCAGCGC
ATGATGCAA
TTAGCGATT
TTTTACATA
ATGGGGAGA
ATTTAGGGA
CAACACAAA
TGCATGTCA
TGCCTAAGT
ACATTTACA
CGTTTATGA
TTTCTAACC
ATCTTTCTT
TAATCTTCC
TTCAAAGGC
GAAGGCTCC
TTCCATCTA
TGATCTCTT
TGAGACAAT
CGAACCTAA
TGAATCCAG
AACTTTGAA
TTACGGCTA
TTGCCAATA
TGGGTTGTT
TTGTGCTAT
GTACCGTCT
AGTTCAATA
GAATTGGTA
CAATATCGA
TACCGGGGG
ACATTAATA
ATGAAAAAA
AACAGGTGT
TTTTTTGAA
TAAATTTCT
GCAGCTTTG
GGTGGTCTT
TCCGTTGAT
CTCGATGAC
ATAAGCACG
GTTTATTAA
CCTTTAATG
GGCGGATTG
TCTTGACAA
TGGAAAAAA
AGAGAGTAC
GGCATACGA
AGGAGAAGC
GTACCGATG
CATTACAAA
TATCTATGG
AATAAGACT
ATTTTTTAT
TTCCAAAAA
GACGATTCG
AAGTGTGGA
TGCTATATT
TTCCTCTTC
CCAATAGTT
AATTTCTTC
TAGGTAGTT
CTCTGTTTT
GTACTGGCA
TTCTGTATT
AATGTCCCT
TTATACGCC
TTTCAGCTT
GTATCTCTC
CATATTTAT
GAACTCAGT
GCTGTTGCC
AAGGCGGAT
CAAAAGGTA
ATATACAAA
GTCAGAGTT
ACATATATC
TGCGGCATG
AGAAACCGA
CATCTTTAG
AACTTTCAA
GGATTCTGA
AACTCAAAG
TCTAGCGAT
TGTCGCCAA
GTGCTGAAT
TCTGCCGTT
GCCTTATGG
TAAAGTGGG
TTTAATGAT
AGATGGTAT
TTAATGACG
CAATTTAAA
TAGAAGGAA
AAATTGGAA
AATGATGAA
TGAGCAAAC
TATATGCAA
TTTTTTCGG
CGGTGCAAA
TAGTAATAG
AATAATTTG
AAGTGATGA
TTAAGTCAC
AACCAATCA
GAGGGGTCA
AACTACCAA
TCCAACATG
CTTATCATT
AACGGAATG
CTATTGTTG
TTTTAAGTA
AACAACCGT
ATTATGGAA
CTTTGTTTT
AATTAAAGA
AAAGCTTGA
ATTTACATC
AAATTATAC
AACACTCTT
GTCGGGGAG
GGTCTTCAA
AAAACACTA
TAAATAAAT
TGTTTGCGG
ACATTTGCC
AATAACGTA
ATTCTATCA
ACACCGGGT
CGAGTCTAA
CAGGATCCA
GAAGAAGAC
TGAAGCCAT
CACTGTTAA
AAAAATGGA
TCTTGAAGG
GATTCATTG
ATCAGTAGG
AAGATCACG
TGGAGTCCA
GTCCATATC
TAAAATCAA
TGAATGTGT
AGATCGGCG
AGTTTTGGA
TCAATTTGT
TCTGCGCTG
CTCCTTGAC
TCTCGGAGT
GCCATCTTG
TGAATTTGT
GCTCCTGAA
ATAAACTCT
GTTAATTGC
AAAGGTGCG
ACTGTGGCA
ACTTCTCTT
TTGTTCACA
AAAGTCTAT
GTATCTATA
GTGCGTACA
TCACTGGCG
AGCATCTGA
CTGTAGGTG
CCAACAATA
TCCCACGCA
TCCAGTCCT
TTCAGCTCA
TTCTACAAG
CACGTCCAA
TGAGGCAGC
GACATCCAT
CATCCACAG
TTGATATGG
TCTTGGAGA
GATTAATAA
ACACAGAGT
GGAGAAATA
CAGAGTTTC
GTCCTGCTC
GGTCTCCCC
GATCTTGTT
CTGTATCGG
CCACTTCAC
TTATCTGCT
GAGATAGAA
TTGGTGGTC
GAGCAAACT
AGTCTTTCA
AACTGTTCA
CCAAACCAG
GAACGTCAC
CACCTCGAA
ATTCTGAAG
GATAAGTCC
AGACCCTGC
CCAATTTGT
GGATTGGAT
GTCAGGAAC
ACCATGTCG
TTGGCCAAG
CTCGAGATT
GCGCATATT
AATGTTGTC
TCACAAGTC
GTATCAAGT
AAGAAAATC
CCATACTAT
AATTCAAAG
CAGGAACTA
CCACTTGAT
TCGAGACAA
CCAGGTGAT
AGCAATGAC
AGTACATTG
CCAACAACG
GTGTAATGA
GGGTCGGTC
AATCAAATA
TATTTATTT
AATTGACTT
ATTGTACCC
CCGCCGGTA
TTATTGCCC
TTGAAACCA
ATACAATCA
TTATACCGT
CTCCGTAGA
CCGCACCTA
CTAGTCACT
TTTGATGGT
TTTCCTGGA
TAAAAAACA
GAGTTTCTC
AGAAGTTAT
CCAAGTTGT
CCAAAAAAT
AGGTCAGAG
TCACCTGAG
CTGCGCCCT
TCCTGCTAC
TTTACTCCC
TATTTCGTG
TATAAAACA
CAAGGAACA
TTGTGGGCT
GTAGCAATC
TCCTGGTAA
CCGAAATTA
CAAGCATGT
TTTTACAGA
CCGCAAAGA
TCAAACATT
CAGGAAATG
TCCACTCTC
CAAACCCTA
TTAATTATA
TTCTTACTA
GAAAAAAAT
CATTAGAAG
TGGTGTTTA
AGCAGCGGG
CGTGTTGCA
GTCTGCAGC
TTACCAAAA
AAAAAGAAA
AAAGAGCCA
AAAATGAGG
CAGTTGACC
CAACAGAGT
AGCACTTCA
GGGTTTTAT
AAAATACAT
ATTACCAGG
AGACACTGT
TGAATTCTA
CACCAGACA
AGCGACGAC
GCTGCATCT
ACTACAAGC
ACCCTGGTC
GGGCGTGCA
AAAGGCTCG
AGAGACCAA
TGTCGCATA
CCCCCTCTA
TTCTAATAT
CCCTTGTTT
AAAGCAGTT
TTGGCGCGC
TAATAAACC
CGCTTAACT
GACAAGGAG
TGTCGAACA
GAAAGAACA
TTGAGCCAA
AAATAAATA
TTATTTTGT
GGGAATACC
TACCACAAA
GATAAGTAT
GGTTAAAAA
TTCAATTCA
TTAGGCAAA
ATATATTCA
CGTTACGCA
CCAAATATC
TCTCAACGG
CATCACCTT
CCAATATCG
ATCGCCGGT
CAATCCTCT
GGAGGGCCG
TGGTCGTCC
CTGTGCTTT
CTTTCTGAC
CCTTTATAG
AAAAAGGAA
AATATTTAA
TTCTTTGGT
TGCAGCAGC
GCTGAAAAT
GGAAGCTTT
AAAAGGACA
GTCAAGCCA
ACACTGCCA
ATGCCGACT
GAACACAAT
CGATTTCGG
TTCAAAGTG
TGGCAATTG
AGTATATAC
AAGCTTTTA
TAGTAAAGA
GAGCTGTAT
GATTTTCCA
GGGTGACCT
TGGGAACTA
TAGGGTAAA
TGAATGAGA
TATTAGATT
CTACTTGTG
TCGATTTCT
TATTGCCCC
CCCTCCATT
ATTCTCCGT
TTGCATTGG
CTAGGAGCG
GTCGGGATG
CTCTAGCTG
AGTGAGCCT
TTGACTCTG
GTATTTTTT
TTTTAAAGC
AAAATGGAT
TATAGTGGT
GTTTAAGCT
CCTATTTCT
ATTTCGCGA
TCAAGTATC
ATGTTTGAT
TTTACAGTT
AACGTGACG
GACACCATT
AGAAGTTAT
ACTTCAATC
AGTCATGGG
AGAAGAATG
AAATCCCAA
TATACTAGT
AATCATACA
GTGGGAGAA
CTAAGCACT
TGGTTGGAA
ATCACCTGG
GACATCAAA
AGGACTTTC
TAGAAATCT
AATGTGTCA
TTGGACTAA
TTGACGTCA
TGGGTAGTT
CCTAGAAAT
AATTATTAC
GAGGGTGTG
TCGCAATTA
TATAATAAA
TACTTGCCA
TGAATGGGC
ATACTGGTA
GCAACATAA
AATTTTTTC
CATACACTT
ATTCCTATA
CACCTATCA
GAAGTGTAT
GTACGGTAG
TGAAACATT
CCACTGACG
GTACTGCGG
ACCCAATTT
TCTTCCTCA
AGAAAAGGC
CAAATACTG
TGATTTCGT
GAAAACGAG
AAAATATGA
GTCAAGAAG
TACGCTCAC
ATTCATCTG
TTATCATTC
GATATTACT
TACATGCTG
AAGTCCTCC
AACAAGCTT
AGGATACGT
ACATCCATA
CCTTAATAG
TTTCTAATT
ATTGCTCCT
GTTTTATTT
ATTTTTCTA
ATAACAAAA
TAATCAAAA
ATTAACTAC
TATTACCAT
TTAACAAAT
GGTTTCCGA
GAGCAGATG
GACGAAGCA
CGGCTTCGA
TGTGCCACC
CCCTCCATC
AAGTAATAA
ATTCATCAG
TACGGGCAG
ATTTAATGT
TCATCCTGA
TTTATGTAA
ATGAGTTTC
TTATAATTC
TCACGACGT
TTTCCTATG
TGGTTTCCC
CACGCCAGC
TTCTATCTT
GAAATACTT
AACCAAATA
AAACCAACT
GCACAACGC
CTAAACAGT
TGCTTCTTT
CAACATTAC
CATTTTAAT
GAGTATATC
CTCGCAGGT
CAGTAGGCC
GATCCCTCC
AAAAATGGG
CGAAGTGTT
TCTAAAGAA
ATTTGATAA
TTTACTTTC
GGAGTTGCT
CGGAAATCT
AAGATGGTA
ATGGCTCCT
AGATATATG
CGCCTTGGG
GAAAATGAT
TCACTTGAA
TGACATTGA
TTTTCTGGG
ACTGTTTTC
TCACTCAAG
GGTAACGAA
TTCGAATAC
ATAGCGGAA
TATGATATC
ATTAGTAAA
ACACGTTGC
AATTTATCA
ATTGTGCGA
TTAAAACCA
ATAAAGATT
TGATCCTTT
GGGATATTA
TAAGATGCA
TCTCTCTCG
TTTTATTAT
ACAATCAAT
ATAAAATCT
TCCGTTCAA
TCGACTTTT
GATGTAGCA
TTCTGTGTG
CAATTGTTT
TTTTCTGTC
CAATCTCTT
TCAAAGAAT
GCAACTTCG
CATTGATTT
AATCGTCAT
TTTTTATTA
TTCTTCGGT
GTGTGCTGT
ACTTGATGT
CAAGTCATC
TAGTCCCAC
GGAGAGGCT
ATTAGGACG
TAAAACTTT
TGAACATGT
GTCAAGATC
CTTTTATGC
TTGATGTTA
AGAAACTAA
CAGAGGTAG
ACAACGTTA
CAGTTCGCT
ATTGTGTAT
TTAGTAGAA
ACTCTTCAT
CTAGTGTTT
TGTGAAGAA
TTTCGCACT
TTCCCTGCG
AAGTTTGAA
AGTGTCAGG
CGCCCGATT
GTTCTCTTA
CAGATTAAC
TAATTAACA
GTGAGATAT
TTTTTGCAT
CCTTTAATT
AGCAACTCC
TGCTGCCAG
ACAGTAGCT
CAAAATTCA
TAGGCCACT
GTTCTCTGA
AAAACGTTC
ACCCTTCAA
GTTTTATGT
AATAGGAGA
GGAATGAAT
ATGGGAGCA
AACAGCGTG
GCTTTGAAT
GTAGTGTAA
AAATTTTCA
ACTCTGAAA
CCCAATTTT
TTTTCTATT
ATCTTTTAA
AAATTTGGA
AGGTCCAAA
ACGAAAAAT
TGCTAAAGG
TTCAAAGAT
TACTTCAAC
TGATGATCT
GAGGCTATA
TGCAACATC
GTACATTTT
ATCGGGGTT
ATTCTTATT
TGATCCCTT
AAAGGGGTT
CTGTGATAT
TGGACATTA
AAATCAAAC
TCCGCTATC
TTTTATTGT
AGATGACCA
CGGTAGTTT
GCATGATAC
TTTTTTAGT
GGAGTAAAT
ACCAAGAAG
CCCCTTATA
CATTATTTC
AGAAAAAAG
ATGATTATC
GTAAATAAC
TAACGATTT
ACATATAGT
TGTGTCCTG
CTATATTCA
TTAGTGGTT
CCTCCTCGC
CCTCAATAA
TGGATCTCA
TTCCTTATA
TATATTGGA
AACCTATTC
AGGTGAGGA
AAAAAGCTA
GACAACTCT
TAAATTCTT
TTGAAGACG
ATATGCATA
CGGAGAGCT
GCTGATCAA
GACATTGCA
AACGTTGAC
GATGCCGAC
ATCTTCTTG
TCAATTATA
ACACAAAGA
CTTCTTGTT
TAGCTGTCC
GTAAAGGAT
ATACTTTTC
ATACTTATA
CCCTACAGA
TGCTTTTTC
AATGATAAC
GGTCACACT
CTGGAGACT
GGAATTGCT
CTTTGCCGT
TTTTCACTT
AGTATCAGC
CATTGGTAT
ATTTTATCC
ATGCGTAAT
GGGATCCCA
AAATTAACG
AAAAAGCTC
ATGCATTGG
CGCAGGACA
GAAAAATGG
TAAAGTGGA
CCGTCTTCG
AAATATTAA
AGTTCCCCA
TCTTGTGAT
GATTTTCGT
ATTTCCACA
GTTGTCGGA
TGTATTCTC
TTTGATAAT
TCCAATCGT
AACCATATT
AACATAAAT
GGTGTACCA
GCAAATAAA
CCTTTTGAA
CAATTGGGG
CATATCAGT
CCATTTCTA
CTCCTTCCC
AACCTTGTT
CTACTTTCA
TTTTCCAAA
CTTTAGCAA
TAGAATCAT
CGAACTTTC
AAGCGCAGA
GAGGAAAAT
ATTTTTTTA
ATGCAGTTC
CTCTAGTTT
ATGGTTGGT
TGAACCTTA
TAATTTATT
AACAGATAA
CTTAGTTAA
TTGCCAAAT
GCGACCGCA
GCTGGTCTT
GCCTAAATT
CTAGAGGAT
GAGAGAACT
AAGAGCCTG
GACGAGGTA
TGATAGTAA
TGCTGTCGA
GACTCTTCT
TTGTTGCTA
TATACATAC
GACATCTCG
TTATGTAGG
AATAACTTA
TAACATTGG
ACAGAAATG
TCACAATGT
AGCTTGCCT
TCCGGAGAC
AAACAAACG
GTTGATTTG
GCTTTACGG
TGAGGGACC
ACCTTCTTG
TAACACATC
ATGAAAACC
AATAAGACG
TAAAAAATG
TTATCCTAA
TCTTTAAAT
GATTTCCAT
AATTGGAAA
ATATACAAG
AAAGCCAAT
CTTACTACA
AACGACATC
TGTTACTTT
TAAGAATGA
GATGAAGAC
TTCAAAAAC
AAATCAAAC
GAAAACCGT
ACAAAAACC
AGAAGTGAA
TGGAAATAA
TGCATTACC
CAAAATGCA
TAATGCACC
CTTCAGGTA
CCTTCCCAA
CAATCCTAA
GACCGCGTT
ATAACATTT
TCCATTTGT
ATGAAGCAA
TCTACTATC
GTTATTAAT
TCCTGGAGT
GCAAAAGCA
AACCAACCC
CAATTTTCA
ATTTTGACA
ATCTGTATC
ATTGAATAT
GGGAAAGAA
AGCCTTGTT
CATGCGGCC
CCTCCGGGA
AGCTGTAGT
TCATTCTCC
CTGCGGCTA
TCTGAAGGG
ACCCTCCAG
AATATTTGG
TCCATCCTT
TAGTTCTAG
TTGACACCA
AAGTTCATT
AACCCCAAC
TGCCATGAC
CTTAAATTC
ATGTCCCAA
TCAAAATCT
AATATCATC
ACAATCCTG
TGCTTTTCC
CTCCAAAAA
GTTTGCTCA
AATACCTTC
TAGGTAGAG
TCAATTGTT
CAGTCAAAT
CCATTGTCA
TATTCTTTC
GCAATGGTT
TATGCATGA
TTTAATTTC
AATACGCTT
AACCTGATG
ACCAGGACC
AGTTGGTAA
TCGGTAATT
TGGTGAATA
TGGACACGA
TTAAGACCA
ATTAATAAC
CCCAAGTAG
TCATGGTAC
ACTTCCTTC
ACAAATACG
GATACTCCT
GTCGGTATT
CATACCATA
CCATTCCCT
TGGAAATAA
GGTAGATTG
TGAGACACT
CTCGTTATT
GTAATGTAG
GATAATAAT
CGTTAATAA
TTAATATTT
AAATGCGTG
TGATATTGA
TTTGCTGAG
CAATATAAA
GTCGATTTT
CTTTAGAGA
ATGTGCTCT
CCTGGGACA
TAATAATGT
TGTAGAGAG
CGGACCTAA
TGATATTTT
TTCTCAACA
CAACGAATC
AGTAAACAG
TTTTCGCCA
TAAAAAGTT
TATGCGTTT
TATGTGGGA
CAACAATCT
GATTCCACC
TACATGATT
GGTTGTTCG
ACATTTTAT
ATCACTCAA
AAAAAGATA
AATGCTCAA
CATTCTAGA
TAGCTGTGA
AGAGCCTAA
GTTGGCGGC
CACGTTTCA
ACTATTGAA
AAAGATTAC
CCCATTTCT
GAAGAAATA
ATAAAAGAG
GGGACAAGA
GATAAACTG
TCGAATTAA
TTTAAAGGA
GATAAAAGA
ACACTTCAT
ATATGCGTG
ACTTAAGAT
CATATGTCA
AAGAGCAAA
ATCTTCTTT
ACCTGGAAC
GGTATTCAA
ACAACTATA
GGTGATCAA
CTTTGTTCA
ATACCTTGG
AATAGCCTG
CGGAATAGG
GATGTTGGT
ATTATTAGC
GTTCATTCT
TAGAACAAG
TAGCTTAAT
TTGGCAATT
GCCAAAACT
TGCAGAGAT
GAATCAAAT
ACTTTAATT
TACCACAGT
CGATGACTT
AAGTTGATC
TGCAAATAT
CTTTTGTTA
ACTTTAATT
AATGTTGGG
ATACACCTC
TTGGGCAAA
AAAAATAGT
ACTCAACTT
CGAAAACCA
AAAAAATGC
ACCCAACCC
TCGATCTTA
ATCTATCAA
TGTAAAACA
TCACTTTTT
ATCCTACCG
AAGTACAGA
ATTATGAAA
CGAATATAA
AGGTATCTC
GTCTCAACA
TCTCTGTTG
ATCGTTGGC
GTGGATACA
CAGGAAAAG
ATGAATCGG
ACTTCACCA
TCAGGGTTT
TAAGAAATC
TTGCATTTG
GCAGATGGA
CTGTCGAAC
CTTCCTAGC
CCTGTTGGA
AAGATGCTT
CTTAAACCT
AGAGGAAAG
AATTGTTCA
GATTTTGAA
TAGCGAAAA
ACCTACATT
GATTTTTAC
TTTCTCACA
AACCGGACA
AGCCAATTA
GTTGAAAAT
TCGCAAAAT
CACGGTAAG
TGATAACTA
TAATAAAAC
GACTTCCAA
GATGGTCTT
TTCGCTGGA
GGCAAGGTG
TTTCAATGC
AATTTCTTT
AACTATATT
GACATCTGG
ACGTCAACC
ACCTTCACT
ACAGTTTAG
ACAATTTCT
AATGCACCA
GGTTGTGGC
AAGAACAAG
AAGAACCCT
CTCAGAATC
AAGAGTATA
TGCGAACTT
AAAGAACAA
AAAACACTG
TTAGAGCAT
CGCAGGGGA
AGGGGCGCA
ACAAAAAAA
AACAAATAA
TTTTTTTTT
CAAACAAGA
AAGCTCGCT
GATAGTCTA
CTATTGCAA
CCACTGACG
ATCCTGACT
AGGCGTTAA
TCGCCAATG
ACATATTCA
AAGCAGAAT
AATAAGACA
TTATCGTCA
AGTTCAAAA
ATATTGATT
ATTAACCCT
ATAAAAGCG
CAATTGGTA
GCACTTTTC
TAGGCTCTG
GAAGAGCCA
TGCCGTTGC
CACATGTAG
AATGCTACT
CTACGGTCA
TGGAATACA
TCTTTGCAA
CTCTGACGC
TTTCTCCAC
TTGGGATGT
CGAAAAGCA
AGAGTAATT
AACGAACCT
CAAGCACAC
TGATTGCCA
GACTCTTAT
ACACGGTGA
TTGAGGAGG
TTGAACGTC
TTTTGCATG
ACGCTTATA
GACTATGAC
GAACAACAA
TAGACTACT
GGTAGATCC
TATTGCCAC
ACAGATGCT
GCATTCATT
TGACTCTTT
TGGACATAT
TTGATTATT
AAAAGAAAA
TCACAGCCT
TGTGATATA
TGAAGCCCG
TACTCTGCA
CTTATTTGG
GGTTTTTGG
CATTTCTCT
AGTTGGCCA
CCTATTTTT
AATGAGCCG
CAAACTCTG
TCTTTGGCT
TAACAGAGA
AACAAATCG
AAGTGGTCT
TTTGTTGGA
AACAAGAGG
TCTTTTTTG
CACTGTATT
TGATTTTTG
TTTATGGAA
GCTGGGTTC
TATATCCTT
TTGATCGGC
GCCTATTAT
ATCCAATTT
ATTCAATTA
GGCCGATAT
TTATTGTTG
TAATACAAC
ATTCATTTT
AGACTTATA
ACACATATA
TTTGCACCC
AATATCGAT
AATATTCTA
CCAGTATTT
GGCAGTTGA
TTTCAAAAC
TCATTTGGA
ATCAACTTG
ATTCATCAG
CCAATAGAA
GACGGAATA
TATTAGAGG
CTGGGTATA
AGGATTATC
CAGTGAGCA
GTTTCTAAC
TGAAGTTCT
CACGAGAAA
TGCACAGCC
ATCCGATCT
CACTCACAT
ATTCTATCA
AAAATATTC
CAAGCGGGC
TTATTTATA
TGAATGGTC
ATGTGGACT
CCTAAAAGA
TGACAAATA
GTTGCCCAA
TTGACCAAA
AACATAAAC
TACACAAAA
AAATAGTAT
TGGCGCAAA
CAGATGATT
ACAACAACA
CTCCACCCC
ACTTCTACC
TGGTCAAGT
CTCAGTTAC
CAGGCCATA
ACAACAACA
CACAAACTC
CAGCAGCAA
GCATCATGT
AGCAGCATC
CAGCAACAG
GCAGCAGCA
AAGTTAGAT
GGCCAACTT
TCAATACGA
ACAAAAAAG
GATAAAATT
GTTTAGCAT
ATACACTGA
ACAAGCACT
CTCAGGGTA
AAGTAGAAG
TATAAACAG
GGAGTTCGA
GGAACAAAA
TTGCGAGAT
TATTTGTCA
ATATAGAGT
ATCAAGCTG
GTGGGACAT
TGTGTCAAG
TCCATAAGA
TTACAATTT
TGCTCCCAA
AAAATTTTT
ATTGGATAA
GATCTAATA
ACATCTATG
GTTGCCACC
CTTTCAGGA
GGCCCTTCT
CAGGCCAGA
ATATTCCGG
AATACAAAA
CAATGCAAT
ACATTCGCG
CACACTGTT
TGGGGCAGC
CAGTAGCAC
GGTAGCAGT
ATAAAATAT
CGTGTTATA
GTACATAAC
GAGAATAAC
AGAACTACT
CTGATGGCA
GGCGTAGAA
GGACGAGGG
CACACCAGC
CATTTTAAT
GGATATACA
CAAAACCAG
CCTACATAC
GGATTTGAA
TTCCTGTAG
AGTTTTCAG
CGCAGCAAA
ATGGTTATT
AAAAGCTTA
TCGTCTAAA
ATCACGGTC
GTGGCATTT
TCAAGTCAA
CATAAGCCA
GTGATCGGC
TATTGTACA
AGATAGTGA
GTAGCACCT
AAAACAATT
TTGTTTTCA
CTAAATGCA
TGGCGAATC
CCAATCTAA
CCACGATAA
TCGTACTAC
TATCATCGA
ACACTTTCT
ACTTAGTTC
AGCCAAGAA
GGACATCCG
TATCAATAC
GCAGCCTTG
GCACCGGCT
TTTGGTAGC
CTACTTTGG
TGGCTTCGA
TCATTGTTC
CAGGAATTC
ATAGAGAAA
TTTGAGAAT
GAGTTTCTA
AAAATGTAA
AAAGTGTAG
GGTAATCGG
AGTAAGAAG
ATGTAAAAA
GTTGTATAG
GAAAGCATA
TCCATTACT
TCTCTTTTT
GAACCGAAT
CTGCTTGTA
AGTTCATAA
TTTTCCAGT
CTGGATAAT
CGTAATTGA
AAAACAGGA
TGATTAAGT
AAATTTGTG
GTATTTTTT
GCGAGCGGA
AATATATCA
ATGCATTAT
CTGTTGGTT
TTTCACATA
CTGTTTCTT
CTCCTTGTT
CTTTTCTTC
CGAATAGCG
CATTTTTAG
ACGTACCAT
GATAGATTA
TGTGTGGCA
TGTGTGGCT
AGAAATATA
CACAGTATT
GTAGTAAAT
AATCTAGTA
AGTATTGAA
TGAGGACTT
GATGGATTA
GACGGAACC
TCAGATGAG
CATCTTTTC
AACTGCCTT
TGGTTTCTC
GCATAGGAG
GTTATTCCA
TTTGGGATT
CGAGCATTG
ATTAGTTCC
TCGTCAAAA
TAGATGTTA
CTTTACCTG
TTCTGTGCT
TATTGCACG
GTCAATTCC
TTTTGCCAG
TACTTGGAG
CTATTTACT
CAACTGTCT
GTAACTTTT
GGTCTATTT
GACCTTGTT
CGACATCAA
GCAATTTCA
TAATTTGAA
AGCTTAGTG
AACACAGTC
GTCTACATT
ATCTGGCGA
GACCGACTC
ACACTAAAC
GACAGTGCT
CTCTGTAAA
ATGTGGCTG
AGAAAACTT
AGTGCACTT
TTCTTATAG
GGAATTTGA
AAGCGATAA
TTCTACCTG
TGTGAAAAA
AATGTGTTG
ATTGTAGAA
ATATTAGCT
AAAATAAAT
GACTGAATA
CAGAATACC
CTTCACAAT
ATTTGGGGT
CAGCGTATG
ATCAAAAAC
TTTTCCTAT
CTGATTTAG
ATGTCATAC
CTCCTTTAT
TTTGTATTG
GCTGAAGTT
TATCATTGC
TGGGTATAC
GTTGCTGGC
TCCGGCTCT
ATAAGGTTG
GCCGTTTTT
GTGTGGTAC
CAAAGGTAG
AGAAATGCC
AAGAAACAA
CCTCGGGCT
TCTAATATG
ACACATCGC
TCCCTGACC
TTTTTTCAC
AGCAAAATG
GCGTTCTAT
AAAGCGACA
TTCTTACAA
TCTCATTTA
GGTATATAT
GGCTTTCCC
TGAACCCAA
TTACCTAAT
AGCCCCAGA
ACTCAAGAG
GTCATAGTC
GCATTATGA
AACTTATAA
GAATGGAAA
TTCAGCAAC
GAGAAACAT
CAAGTTGCT
AAAAGCTGT
GAATTATAT
ACTACAAAT
TTTTCACGT
ACAGCCGTA
ACTGGGACA
ATGGGACGT
TTTTAGTTA
AAATAGCTG
AATAAATTT
TCAGTAGTT
TGAGCCTAT
AATGCATTT
TTTTTTTGA
TGTCTCTCC
AAAATACTA
TAATCCTTC
GATATATAT
ATGTAGGCT
TTATTGTTA
TATTTCTAT
GAATCCATC
TTTTGAAAT
TTTCTAAAA
TAGGCGCCA
TGGCATAAA
TGCTTCCAG
AAGCCGGAA
AGTGGTAAA
GCGAGTGTC
TTGGTCTCC
ATGTTTGAG
AGGCTGGGT
GAATCCCGT
TGGCTTGGA
ACACCAATG
ATGGTCGAG
ATTGCTGAC
CTATTCATG
CACACAGGG
GAAAAGAAG
CTGAGTGCT
GAAAAGAGG
CTCTACCGA
TGTACAATC
TATTTGCGT
TTGTAGCGG
GTTCTGGAT
AGCAATGAC
TAAAATGAA
GTGAAATTT
CTTGAGGCA
AATGTCCTG
TCAAATGTG
TTTAATCTG
GAGCAAAAC
CTATAGATG
TGGCCACAA
TATTTACTT
GATGGAGCG
GAAGTGGGA
CATAATATT
GTGAAAAAA
CAATTTGTT
ATTTTCCAG
CTGCCTACA
CCGTTATCT
CATCATGGT
AGTCAATAT
AAAACTGGT
TATTTTTAA
TTTCTGGGT
CCAGTCCCG
CACTGGTAC
TTAGTACCA
ATCCAAAAT
TGGAATCAC
TGGAAAAGC
ATTACGGTA
TATCGTATT
TCAAATCAG
TTCGATAAA
AACTGTTAG
CTGAAGGAA
GAAAAAGGT
TAAGCGGGT
ACTGTCGTT
GAACAAGGA
AGTTTATGC
ACTTGTTAC
GATGGAGCC
TATTCGTTC
TTGTCGAAG
GTTGTTTTT
AACGATTGG
CTGATGTAG
ACTGTAAGT
TTTTACTTA
ACTTTCATA
CTCCCTGTA
CAGGTACTG
TTTTTTGAC
TTTAATATG
GTAATTGCA
GTTTTAAAT
CTACCTAAT
GTCATTTGG
TATGATACC
AATAACACC
CATAAACCA
AGGAATACC
CAATTGAAA
TTTTTGATA
ACCACCATA
TGTTAGTTT
GCAACGTCA
TTGGAGAAC
TTTCGTACA
TGAGCATGA
CAATAAGGG
GTTTCGTTG
ACTTCCTGG
TGCCTTATT
TGCCCTCGT
ATATCATCA
CAACTTTAG
AGAAAAAGA
GATACGGCA
ACCCTTCCA
AAACACCAA
ACTTCAAGG
GCCTGCCAA
CACTCCAAC
CCAATTGTA
TGCAGTAGC
TAGTAAGCA
ATGTTGTTC
CAAGAACTC
ATCTAGAAG
ATGTTAAAG
GTCAAATTG
GATTAGATA
TGACAATTC
TATATATAA
TTGGAGATG
AGTTAATCT
CTAGTATTG
TGTCATATG
CTTAAAGCC
TAAGGGCCC
AGAAAAAGA
GCCGTTTTG
GGGTGAAAC
GATGCATCG
GATTCCGCT
GAACAAAAA
TCTCTATCA
CTTGAGAAA
ATACTATTA
TGAGATTCA
CTGTGAATT
TTTCAACAG
TCAGCGGTG
AACGAAAAA
ACTGGCAGG
TTTCCGTGG
AATTGTGTG
AATAGATAA
AAGGATACG
TAAAAAAAT
AAAGAGCTC
TTTGTATAA
ATATTGTTC
AAGACAGAG
TTTGAGAAC
AAAACCTGG
TTCCGTGTT
GCGCAATTT
ATAGATTAA
AAACACTAG
GAAGATATT
TTGTCGTGT
GTATTGAGC
GGCTCAAAG
AATGTTTAT
AGGTTCCTA
CTATATGTT
GGACGAAGA
CAGCAGCCA
TTTTCGTTT
ACAATTTGA
ATTGCTTGC
AGACTTTGT
TGAAAAAGC
AGGTGTATT
CATTGTGTT
CGTAACGGA
TATTTACTG
ACTAGCGGT
TCACACAGC
TTTCATTTT
CAGATGAAT
GGTCGAAAT
ACCTGTATG
GCCAATGCA
GGAGGCTTG
AACATTGCA
GCTCTAATC
CAAAGATGA
TATACGAGA
CTTTTCGAG
CTGCCTTAC
ATACAGTTA
TTTGTGGCA
AGCGAATTT
AAGCACAGA
AAAAAAAAA
TATAAAAAT
GTACTTCTT
CATTTAAAT
AAAAACTTC
AAAATAAAC
ACGCCGTAT
GGTGTTTCG
CTTTAACAT
ACTTTAGTC
ATTTATCTC
CCCAAGCTA
GCACCCCAA
AACTACAAC
TGGTTCTTA
GGTGCAATA
ACTACCCAT
TGAAGAACA
CTGCCACAA
AAGACAATA
CAGCTTTTT
GAGCATTGA
AATACCATC
GCTCCTTTT
AATTCTTTC
CGCTTGATC
CAAAAAAAA
AAAGGTAGC
TTTCATAAT
AATAAGTCG
TAAGAAACG
CTGTCCCAC
TGAAAGCCG
ATGTAATCT
CATGTAGCA
CTCCTGTAT
GCATAGAAA
TGTGGAAAC
CTGTCATGA
TGCATAGCT
TATTAGTGA
TCTTACCTT
CCATTCTCG
TATTAATGA
TCTTATTGT
ATATTGTGT
GGATGAAAT
CTTCTATCT
TTTAAACAC
CCACAAAAA
ACACATGAA
CCCTGAGTA
AGTAAGTTG
CGCTTTTAT
TAAACACGG
CGGACCCCA
TCTTTTCTT
GATCGTGGG
CTTCTTTCA
TCCATTAAT
TTTTGATAA
TGACTATTT
ACAATCTAT
CTGGGGTGA
TTGGCGTTG
GATATGGGG
TACCAACGA
TGAAATTCA
TGGTTCAAA
CTTCTGGAG
CAAACAATT
ACTACAAAT
GAATTGGGA
GATTTTGGC
TTGTATTCG
CTCGAAATT
ATGAATATC
GGTAGAGAA
TTTATACAC
CGCACGTTG
TTCACCTTG
TAACGGTAC
CCCGGTCAA
TCTGGTAAG
TGTCTATCA
TTGAAAAGT
AAAAGTTTT
CGCCCTACT
ATAAGCCCA
TTGAATGAA
TGATGACTC
AATATAAGG
GACAGTGAC
GTTTGCTGC
GAGAAGGTG
GTTTCCTCC
ATAAAATTA
ATGATTTTT
GATAACGTA
TGTTTTTCT
TGTGAATTC
CGGATGAAA
TCTTGCTAA
AAGGACTAG
CCCACAGTA
TTTATGATT
TATGTAATC
GCCGGCTTA
CCCGCCTTT
ATAATCCAT
TAAGAATCT
ATATATAAA
CCTTTGAGA
TTGAGCTAT
CCTATAATC
CCTGGAAGA
TAAAAGGGA
CTCTATCAA
GAAGTTCTG
ATGAATAGA
GCGCTGGTG
ACTTATTAA
CAGCTTGAT
ACCTCGAAT
GACTGTAGG
TTTCTATTT
AGAGCACAA
TTTTGGCTT
TAAAGGGAT
TTGGAAATG
CGGGACCTA
TGAATAATG
AGATGGGTG
TTCATATAA
CATTTCACT
ATACAATGG
GCTACTGCT
CTTGGTTGA
AATACTACT
ATCGCTGAA
TATTGCCCC
CCAGCAGAT
TACACTATC
ACCTTAAGA
GTATAAATA
TCAATCGTG
TCTTCCTTT
CATCAATAT
CCGGTTGAT
TAACCATTT
TTTTTTTTT
TGTCAAATT
GAGGGTTTC
TCCTTGATT
TCCGATTGT
CTGCGGTAT
TAACCTTGC
ATAGCATCA
TGGTGGCAC
TGGTTGTAA
ACTACAAAA
CACCTCACT
CATTCAATG
AAGAAGTGG
TTCATTCTT
CAATTTCGT
GACAAGAAC
TTGGAAACC
GTAATAGAA
AGGAATGGT
AAGCTTAAA
CAGGGCTCC
TCTGTAAAA
AAATGACTT
GAAGGGTTG
TACTTAGTA
TGCAACAAC
TCTCTTTGC
AGTCCACAA
TGAAACTAT
TAAGTGGTA
ATTTCATAA
AACAATCTT
TCTCATTTT
CGAGGGGTT
AGCACAGCA
TCAGTAACC
AAAGAAACT
ATCTAGCCA
GGTACATCA
CAATGTCAC
AAGCGTAGA
ACGTAGCTG
GACATGAAG
GATACCATG
TCAAAGCAA
GGGTAATTA
GCAAACAAA
CGTTTTAAT
GGTGAAGTA
TATGGAATA
GATACCATG
TGAAGGATA
GTAATATTG
AAGTGGTAT
CGAATGAGA
AATGGCACA
AGTGCATTT
AAAGTAGGG
GACATATCA
TGGTGGTAT
TGTTAACGT
TGGTGGATG
GGTAATTGG
GAGATGATG
CGAGTGGGG
GGGTTAGAA
TGTGGTGTG
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cut -c 2-10 chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1PchrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1PchrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[1P chrII_seq.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[Khead chrII_seq.fa 
AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGA
TGTTCAACCAAAAGCTACTTACTACCTTTATTTTATGTTTACTTTTTATA
GGTTGTCTTTTTATCCCACTTCTTCGCACTTGTCTCTCGCTACTGCCGTG
CAACAAACACTAAATCAAAACAATGAAATACTACTACATCAAAACGCATT
TTCCCTAGAAAAAAAATTTTCTTACAATATACTATACTACACAATACATA
ATCACTGACTTTCGTAACAACAATTTCCTTCACTCTCCAACTTCTCTGCT
CGAATCTCTACATAGTAATATTATATCAAATCTACCGTCTGGAACATCAT
CGCTATCCAGCTCTTTGTGAACCGCTACCATCAGCATGTACAGTGGTACC
CTCGTGTTATCTGCAGCGAGAACTTCAACGTTTGCCAAATCAAGCCAATG
TGGTAACAACCACATCTCCGAAATCTGCTCCAAAAGATATTCCAGTTTCT
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cut [K[K[K[Khead -1 chrII_seq.fa | we[Kc
      1       1      51
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ head -1 chrII_seq.fa | wc[1P[1@2
      2       2     102
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_seq.fa 
16264 chrII_seq.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ sed -n '9092,9312 p' chrII.[K_seq.fa > chrII_lys2.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ head chrII_lys2.fa 
TGATACCTATAGACAATCAAATCAACCATGCAGTCGACCAGATCATCCCA
CTATGGTTGTTGTCTATTTCATATCGGTGTCGGCATTTTTTTTTCCCGTA
GTACCACTGGATCTGCCTAAATCGCGCTTCAGGAAAACCAGGGACCACCC
TATTTTTTTATATTTCATCATCTAAATTAAGTGTATACATATATGGATAA
AGTCATTTTGAGTTTACATAATCGTATGTTCGAGAGAGGTCTTTCATAAA
AAAATCAAGTTATCAACCAGCATGGGATTTTGGGAGAACAACAAAGATTC
CATCACTTCAGGGCTGAAGAGCGCCGGTAAATATGGTTACCAAGGAACAA
AGTACGTTGCCAAGACAGGGTATAAGGCAAGTAAGAAGCACTATAACAAC
AGCAAAGCGCGTAGGGAAAGGAAGAGTGGTAAGAAAAATTCAAGTGATGA
GGAGTATGATAGCGAAGATGAGATGGAGTACGAAAGAAAGCCGACCGATA
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ sed -n '5069,5226 p' chrII_seq.fa > chrII_ty1.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ cat Ch[K[KchrII_lys2.fa chrII_ty1.fa > chrII_lys_ty.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_lys_ty.fa 
379 chrII_lys_ty.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_lys.f[K[K2.fa 
221 chrII_lys2.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_lys2.fa [K[K[K[K[K[K[K[Kty1.fa 
158 chrII_ty1.fa
]0;amv69@login0b:~/Lys2(rnaseq) [amv69@n440 Lys2]$ wc -l chrII_ty1.fa [1@lys2[C[C[C[C[2@_ty[C[C[C[C[2P2[C[C[C[C[1Pty1[C[C[C[C[Kexit
exit
]0;amv69@login0b:~(base) [amv69@login0b ~]$ su[Krun -n 1 -t 2:00:00 --pty bash
]0;amv69@login0b:~[?1034h(base) [amv69@n444 ~]$ conda activate rnaseq
]0;amv69@login0b:~(rnaseq) [amv69@n444 ~]$ speeds[K[K[K[K[K[Kconda activate rnaseqexit[Kwc -l chrII_ty1.fa [1@lys2[C[C[C[C[2@_ty[C[C[C[Ccat chrII_lys2.fa chrII_ty1.fa > chrII_lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csed -n '5069,5226 p' chrII_seq.fa > chrII_ty1.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat chrII_lys2.fa chrII_ty1.fa > chrII_lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csed -n '5069,5226 p' chrII_seq.fa > chrII_ty1.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[29Phead chrII_lys2.fa sed -n '9092,9312 p' chrII_seq.fa > chrII_lys2.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[30Pwc -l chrII_seq.fa head -2 chrII_seq.fa | wc1[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7PchrII_seq.fa cut -c 2-10 chrII_seq.fa[9@469748-473926[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[17Pwc chrII_seq.fa [2P-l chrII.fa_seq.fa [1Phead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5P.farm chrII_lys2.fa [6@grep "A"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -hal[Khead chrII_lys2.fa [31@cut -c 469748-473926 chrII_seq.fa >[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kjobsrm chrII_lys2.fa [2@more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctail[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@wc -[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[29@cut -c469748-473926 chrII_seq.fa >[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[26Ptail -500 chrII_seq[C[C[C[C[5P[C[C[C[C[C[C[C[C[C[C[C[C[Cgrep -v "^>" chrII.fa > chrII_seq.fa[8P| head[2Pwc[13Phead chrII.fa[5Pcd Lys2/ls[C[C[C[C[C[C[3Pcd ..speedseq align -i -m 10 -c 50 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII..fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &[1P[1P[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CI [1@~[1@_[1@l[1@y[1@s[1@_[1@t[4@y.fa[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_l[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_t[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.f[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.fa[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.fa [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.fa ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.fa ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[Krm -rf lysT[K2Test/*
]0;amv69@login0b:~(rnaseq) [amv69@n444 ~]$ cd lys2Test/
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ cd lys2Test/rm -rf lys2Test/*conda activate rnaseqexit[Kwc -l chrII_ty1.fa [1@lys2[C[C[C[C[2@_ty[C[C[C[Ccat chrII_lys2.fa chrII_ty1.fa > chrII_lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csed -n '5069,5226 p' chrII_seq.fa > chrII_ty1.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[29Phead chrII_lys2.fa sed -n '9092,9312 p' chrII_seq.fa > chrII_lys2.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[30Pwc -l chrII_seq.fa head -2 chrII_seq.fa | wc1[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7PchrII_seq.fa cut -c 2-10 chrII_seq.fa[9@469748-473926[C[C[C[C[C[C[C[C[C[C[C[C[C[17Pwc chrII_seq.fa [2P-l chrII.fa_seq.fa [1Phead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5P.farm chrII_lys2.fa [6@grep "A"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -hal[Khead chrII_lys2.fa [31@cut -c 469748-473926 chrII_seq.fa >[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kjobsrm chrII_lys2.fa [2@more[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctail[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@wc -[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[29@cut -c469748-473926 chrII_seq.fa >[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[26Ptail -500 chrII_seq[C[C[C[C[5P[C[C[C[C[C[C[C[C[C[C[C[C[Cgrep -v "^>" chrII.fa > chrII_seq.fa[8P| head[2Pwc[13Phead chrII.fa[5Pcd Lys2/ls[C[C[C[C[C[C[3Pcd ..speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_tty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
[1] 5658
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Warning: Reference file not indexed with BWA. Indexing now...
[bwa_index] Pack FASTA... [bns_fasta2bntseq] Failed to allocate 0 bytes at bntseq.c line 270: Success

]0;amv69@login0b:~/lys2Test[1]+  Exit 1                  speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
(rnaseq) [amv69@n444 lys2Test]$ jobs
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ jobsspeedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_tty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &[K[K
Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Warning: Reference file not indexed with BWA. Indexing now...
[bwa_index] Pack FASTA... [bns_fasta2bntseq] Failed to allocate 0 bytes at bntseq.c line 270: Success
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ ailed to allocate 0 bytes at bntseq.c[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ksametools faidx[1P[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII_lys_ty.fa
[E::fai_build_core] Format error, unexpected "T" at line 1
[faidx] Could not build fai index /ihome/ckaplan/amv69/Lys2/chrII_lys_ty.fa.fai
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ cat echo">chrII" ~/[K[K?[K~/Lys2/chrII_lys_ty.fa > new.fa
cat: echo>chrII: No such file or directory
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ cat echo">chrII" ~/Lys2/chrII_lys_ty.fa > new.fa[1P[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvi header[K[K[K[K[K[Kname
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"name" [New File][>c[2;1H[1m[34m~                                                                                                         [3;1H~                                                                                                         [4;1H~                                                                                                         [5;1H~                                                                                                         [6;1H~                                                                                                         [7;1H~                                                                                                         [8;1H~                                                                                                         [9;1H~                                                                                                         [10;1H~                                                                                                         [11;1H~                                                                                                         [12;1H~                                                                                                         [13;1H~                                                                                                         [14;1H~                                                                                                         [15;1H~                                                                                                         [16;1H~                                                                                                         [17;1H~                                                                                                         [18;1H~                                                                                                         [19;1H~                                                                                                         [20;1H~                                                                                                         [21;1H~                                                                                                         [22;1H~                                                                                                         [23;1H~                                                                                                         [24;1H~                                                                                                         [25;1H~                                                                                                         [26;1H~                                                                                                         [27;1H~                                                                                                         [28;1H~                                                                                                         [29;1H~                                                                                                         [30;1H~                                                                                                         [m[31;89H0,0-1[9CAll[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;1H[1m-- INSERT --[m[31;13H[K[31;89H0,1[11CAll[1;1H[?12l[?25h[?25l>[31;89H1,2[1;2H[?12l[?25h[?25lc[31;91H3[1;3H[?12l[?25h[?25lh[31;91H4[1;4H[?12l[?25h[?25lr[31;91H5[1;5H[?12l[?25h[?25lI[31;91H6[1;6H[?12l[?25h[?25lI[31;91H7[1;7H[?12l[?25h[31;1H[K[1;6H[?25l[31;89H1,6[11CAll[1;6H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"name" [New] 1L, 7C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ cat name ~/l[KLys2/chrII_lys_ty.fa > new.fa
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ head new.fa 
>chrII
TGATACCTATAGACAATCAAATCAACCATGCAGTCGACCAGATCATCCCA
CTATGGTTGTTGTCTATTTCATATCGGTGTCGGCATTTTTTTTTCCCGTA
GTACCACTGGATCTGCCTAAATCGCGCTTCAGGAAAACCAGGGACCACCC
TATTTTTTTATATTTCATCATCTAAATTAAGTGTATACATATATGGATAA
AGTCATTTTGAGTTTACATAATCGTATGTTCGAGAGAGGTCTTTCATAAA
AAAATCAAGTTATCAACCAGCATGGGATTTTGGGAGAACAACAAAGATTC
CATCACTTCAGGGCTGAAGAGCGCCGGTAAATATGGTTACCAAGGAACAA
AGTACGTTGCCAAGACAGGGTATAAGGCAAGTAAGAAGCACTATAACAAC
AGCAAAGCGCGTAGGGAAAGGAAGAGTGGTAAGAAAAATTCAAGTGATGA
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ head new.fa cat name ~/Lys2/chrII_lys_ty.fa > new.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvi name[Kcat echo">chrII" ~/Lys2/chrII_lys_ty.fa > new.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Psamtools faidx ~/Lys2/chrII_lys_ty.fa
[E::fai_build_core] Format error, unexpected "T" at line 1
[faidx] Could not build fai index /ihome/ckaplan/amv69/Lys2/chrII_lys_ty.fa.fai
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ samtools faidx ~/Lys2/chrII_lys_ty.fa[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Knew.fa 
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ samtools faidx new.fa ~/Lys2/chrII_lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead new.fa [Kcat name ~/Lys2/chrII_lys_ty.fa > new.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvi name[Kcat echo">chrII" ~/Lys2/chrII_lys_ty.fa > new.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Psamtools faidx ~/Lys2/chrII_lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpeedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_tty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjobs[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_tty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Warning: Reference file not indexed with BWA. Indexing now...
[bwa_index] Pack FASTA... [bns_fasta2bntseq] Failed to allocate 0 bytes at bntseq.c line 270: Success
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII_lys_tty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[1P[1P[1P[1P[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/l[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2-[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2-1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2-17[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2-173[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2-173R[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/lys2-173R2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn ~/Lys2/lys2-173R[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce ~/Lys2/lys2-173[1@R[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cw ~/Lys2/lys2-17[1@3[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.fa ~/Lys2/lys2[3@-17[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Warning: Reference file not indexed with BWA. Indexing now...
[bwa_index] Pack FASTA... 0.00 sec
[bwa_index] Construct BWT for the packed sequence...
[bwa_index] 0.00 seconds elapse.
[bwa_index] Update BWT... 0.00 sec
[bwa_index] Pack forward-only FASTA... 0.00 sec
[bwa_index] Construct SA from BWT and Occ... 0.00 sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa index new.fa
[main] Real time: 0.035 sec; CPU: 0.009 sec
Done
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/full lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' new.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin
  
 ^Z
[1]+  Stopped                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ bg
[1]+ speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ jobs
[1]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ jobs
[1]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ jobs
[1]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 544, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.49, 81.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.731 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 513, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 160, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 451)
[M::mem_pestat] mean and std.dev: (175.84, 81.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 563)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.726 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 547, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.38, 79.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.717 CPU sec, 3.717 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 501, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (168.22, 78.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.729 CPU sec, 3.729 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 501, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 456)
[M::mem_pestat] mean and std.dev: (173.17, 80.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 570)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.734 CPU sec, 3.735 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 545, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 163, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 441)
[M::mem_pestat] mean and std.dev: (174.37, 76.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 550)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 512, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 156, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 402)
[M::mem_pestat] mean and std.dev: (168.48, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 497)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.782 CPU sec, 3.782 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 565, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 149, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (162.95, 70.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 495)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.759 CPU sec, 3.759 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 513, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.30, 77.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.719 CPU sec, 3.719 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 571, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.92, 78.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.705 CPU sec, 3.705 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 545, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (170.05, 77.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.731 CPU sec, 3.731 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 539, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (168.06, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 518)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.715 CPU sec, 3.715 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 530, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (172.15, 77.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.722 CPU sec, 3.722 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 505, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 149, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (160.01, 72.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 575, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.51, 77.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 566, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (167.18, 77.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.726 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 533, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 151, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (163.44, 71.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 508)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.738 CPU sec, 3.739 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 545, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 155, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 452)
[M::mem_pestat] mean and std.dev: (169.08, 81.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 567)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.772 CPU sec, 3.772 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 530, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 154, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 446)
[M::mem_pestat] mean and std.dev: (169.07, 75.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 557)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.746 CPU sec, 3.746 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 538, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.97, 74.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.714 CPU sec, 3.714 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 559, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 154, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)
[M::mem_pestat] mean and std.dev: (168.47, 80.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 560)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 570, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.46, 78.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.727 CPU sec, 3.728 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 548, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 157, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 405)
[M::mem_pestat] mean and std.dev: (168.40, 71.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.719 CPU sec, 3.719 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 562, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (168.29, 74.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 509)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.728 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 524, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 450)
[M::mem_pestat] mean and std.dev: (173.82, 80.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 562)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.729 CPU sec, 3.729 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 550, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 405)
[M::mem_pestat] mean and std.dev: (164.63, 69.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 502)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 497, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 165, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 436)
[M::mem_pestat] mean and std.dev: (171.15, 79.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.710 CPU sec, 3.710 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 549, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 151, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 385)
[M::mem_pestat] mean and std.dev: (159.78, 71.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 476)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.732 CPU sec, 3.732 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 589, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 442)
[M::mem_pestat] mean and std.dev: (170.37, 79.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 551)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.716 CPU sec, 3.716 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 560, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 152, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (168.42, 79.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.710 CPU sec, 3.710 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 482, 2, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 152, 229)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 463)
[M::mem_pestat] mean and std.dev: (175.34, 88.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 580)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.722 CPU sec, 3.723 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 544, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (170.66, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 542)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.739 CPU sec, 3.739 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 152, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (168.89, 73.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 505)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.708 CPU sec, 3.708 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 556, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 166, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (176.53, 79.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.719 CPU sec, 3.720 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 567, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 154, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (163.75, 74.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.716 CPU sec, 3.716 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 510, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 159, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (173.71, 80.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.733 CPU sec, 3.733 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 563, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (166.57, 76.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 518)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 579, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (170.14, 76.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.758 CPU sec, 3.759 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 546, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 151, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)
[M::mem_pestat] mean and std.dev: (165.88, 79.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 561)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.728 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 552, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 149, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (164.91, 79.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.771 CPU sec, 3.771 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 506, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 150, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 404)
[M::mem_pestat] mean and std.dev: (160.40, 70.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.743 CPU sec, 3.745 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 550, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (120, 165, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (174.67, 75.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 504)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.711 CPU sec, 3.711 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 530, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 159, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 442)
[M::mem_pestat] mean and std.dev: (171.94, 76.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 550)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.725 CPU sec, 3.725 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 548, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.04, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.719 CPU sec, 3.719 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 523, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 159, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 442)
[M::mem_pestat] mean and std.dev: (172.37, 79.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 551)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.801 CPU sec, 3.801 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 529, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 161, 225)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (174.56, 79.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 552)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.749 CPU sec, 3.749 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 567, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.49, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.720 CPU sec, 3.720 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (169.71, 74.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 508)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.752 CPU sec, 3.752 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 548, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 152, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (163.97, 72.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.718 CPU sec, 3.718 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 567, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 202)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 382)
[M::mem_pestat] mean and std.dev: (160.12, 66.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 472)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.743 CPU sec, 5.269 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 546, 3, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 157, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 454)
[M::mem_pestat] mean and std.dev: (171.58, 82.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 569)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.729 CPU sec, 3.729 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 569, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 150, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 449)
[M::mem_pestat] mean and std.dev: (167.12, 81.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 564)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.708 CPU sec, 3.708 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 565, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 155, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)
[M::mem_pestat] mean and std.dev: (173.93, 79.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 557)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.724 CPU sec, 3.724 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 573, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.64, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.731 CPU sec, 3.731 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 522, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 162, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 404)
[M::mem_pestat] mean and std.dev: (168.32, 69.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 499)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.748 CPU sec, 3.748 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 476, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (167.82, 71.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 507)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.720 CPU sec, 3.720 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 525, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.720 CPU sec, 3.720 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 593, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 159, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 407)
[M::mem_pestat] mean and std.dev: (169.98, 71.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 503)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.728 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 577, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 153, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 451)
[M::mem_pestat] mean and std.dev: (169.79, 80.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 565)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.718 CPU sec, 3.718 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 549, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 159, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (169.04, 73.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.748 CPU sec, 3.748 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 538, 1, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.60, 74.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.713 CPU sec, 3.713 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 541, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 153, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 401)
[M::mem_pestat] mean and std.dev: (165.17, 73.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 497)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.732 CPU sec, 3.732 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 521, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (169.36, 77.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.716 CPU sec, 3.716 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 609, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 151, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 398)
[M::mem_pestat] mean and std.dev: (162.01, 69.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 494)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.732 CPU sec, 3.732 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 529, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 439)
[M::mem_pestat] mean and std.dev: (167.51, 76.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 548)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 521, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 152, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 409)
[M::mem_pestat] mean and std.dev: (164.73, 75.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 508)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.718 CPU sec, 3.718 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 540, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 153, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (164.68, 76.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.729 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 506, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 160, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 439)
[M::mem_pestat] mean and std.dev: (171.13, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.738 CPU sec, 3.738 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 506, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (170.92, 78.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.724 CPU sec, 3.724 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 560, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 152, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 400)
[M::mem_pestat] mean and std.dev: (162.56, 70.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 497)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.742 CPU sec, 3.742 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 575, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 152, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 406)
[M::mem_pestat] mean and std.dev: (167.23, 75.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 503)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.715 CPU sec, 3.715 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 549, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 155, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 394)
[M::mem_pestat] mean and std.dev: (169.00, 73.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 486)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.727 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 552, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 151, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (166.22, 79.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.758 CPU sec, 3.758 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 530, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.95, 78.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.742 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 533, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (168.43, 70.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 512)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.723 CPU sec, 3.723 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 541, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 162, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 440)
[M::mem_pestat] mean and std.dev: (172.38, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 548)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.724 CPU sec, 3.724 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 561, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 162, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 449)
[M::mem_pestat] mean and std.dev: (174.76, 81.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 562)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.724 CPU sec, 3.724 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 503, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 149, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (171.37, 79.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.726 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 555, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 158, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 460)
[M::mem_pestat] mean and std.dev: (170.51, 81.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.747 CPU sec, 3.747 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 561, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 162, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (166.29, 75.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 507)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.712 CPU sec, 3.712 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 546, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (165.03, 72.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.714 CPU sec, 3.714 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 566, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 165, 235)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 469)
[M::mem_pestat] mean and std.dev: (181.08, 87.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 586)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.724 CPU sec, 3.724 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 508, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 385)
[M::mem_pestat] mean and std.dev: (163.27, 70.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 476)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.716 CPU sec, 3.716 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 153, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 403)
[M::mem_pestat] mean and std.dev: (162.68, 71.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 553, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (167.77, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 506)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.722 CPU sec, 3.723 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 513, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 158, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 445)
[M::mem_pestat] mean and std.dev: (175.90, 80.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.717 CPU sec, 3.717 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 538, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 158, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 397)
[M::mem_pestat] mean and std.dev: (169.25, 72.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 490)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.742 CPU sec, 3.742 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 516, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.92, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.743 CPU sec, 3.743 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 536, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 159, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.05, 79.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 577, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 458)
[M::mem_pestat] mean and std.dev: (170.72, 80.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 574)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.743 CPU sec, 3.743 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 536, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.41, 73.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.751 CPU sec, 3.751 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 529, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 155, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (164.53, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 512)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.736 CPU sec, 3.736 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 507, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 152, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (161.92, 73.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 496)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.719 CPU sec, 3.719 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 510, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 150, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (166.66, 80.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.716 CPU sec, 3.716 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 521, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (172.50, 81.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 542)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.731 CPU sec, 3.731 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 541, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 151, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (165.67, 80.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.723 CPU sec, 3.723 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 518, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 148, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 403)
[M::mem_pestat] mean and std.dev: (160.10, 73.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.725 CPU sec, 3.725 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 574, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.25, 75.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.729 CPU sec, 3.729 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 594, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (165.14, 73.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.720 CPU sec, 3.720 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 555, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 163, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.88, 79.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.732 CPU sec, 3.732 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 531, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.70, 78.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 544)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.718 CPU sec, 3.718 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 477, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 151, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (165.88, 72.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.728 CPU sec, 3.728 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 559, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 149, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (160.21, 70.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 496)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.697 CPU sec, 3.697 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 504, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 162, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (172.77, 79.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.756 CPU sec, 3.756 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 561, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (166.65, 74.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 544, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (163.80, 70.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.715 CPU sec, 3.715 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 563, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 157, 228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 466)
[M::mem_pestat] mean and std.dev: (173.53, 82.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 585)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.718 CPU sec, 3.718 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 561, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 157, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (171.12, 78.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.751 CPU sec, 3.751 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 525, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 148, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 406)
[M::mem_pestat] mean and std.dev: (164.49, 73.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 504)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.722 CPU sec, 3.722 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 556, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 150, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (164.15, 72.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.767 CPU sec, 3.767 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 517, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 153, 230)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 470)
[M::mem_pestat] mean and std.dev: (172.75, 84.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 590)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.723 CPU sec, 3.723 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 518, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 403)
[M::mem_pestat] mean and std.dev: (164.45, 68.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 499)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 515, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 163, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (169.03, 75.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.702 CPU sec, 3.702 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 536, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 162, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (173.94, 74.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 584, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 152, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (165.85, 77.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.781 CPU sec, 3.781 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 548, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (166.50, 75.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 510)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.731 CPU sec, 3.731 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 535, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 152, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (164.65, 71.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 510)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.731 CPU sec, 3.731 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 540, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (168.95, 75.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.707 CPU sec, 3.707 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 567, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 152, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 450)
[M::mem_pestat] mean and std.dev: (170.03, 79.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 564)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.721 CPU sec, 3.721 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 543, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 436)
[M::mem_pestat] mean and std.dev: (170.08, 80.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.714 CPU sec, 3.715 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 548, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 162, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (174.75, 81.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.758 CPU sec, 3.759 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 538, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 152, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (167.52, 80.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.723 CPU sec, 3.723 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 522, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (120, 159, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (168.18, 70.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 492)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.731 CPU sec, 3.731 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 489, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 149, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (163.28, 80.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.727 CPU sec, 3.727 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 519, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.61, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.735 CPU sec, 3.736 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 588, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.87, 80.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.739 CPU sec, 3.740 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 561, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 407)
[M::mem_pestat] mean and std.dev: (166.99, 73.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 505)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.748 CPU sec, 3.748 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 153, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.30, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.726 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 537, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 156, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (166.50, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 518)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.726 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 564, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.05, 75.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 3.726 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 568, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 150, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (162.08, 72.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.713 CPU sec, 3.713 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 537, 2, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 162, 232)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 462)
[M::mem_pestat] mean and std.dev: (179.64, 85.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 577)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.730 CPU sec, 3.730 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 505, 5, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (167.18, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.746 CPU sec, 3.746 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 542, 1, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 150, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 402)
[M::mem_pestat] mean and std.dev: (163.04, 72.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 499)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.737 CPU sec, 3.742 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 566, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (166.64, 71.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 509)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.719 CPU sec, 3.719 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 534, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 156, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 394)
[M::mem_pestat] mean and std.dev: (164.18, 68.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 487)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.708 CPU sec, 3.708 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 533, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (169.84, 81.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.727 CPU sec, 3.727 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 524, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 155, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (166.96, 73.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 506)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.737 CPU sec, 3.737 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 504, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (164.58, 72.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.743 CPU sec, 3.743 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 550, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.05, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.741 CPU sec, 3.741 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 533, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 155, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (166.55, 76.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.727 CPU sec, 3.727 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 524, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 152, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 446)
[M::mem_pestat] mean and std.dev: (172.97, 83.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 557)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.758 CPU sec, 3.758 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 570, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 154, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (166.11, 75.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.810 CPU sec, 3.810 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 272, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 402)
[M::mem_pestat] mean and std.dev: (164.86, 74.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 498)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 1.974 CPU sec, 1.974 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib new.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 716.402 sec; CPU: 615.628 sec
samblaster: Output 404 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.eBjnp49iPsvS/spl_pipe
samblaster: Marked 35456 of 19395578 (0.18%) read ids as duplicates using 2400k memory in 17.143S CPU seconds and 11M56S(716S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Done

]0;amv69@login0b:~/lys2Test[1]+  Done                    speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
(rnaseq) [amv69@n444 lys2Test]$ jobs[2Pbgspeedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" new.fa ~/Lys2/lys22-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cbg[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[Kls
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  new.fa
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              new.fa.amb
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      new.fa.ann
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  new.fa.bwt
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        new.fa.fai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai    new.fa.pac
name                                                      new.fa.sa
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz..bam[K[K[K[Kvam[K[K[Kbam 1.[K[Ktest1.b[K[K[K[K[K[K[Knew1.bam
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.bam new1.bam. new1.bamb new1.bama new1.bami new1.bam[C[C[C[C[C[C[C[C[C.bai
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai new1.bam.bai[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kdiscordants.bam ne1.dis.[K[K[K[K[K[Kw1.dis.[K[K[K[Kdis.bam
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam new1.dis.bam.bai. new1.dis.bam.baib new1.dis.bam.bai [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca new1.dis.bam.baii[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci new1.dis.bam.bai[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai new1.dis.bam.baai[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ksplitters.bam new1.split.bam
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam new1.split.bam.bai. new1.split.bam.baib new1.split.bam.bai [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca new1.split.bam.baii[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci new1.split.bam.bai[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ ls
name      new1.bam.bai  new1.dis.bam.bai  new1.split.bam.bai  new.fa.amb  new.fa.bwt  new.fa.pac
new1.bam  new1.dis.bam  new1.split.bam    new.fa              new.fa.ann  new.fa.fai  new.fa.sa
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ exitg
bash: exitg: command not found
]0;amv69@login0b:~/lys2Test(rnaseq) [amv69@n444 lys2Test]$ exit
exit
srun: error: n444: task 0: Exited with exit code 127
]0;amv69@login0b:~(base) [amv69@login0b ~]$ exit
exit

Script done on Tue 23 Jul 2019 12:16:29 PM EDT
Script started on Tue 23 Jul 2019 12:51:27 PM EDT
]0;amv69@login0b:~[?1034h(base) [amv69@login0b ~]$ ls lyst[K2Test/
name      new1.bam.bai  new1.dis.bam.bai  new1.split.bam.bai  new.fa.amb  new.fa.bwt  new.fa.pac
new1.bam  new1.dis.bam  new1.split.bam    new.fa              new.fa.ann  new.fa.fai  new.fa.sa
]0;amv69@login0b:~(base) [amv69@login0b ~]$ ls lys2Test/[8Pexit[1Plog[K[K[Kcd lys2Test/
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ ls
name      new1.bam.bai  new1.dis.bam.bai  new1.split.bam.bai  new.fa.amb  new.fa.bwt  new.fa.pac
new1.bam  new1.dis.bam  new1.split.bam    new.fa              new.fa.ann  new.fa.fai  new.fa.sa
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ rm name[K[K[K[K[K[K[Kmv new.fa ~
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ rm *
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ l[Kmv ~/new.fa .
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ ls
new.fa
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ srun -n 1 t[K-t 1:00:00
srun: fatal: No command given to execute.
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ srun -n 1 -t 1:00:00[Ksrun -n 1 -t 1:00:00 --pty bash
]0;amv69@login0b:~/lys2Test[?1034h(base) [amv69@n448 lys2Test]$ exit[1Plogexitsrun -n 1 -t 2:00:00 --pty bash4[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm -rf lys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Plys2-173R2_ME015_S15_R1_001.fastq.gz.tJebg3rpWQoU/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kkill %[2Pjobskill jobs 1jobs killall[Kkillall jobs[8Pjobs[2Pbgspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2//lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[44Pexport PATH=~/speedseq/bin:$PATH
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2//lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cc "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa [1@~[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.f[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.f[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.[1@f[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII[1@.[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrI[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chr[C[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/ch[1@r[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/c[1@h[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/[1@c[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

bash: speedseq: command not found
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ export PATH=~/speedseq/bin=[K:$PATH
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ source /.[K[K~/.bashrc
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ source ~/.bashrcexport PATH=~/speedseq/bin:$PATH[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R -i -c 1000 -m 10  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lyss2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  

usage:   speedseq align [options] <reference.fa> <in1.fq> [in2.fq]

positional args:
         reference.fa
                  fasta file (indexed with bwa)
         in1.fq   paired-end fastq file. if -p flag is used then expected to be
                    an interleaved paired-end fastq file, and in2.fq may be omitted.
                    (can be gzipped)
         in2.fq   paired-end fastq file. (can be gzipped)

alignment options:
         -o STR   output prefix [in1.fq]
         -R STR   read group header line such as "@RG\tID:id\tSM:samplename\tLB:lib" (required)
         -p       first fastq file consists of interleaved paired-end sequences
         -t INT   threads [1]
         -T DIR   temp directory [./output_prefix.XXXXXXXXXXXX]
         -I FLOAT[,FLOAT[,INT[,INT]]]
                  specify the mean, standard deviation (10% of the mean if absent), max
                    (4 sigma from the mean if absent) and min of the insert size distribution.
                    FR orientation only. [inferred]

samblaster options:
         -i       include duplicates in splitters and discordants
         -c INT   maximum number of split alignments for a read to be included in splitter file [2]
         -m INT   minimum non-overlapping base pairs between two alignments for a read to be included in splitter file [20]

sambamba options:
         -M       amount of memory in GB to be used for sorting [20]

global options:
         -K FILE  path to speedseq.config file (default: same directory as speedseq)
         -v       verbose
         -h       show this message

Error: Reference file @RG	ID:id	SM:samplename	LB:lib not found.

]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ speedseq align -R -i -c 1000 -m 10  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lyss2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -R -i -c 1000 -m 10  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lyss2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cource ~/.bashrc[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpeedseq align -R -i -c 1000 -m 10  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lyss2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/c[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/ch[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chr[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrI[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.f[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cc-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa [1@~[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.f[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.[1@f[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII[1@.[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrI[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C=-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chr[C[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/ch[1@r[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/c[1@h[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/[1@c[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/c[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/ch[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chr[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrI[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chr[C[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/ch[1@r[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/c[1@h[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/[1@c[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/full lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 1000 --minNonOverlap 10 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin
^Z
[1]+  Stopped                 speedseq align -i -c 1000 -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ bg
[1]+ speedseq align -i -c 1000 -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ jobs
[1]+  Running                 speedseq align -i -c 1000 -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ ls
[0m[01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl[0m  new.fa
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ ls [K[K[Kcdc[K[K[Kcd..
bash: cd..: command not found
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ ls Lys2
ls: cannot access Lys2: No such file or directory
]0;amv69@login0b:~/lys2Test(base) [amv69@n448 lys2Test]$ ls [K[K[Kcd ..
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls Lys2/
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m
]0;amv69@login0b:~(base) [amv69@n448 ~]$ echo ">chrII" > name1
]0;amv69@login0b:~(base) [amv69@n448 ~]$ head name1 
>chrII
]0;amv69@login0b:~(base) [amv69@n448 ~]$ echo "chrIII" [K[K[K[K[K[K[K[K[K[K[K[K[K[Kec[K[Krm name1
]0;amv69@login0b:~(base) [amv69@n448 ~]$ echo ">Lys2" > name1
]0;amv69@login0b:~(base) [amv69@n448 ~]$ echo ">Ty1" > name2
]0;amv69@login0b:~(base) [amv69@n448 ~]$ cat name1 ~/chrII_ly[K[K[K[K[K[K[K[KLys2/chrII_lys.[K2.fa  name2 ~/Lys2//[KC[KchrII_ty1.fa  > n[Knew[K[K[Klys_ty.fa
]0;amv69@login0b:~(base) [amv69@n448 ~]$ head lys_ty.fa 
>Lys2
TGATACCTATAGACAATCAAATCAACCATGCAGTCGACCAGATCATCCCA
CTATGGTTGTTGTCTATTTCATATCGGTGTCGGCATTTTTTTTTCCCGTA
GTACCACTGGATCTGCCTAAATCGCGCTTCAGGAAAACCAGGGACCACCC
TATTTTTTTATATTTCATCATCTAAATTAAGTGTATACATATATGGATAA
AGTCATTTTGAGTTTACATAATCGTATGTTCGAGAGAGGTCTTTCATAAA
AAAATCAAGTTATCAACCAGCATGGGATTTTGGGAGAACAACAAAGATTC
CATCACTTCAGGGCTGAAGAGCGCCGGTAAATATGGTTACCAAGGAACAA
AGTACGTTGCCAAGACAGGGTATAAGGCAAGTAAGAAGCACTATAACAAC
AGCAAAGCGCGTAGGGAAAGGAAGAGTGGTAAGAAAAATTCAAGTGATGA
]0;amv69@login0b:~(base) [amv69@n448 ~]$ head lys_ty.fa cat name1 ~/Lys2/chrII_lys2.fa  name2 ~/Lys2/chrII_ty1.fa  > lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cecho ">Ty1" > name2[KLys2" > name1[12Prm[C[C[C[C[C[Chead name1 echo ">chrII" > name1[13Pls Lys2/[3Pcd ..ls Lys2[3Pcd..[2Plsjobs[2Pbgspeedseq align -i -c 1000 -m 10 -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrIII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cbg[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cjobs[2Plscd..ls Lys2[2Pcd ..ls Lys2/echo ">chrII" > name1[10Phead name1 [3Prm name1[12@echo ">Lys2" >[C[C[C[C[C[C[1PTy1" > name2cat name1 ~/Lys2/chrII_lys2.fa  name2 ~/Lys2/chrII_ty1.fa  > lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead lys_ty.fa [K[Kspeedseq align -i -c 1000 -m 10 -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrI I.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[1P[1P[1P[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/l[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl ~/Lys2/l[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cy ~/Lys2/[1@l[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C_ ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cty.fa [5@~/Lys[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/l[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-17[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead lys_ty.fa [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cspeedseq align -i -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-1773R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz [A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead lys_ty.fa [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmk [Kdir lys_fa[K[Kty
]0;amv69@login0b:~(base) [amv69@n448 ~]$ cd lys_ty
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ cd lys_ty[3@mkdir[C[C[C[C[C[C[Chead lys_ty.fa cat name1 ~/Lys2/chrII_lys2.fa  name2 ~/Lys2/chrII_ty1.fa  > lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cecho ">Ty1" > name2[KLys2" > name1[12Prm[C[C[C[C[C[C[12@echo ">Lys2" >[C[C[C[C[C[C[1PTy1" > name2cat name1 ~/Lys2/chrII_lys2.fa  name2 ~/Lys2/chrII_ty1.fa  > lys_ty.fa[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chead lys_ty.fa [K[3Pmkdir lys_ty[3Pcd[C[C[C[C[C[C[C[Kspeedseq align -i -c 1000 -m 10 -R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2 /chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz[1P[1P[1P[1P[1P[1P[1P[1P[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cy ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C_ [1@~[2@ty[1@.[2@fa[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.f[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CR  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/L[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-R  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/l[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CR  "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/ly[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Warning: Reference file not indexed with BWA. Indexing now...
[bwa_index] Pack FASTA... 0.00 sec
[bwa_index] Construct BWT for the packed sequence...
[bwa_index] 0.00 seconds elapse.
[bwa_index] Update BWT... 0.00 sec
[bwa_index] Pack forward-only FASTA... 0.00 sec
[bwa_index] Construct SA from BWT and Occ... 0.00 sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa index /ihome/ckaplan/amv69/lys_ty.fa
[main] Real time: 0.272 sec; CPU: 0.010 sec
Done
Aligning...

        mkdir -p lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/full lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc
        mkfifo lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl_pipe lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:id	SM:samplename	LB:lib' /ihome/ckaplan/amv69/lys_ty.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl_pipe --discordantFile lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/full -o lys2-173R2_ME015_S15_R1_001.fastq.gz.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl -o lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc -o lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam /dev/stdin
^Z
[2]+  Stopped                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ bg
[2]+ speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ jobs
[1]-  Running                 speedseq align -i -c 1000 -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &  (wd: ~/lys2Test)
[2]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ jobs
[1]-  Running                 speedseq align -i -c 1000 -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &  (wd: ~/lys2Test)
[2]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 6.002 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 5.001 CPU sec, 5.002 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.966 CPU sec, 4.967 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.937 CPU sec, 4.937 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.901 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.890 CPU sec, 4.890 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.897 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.897 CPU sec, 4.897 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.976 CPU sec, 4.977 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.902 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.903 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.970 CPU sec, 4.970 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.881 CPU sec, 4.882 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.936 CPU sec, 4.936 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.906 CPU sec, 4.906 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.963 CPU sec, 4.963 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.915 CPU sec, 4.915 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.883 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.922 CPU sec, 4.922 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.951 CPU sec, 4.951 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.907 CPU sec, 4.908 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.911 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.871 CPU sec, 4.871 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.891 CPU sec, 4.892 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.958 CPU sec, 4.958 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.887 CPU sec, 4.888 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.944 CPU sec, 4.944 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.907 CPU sec, 4.908 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.876 CPU sec, 4.876 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.883 CPU sec, 4.883 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.904 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.913 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.905 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.942 CPU sec, 4.942 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.916 CPU sec, 4.917 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.896 CPU sec, 4.896 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.914 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.903 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.917 CPU sec, 4.917 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.903 CPU sec, 4.904 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.994 CPU sec, 4.995 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.892 CPU sec, 4.893 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.893 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.920 CPU sec, 4.920 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.911 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.913 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.884 CPU sec, 4.884 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.935 CPU sec, 4.935 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.885 CPU sec, 4.885 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.916 CPU sec, 4.917 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.977 CPU sec, 4.977 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.937 CPU sec, 4.937 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.924 CPU sec, 4.924 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.958 CPU sec, 4.958 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.896 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.925 CPU sec, 4.925 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.886 CPU sec, 4.887 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.893 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.915 CPU sec, 4.915 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.905 CPU sec, 4.905 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.900 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.890 CPU sec, 4.890 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.896 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.887 CPU sec, 4.887 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.942 CPU sec, 4.943 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.901 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.911 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.879 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.908 CPU sec, 4.909 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.877 CPU sec, 4.878 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.890 CPU sec, 4.891 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.925 CPU sec, 4.925 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.930 CPU sec, 4.930 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.956 CPU sec, 4.957 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.943 CPU sec, 4.943 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.932 CPU sec, 4.933 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.915 CPU sec, 4.915 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.878 CPU sec, 4.879 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.914 CPU sec, 4.915 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.960 CPU sec, 4.961 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.877 CPU sec, 4.877 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.932 CPU sec, 4.933 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.977 CPU sec, 4.978 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.940 CPU sec, 4.940 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.947 CPU sec, 4.948 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.910 CPU sec, 4.911 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.901 CPU sec, 4.902 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.923 CPU sec, 4.923 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.922 CPU sec, 4.922 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.902 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.984 CPU sec, 4.985 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.913 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.904 CPU sec, 4.904 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.935 CPU sec, 4.936 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.991 CPU sec, 4.991 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.923 CPU sec, 4.923 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.902 CPU sec, 4.902 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.893 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.891 CPU sec, 4.891 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.915 CPU sec, 4.916 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.899 CPU sec, 4.900 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.897 CPU sec, 4.898 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.913 CPU sec, 4.914 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.916 CPU sec, 4.916 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.912 CPU sec, 4.912 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.920 CPU sec, 4.920 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.941 CPU sec, 4.942 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.901 CPU sec, 4.901 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.899 CPU sec, 4.900 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.911 CPU sec, 4.911 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.903 CPU sec, 4.907 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 5.004 CPU sec, 5.005 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.917 CPU sec, 4.920 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.922 CPU sec, 4.923 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.901 CPU sec, 4.906 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 5.016 CPU sec, 5.017 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.894 CPU sec, 4.894 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.903 CPU sec, 4.904 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.893 CPU sec, 4.895 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.889 CPU sec, 4.893 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.922 CPU sec, 4.923 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.943 CPU sec, 4.945 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 4.895 CPU sec, 4.899 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 2.570 CPU sec, 2.571 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 862.435 sec; CPU: 766.098 sec
samblaster: Output 15036 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl/spl_pipe
samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates using 24464k memory in 18.174S CPU seconds and 14M22S(862S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
ls
[0m[01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC[0m
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ 
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ 
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ cd ..
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls
[0m[01;34mfasta[0m                                                     [01;34mlys2Test[0m       name1
[01;34mGithub[0m                                                    [01;34mlys_ty[0m         name2
[34;42mLys2[0m                                                      lys_ty.fa      [01;34mreads[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  lys_ty.fa.amb  rnaSeq.py
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              lys_ty.fa.ann  [01;31mroot_v6.18.00.source.tar.gz[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      lys_ty.fa.bwt  [01;34mspeedseq[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  lys_ty.fa.pac  [01;35mtest.png[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        lys_ty.fa.sa
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai    [01;34mminiconda3[0m
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls lys2Test/
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
[0m[01;34mlys2-173R2_ME015_S15_R1_001.fastq.gz.yDUZpbqvFeCl[0m
new.fa
]0;amv69@login0b:~(base) [amv69@n448 ~]$ Done

]0;amv69@login0b:~[1]-  Done                    speedseq align -i -c 1000 -m 10 -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/Lys2/chrII.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  (wd: ~/lys2Test)
(wd now: ~)
(base) [amv69@n448 ~]$ jobs
[2]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &  (wd: ~/lys_ty)
]0;amv69@login0b:~(base) [amv69@n448 ~]$ jobs
[2]+  Running                 speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &  (wd: ~/lys_ty)
]0;amv69@login0b:~(base) [amv69@n448 ~]$ job[K[K[Ksamblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc_pipe for write.
samblaster: Opening lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 544, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.49, 81.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.726 CPU sec, 8.493 real sec
samblaster: Loaded 2 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 512, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 160, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 451)
[M::mem_pestat] mean and std.dev: (175.84, 81.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 563)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.722 CPU sec, 7.588 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 547, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.38, 79.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.735 CPU sec, 7.633 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 501, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (168.22, 78.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.736 CPU sec, 7.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 501, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 456)
[M::mem_pestat] mean and std.dev: (173.17, 80.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 570)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.757 CPU sec, 7.678 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 545, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 163, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 441)
[M::mem_pestat] mean and std.dev: (174.37, 76.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 550)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.749 CPU sec, 7.722 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 512, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 156, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 402)
[M::mem_pestat] mean and std.dev: (168.48, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 497)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.790 CPU sec, 7.779 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 565, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 149, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (162.95, 70.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 495)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.768 CPU sec, 7.732 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 513, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.30, 77.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.779 CPU sec, 8.689 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 571, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.92, 78.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.683 CPU sec, 9.561 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 545, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (170.05, 77.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.709 CPU sec, 9.651 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 539, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (168.06, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 518)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.678 CPU sec, 4.201 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 530, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (172.15, 77.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.657 CPU sec, 3.658 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 505, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 149, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (160.01, 72.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.659 CPU sec, 3.660 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 575, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.51, 77.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.653 CPU sec, 3.654 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 566, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (167.18, 77.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.675 CPU sec, 3.675 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 533, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 151, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (163.44, 71.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 508)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.671 CPU sec, 3.671 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 545, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 155, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 452)
[M::mem_pestat] mean and std.dev: (169.08, 81.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 567)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.682 CPU sec, 3.683 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 530, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 154, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 446)
[M::mem_pestat] mean and std.dev: (169.07, 75.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 557)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.636 CPU sec, 3.636 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 538, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.97, 74.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 559, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 154, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)
[M::mem_pestat] mean and std.dev: (168.47, 80.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 560)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.636 CPU sec, 3.636 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 570, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.46, 78.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.642 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 548, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 157, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 405)
[M::mem_pestat] mean and std.dev: (168.40, 71.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.637 CPU sec, 3.638 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 562, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (168.29, 74.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 509)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.634 CPU sec, 3.635 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 524, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 450)
[M::mem_pestat] mean and std.dev: (173.82, 80.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 562)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.647 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 550, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 405)
[M::mem_pestat] mean and std.dev: (164.63, 69.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 502)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.641 CPU sec, 3.641 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 497, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 165, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 436)
[M::mem_pestat] mean and std.dev: (171.15, 79.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.637 CPU sec, 3.637 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 549, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 151, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 385)
[M::mem_pestat] mean and std.dev: (159.78, 71.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 476)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.663 CPU sec, 3.664 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 589, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 442)
[M::mem_pestat] mean and std.dev: (170.37, 79.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 551)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 560, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 152, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (168.42, 79.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 482, 2, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 152, 229)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 463)
[M::mem_pestat] mean and std.dev: (175.34, 88.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 580)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.647 CPU sec, 3.647 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 544, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (170.66, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 542)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.651 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 152, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (168.89, 73.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 505)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.625 CPU sec, 3.625 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 556, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 166, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (176.53, 79.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.640 CPU sec, 3.640 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 567, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 154, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (163.75, 74.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.635 CPU sec, 3.635 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 510, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 159, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (173.71, 80.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.646 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 563, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (166.57, 76.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 518)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 579, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (170.14, 76.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.636 CPU sec, 3.636 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 546, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 151, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)
[M::mem_pestat] mean and std.dev: (165.88, 79.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 561)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.637 CPU sec, 3.637 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 552, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 149, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (164.91, 79.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.679 CPU sec, 3.679 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 506, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 150, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 404)
[M::mem_pestat] mean and std.dev: (160.40, 70.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.674 CPU sec, 3.674 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 550, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (120, 165, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (174.67, 75.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 504)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.639 CPU sec, 3.640 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 530, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 159, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 442)
[M::mem_pestat] mean and std.dev: (171.94, 76.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 550)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.641 CPU sec, 3.641 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 548, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.04, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.688 CPU sec, 3.689 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 523, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 159, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 442)
[M::mem_pestat] mean and std.dev: (172.37, 79.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 551)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.691 CPU sec, 3.691 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 529, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 161, 225)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (174.56, 79.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 552)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.668 CPU sec, 3.669 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 567, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.49, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.648 CPU sec, 3.649 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (169.71, 74.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 508)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.705 CPU sec, 3.705 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 548, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 152, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (163.97, 72.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.648 CPU sec, 3.648 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 567, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 202)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 382)
[M::mem_pestat] mean and std.dev: (160.12, 66.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 472)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.646 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 546, 3, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 157, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 454)
[M::mem_pestat] mean and std.dev: (171.58, 82.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 569)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.655 CPU sec, 3.655 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 569, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 150, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 449)
[M::mem_pestat] mean and std.dev: (167.12, 81.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 564)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.636 CPU sec, 3.636 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 565, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 155, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)
[M::mem_pestat] mean and std.dev: (173.93, 79.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 557)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.642 CPU sec, 3.642 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 573, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.64, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.681 CPU sec, 3.682 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 522, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 162, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 404)
[M::mem_pestat] mean and std.dev: (168.32, 69.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 499)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.674 CPU sec, 3.675 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 476, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (167.82, 71.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 507)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 525, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.657 CPU sec, 3.657 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 593, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 159, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 407)
[M::mem_pestat] mean and std.dev: (169.98, 71.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 503)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.655 CPU sec, 3.655 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 577, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 153, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 451)
[M::mem_pestat] mean and std.dev: (169.79, 80.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 565)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 549, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 159, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (169.04, 73.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 538, 1, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.60, 74.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 541, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 153, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 401)
[M::mem_pestat] mean and std.dev: (165.17, 73.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 497)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 521, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (169.36, 77.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.641 CPU sec, 3.642 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 609, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 151, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 398)
[M::mem_pestat] mean and std.dev: (162.01, 69.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 494)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.646 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 529, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 439)
[M::mem_pestat] mean and std.dev: (167.51, 76.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 548)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.647 CPU sec, 3.647 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 521, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 152, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 409)
[M::mem_pestat] mean and std.dev: (164.73, 75.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 508)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.636 CPU sec, 3.636 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 540, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 153, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (164.68, 76.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.655 CPU sec, 3.655 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 506, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 160, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 439)
[M::mem_pestat] mean and std.dev: (171.13, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.649 CPU sec, 3.649 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 506, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (170.92, 78.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.640 CPU sec, 3.641 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 560, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 152, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 400)
[M::mem_pestat] mean and std.dev: (162.56, 70.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 497)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.653 CPU sec, 3.653 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 575, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 152, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 406)
[M::mem_pestat] mean and std.dev: (167.23, 75.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 503)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 549, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 155, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 394)
[M::mem_pestat] mean and std.dev: (169.00, 73.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 486)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.651 CPU sec, 3.651 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 552, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 151, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (166.22, 79.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.653 CPU sec, 3.653 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 530, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.95, 78.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 533, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (168.43, 70.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 512)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 541, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 162, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 440)
[M::mem_pestat] mean and std.dev: (172.38, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 548)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 561, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 162, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 449)
[M::mem_pestat] mean and std.dev: (174.76, 81.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 562)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.701 CPU sec, 3.702 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 503, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 149, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (171.37, 79.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.651 CPU sec, 3.652 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 555, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (106, 158, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 460)
[M::mem_pestat] mean and std.dev: (170.51, 81.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 578)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.673 CPU sec, 3.673 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 561, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 162, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (166.29, 75.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 507)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 546, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (165.03, 72.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.638 CPU sec, 3.638 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 566, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 165, 235)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 469)
[M::mem_pestat] mean and std.dev: (181.08, 87.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 586)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 508, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 385)
[M::mem_pestat] mean and std.dev: (163.27, 70.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 476)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 153, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 403)
[M::mem_pestat] mean and std.dev: (162.68, 71.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 553, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (167.77, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 506)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.649 CPU sec, 3.649 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 513, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 158, 227)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 445)
[M::mem_pestat] mean and std.dev: (175.90, 80.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.662 CPU sec, 3.662 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 538, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 158, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 397)
[M::mem_pestat] mean and std.dev: (169.25, 72.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 490)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.640 CPU sec, 3.640 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 516, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.92, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.672 CPU sec, 3.672 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 536, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 159, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.05, 79.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.648 CPU sec, 3.649 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 577, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 458)
[M::mem_pestat] mean and std.dev: (170.72, 80.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 574)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.647 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 536, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.41, 73.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.671 CPU sec, 3.672 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 529, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 155, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (164.53, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 512)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.653 CPU sec, 3.653 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 507, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 152, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (161.92, 73.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 496)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 510, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 150, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (166.66, 80.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.640 CPU sec, 3.640 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 521, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (172.50, 81.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 542)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.655 CPU sec, 3.656 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 541, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 151, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (165.67, 80.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.654 CPU sec, 3.654 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 518, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 148, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 403)
[M::mem_pestat] mean and std.dev: (160.10, 73.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 501)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.671 CPU sec, 3.671 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 574, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.25, 75.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.684 CPU sec, 3.685 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 594, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (165.14, 73.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.654 CPU sec, 3.654 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 555, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 163, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.88, 79.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 547)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 531, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.70, 78.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 544)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.634 CPU sec, 3.634 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 477, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 151, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (165.88, 72.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 559, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 149, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (160.21, 70.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 496)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.626 CPU sec, 3.626 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 504, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 162, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (172.77, 79.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.676 CPU sec, 3.676 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 561, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (166.65, 74.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 544, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (163.80, 70.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.648 CPU sec, 3.648 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 563, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 157, 228)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 466)
[M::mem_pestat] mean and std.dev: (173.53, 82.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 585)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 561, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 157, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (171.12, 78.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.677 CPU sec, 3.677 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 525, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 148, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 406)
[M::mem_pestat] mean and std.dev: (164.49, 73.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 504)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.647 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 556, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 150, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (164.15, 72.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.642 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 517, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 153, 230)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 470)
[M::mem_pestat] mean and std.dev: (172.75, 84.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 590)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.649 CPU sec, 3.649 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 518, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 403)
[M::mem_pestat] mean and std.dev: (164.45, 68.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 499)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 515, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 163, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (169.03, 75.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.629 CPU sec, 3.629 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 536, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (118, 162, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (173.94, 74.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 584, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 152, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (165.85, 77.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.648 CPU sec, 3.648 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 548, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (166.50, 75.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 510)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.649 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 535, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 152, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (164.65, 71.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 510)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.644 CPU sec, 3.644 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 540, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (168.95, 75.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.642 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 567, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (108, 152, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 450)
[M::mem_pestat] mean and std.dev: (170.03, 79.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 564)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.643 CPU sec, 3.643 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 543, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 436)
[M::mem_pestat] mean and std.dev: (170.08, 80.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.674 CPU sec, 3.675 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 548, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 162, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (174.75, 81.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.666 CPU sec, 3.666 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 538, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 152, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (167.52, 80.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.641 CPU sec, 3.641 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 522, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (120, 159, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 399)
[M::mem_pestat] mean and std.dev: (168.18, 70.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 492)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.645 CPU sec, 3.645 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 489, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (105, 149, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (163.28, 80.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.646 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 519, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.61, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.633 CPU sec, 3.633 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 588, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.87, 80.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.634 CPU sec, 3.635 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 561, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 407)
[M::mem_pestat] mean and std.dev: (166.99, 73.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 505)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.646 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 153, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.30, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.634 CPU sec, 3.635 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 537, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 156, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (166.50, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 518)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.640 CPU sec, 3.641 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 564, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.05, 75.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.639 CPU sec, 3.639 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 568, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 150, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (162.08, 72.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.639 CPU sec, 3.640 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 537, 2, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 162, 232)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 462)
[M::mem_pestat] mean and std.dev: (179.64, 85.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 577)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.646 CPU sec, 3.646 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 505, 5, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (167.18, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 542, 1, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 150, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 402)
[M::mem_pestat] mean and std.dev: (163.04, 72.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 499)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.648 CPU sec, 3.648 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 566, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 410)
[M::mem_pestat] mean and std.dev: (166.64, 71.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 509)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.639 CPU sec, 3.639 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 534, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 156, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 394)
[M::mem_pestat] mean and std.dev: (164.18, 68.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 487)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.640 CPU sec, 3.641 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 533, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 152, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (169.84, 81.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.649 CPU sec, 3.649 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 524, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 155, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 408)
[M::mem_pestat] mean and std.dev: (166.96, 73.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 506)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.671 CPU sec, 3.672 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 504, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (164.58, 72.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.653 CPU sec, 3.653 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 550, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.05, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 533, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (107, 155, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (166.55, 76.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.650 CPU sec, 3.650 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 524, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 152, 224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 446)
[M::mem_pestat] mean and std.dev: (172.97, 83.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 557)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.679 CPU sec, 3.680 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 570, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (109, 154, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (166.11, 75.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.684 CPU sec, 3.684 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 272, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 402)
[M::mem_pestat] mean and std.dev: (164.86, 74.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 498)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 1.915 CPU sec, 1.915 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:id\tSM:samplename\tLB:lib /ihome/ckaplan/amv69/lys_ty.fa /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
[main] Real time: 736.255 sec; CPU: 586.275 sec
samblaster: Output 404 discordant read pairs to lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/disc_pipe
samblaster: Output 0 split reads to lys2-173R2_ME015_S15_R1_001.fastq.gz.TwjcajGPSaHC/spl_pipe
samblaster: Marked 35453 of 19395578 (0.18%) read ids as duplicates using 2312k memory in 16.862S CPU seconds and 12M17S(737S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
Done

]0;amv69@login0b:~[2]+  Done                    speedseq align -i -R "@RG\tID:id\tSM:samplename\tLB:lib" ~/lys_ty.fa ~/Lys2/lys2-173R2_ME015_S15_R1_001.fastq.gz ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz  (wd: ~/lys_ty)
(wd now: ~)
(base) [amv69@n448 ~]$ ls
[0m[01;34mfasta[0m                                                     [01;34mlys2Test[0m       name1
[01;34mGithub[0m                                                    [01;34mlys_ty[0m         name2
[34;42mLys2[0m                                                      lys_ty.fa      [01;34mreads[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  lys_ty.fa.amb  rnaSeq.py
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              lys_ty.fa.ann  [01;31mroot_v6.18.00.source.tar.gz[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      lys_ty.fa.bwt  [01;34mspeedseq[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  lys_ty.fa.pac  [01;35mtest.png[0m
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        lys_ty.fa.sa
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai    [01;34mminiconda3[0m
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls l[K[K[K[Kls lys_ty
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
]0;amv69@login0b:~(base) [amv69@n448 ~]$ rmlys[K[K[K lys2-173R2_ME015_S15_R1_001.fastq.gz.*
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls
[0m[01;34mfasta[0m   [01;34mlys2Test[0m   lys_ty.fa.amb  lys_ty.fa.pac  name1  rnaSeq.py                    [01;35mtest.png[0m
[01;34mGithub[0m  [01;34mlys_ty[0m     lys_ty.fa.ann  lys_ty.fa.sa   name2  [01;31mroot_v6.18.00.source.tar.gz[0m
[34;42mLys2[0m    lys_ty.fa  lys_ty.fa.bwt  [01;34mminiconda3[0m     [01;34mreads[0m  [01;34mspeedseq[0m
]0;amv69@login0b:~(base) [amv69@n448 ~]$ rm name [K1 name2
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls
[0m[01;34mfasta[0m   [01;34mlys2Test[0m   lys_ty.fa.amb  lys_ty.fa.pac  [01;34mreads[0m                        [01;34mspeedseq[0m
[01;34mGithub[0m  [01;34mlys_ty[0m     lys_ty.fa.ann  lys_ty.fa.sa   rnaSeq.py                    [01;35mtest.png[0m
[34;42mLys2[0m    lys_ty.fa  lys_ty.fa.bwt  [01;34mminiconda3[0m     [01;31mroot_v6.18.00.source.tar.gz[0m
]0;amv69@login0b:~(base) [amv69@n448 ~]$ ls lys_ty
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai
]0;amv69@login0b:~(base) [amv69@n448 ~]$ cd lyst[K-[K_ty
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ mv lysw[K2-173R2_ME015_S15_R1_001.fastq.gz..[Kbam ly_ty[K[K[K[Kys_ty.bam
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.bam lys_ty.bam.bai. lys_ty.bam.baib lys_ty.bam.baiI lys_ty.bam.bai[1P lys_ty.bam.baia lys_ty.bam.baii lys_ty.bam.bai
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai lys_ty.bam.bai[C[1P lys_ty.bam.bai[1P lys_ty.bam.bai[1P lys_ty.bam.baid lys_ty.bam.bai[1P lys_ty.bam.bai[1P lys_ty.bam.bai[1P lys_ty.bam.bai[1P lys_ty.bam.bai[1P lys_ty.bam.baid lys_ty.bam.baiiscordants.bam lys_ty.bam.bai[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[Kdis.bam
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ mv lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam lys_ty.dis.bam. lys_ty.dis.bamb lys_ty.dis.bama lys_ty.dis.bami lys_ty.dis.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.bai [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ki
]0;amv69@login0b:~/lys_ty(base) [amv69@n448 lys_ty]$ exit
exit
]0;amv69@login0b:~/lys2Test(base) [amv69@login0b lys2Test]$ exit
exit

Script done on Tue 23 Jul 2019 01:51:28 PM EDT
Script started on Tue 23 Jul 2019 04:36:05 PM EDT
]0;amv69@login0b:~[?1034h[amv69@login0b ~]$ exit
exit

Script done on Tue 23 Jul 2019 04:36:13 PM EDT
