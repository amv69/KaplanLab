Script started on Wed 24 Jul 2019 08:23:07 AM EDT
]0;amv69@login0b:~[?1034h[amv69@login0b ~]$ rm my_bashrc 
]0;amv69@login0b:~[amv69@login0b ~]$ ls lys2Test/
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  lys_ty.fa.amb
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              lys_ty.fa.ann
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      lys_ty.fa.bwt
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  lys_ty.fa.pac
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        lys_ty.fa.sa
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai    new.fa
lys_ty.fa
]0;amv69@login0b:~[amv69@login0b ~]$ cd lys2Test/
]0;amv69@login0b:~/lys2Test[amv69@login0b lys2Test]$ cd ..
]0;amv69@login0b:~[amv69@login0b ~]$ l[Kcd Lys2/
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ ls
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq.gz[0m  [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ gunzip lys2-173R2_ME01_s1[K[KS15)[K[K[K[K[K[K15_S15_R1_001.fastq.gz 
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ ls
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq[0m     [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ s[Kmore [K[K[K[K[Kmore lys2-173R2_ME015_S15_r[KR1_001.fastq 
@NS500211:684:H2Y22BGXB:1:11101:10169:1068 1:N:0:ACTGAT
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
+
AAAAAEEAEEEEEEEEEEAEEAEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6442:1068 1:N:0:ACTGAT
GTAACCAGCTTCCTTAGCTAATTTGNNNNNNNCAGTT
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:21573:1069 1:N:0:ACTGAT
TTTAGAATTTGATTGATTTACCATGNNNNNNNCAGTC
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:25454:1069 1:N:0:ACTGAT
TTCTCGAAATTTCTATCTGGCCCTCNNNNNNNCCCCT
+
6AAAAEEEEEEEEEAEAEEEEEEEE#######EEEEA
@NS500211:684:H2Y22BGXB:1:11101:14308:1070 1:N:0:ACTGAT
CTGTGCAGAACCTTTCAATTGTGTTNNNNNNNACAAG
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:23652:1072 1:N:0:ACTGAT
ATAAAGAAAGCCGAAGTCGTCGAGANNGNNNNTTTTC
+
AAAAAEEEEEEEA/EEEEAEEEEEE##E####EA/EE
@NS500211:684:H2Y22BGXB:1:11101:3921:1073 1:N:0:ACTGAT
TAGAAGAACAGCATAATATTGCTACCNAANNNGCAGA
+
AAAAAEEEEEEEEEEEEEEEEEEEEE#EE###EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6310:1073 1:N:0:ACTGAT
CAATAAAGAGTGTAAAATTGTGCTGANTGNNNAGTAC
[7m--More--(0%)[27m+[K
[7m--More--(0%)[27m[K]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ head [K[K[K[K[Kmore lys2-173R2_ME015_S15_R1_001.fastq [1P[1P[1P[1P[1P[1@h[1@e[1@a[1@d[1@ 
@NS500211:684:H2Y22BGXB:1:11101:10169:1068 1:N:0:ACTGAT
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
+
AAAAAEEAEEEEEEEEEEAEEAEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6442:1068 1:N:0:ACTGAT
GTAACCAGCTTCCTTAGCTAATTTGNNNNNNNCAGTT
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:21573:1069 1:N:0:ACTGAT
TTTAGAATTTGATTGATTTACCATGNNNNNNNCAGTC
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ m[Khead lys2-173R2_ME015_S15_R1_001.fastq [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmore[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
@NS500211:684:H2Y22BGXB:1:11101:10169:1068 1:N:0:ACTGAT
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
+
AAAAAEEAEEEEEEEEEEAEEAEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6442:1068 1:N:0:ACTGAT
GTAACCAGCTTCCTTAGCTAATTTGNNNNNNNCAGTT
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:21573:1069 1:N:0:ACTGAT
TTTAGAATTTGATTGATTTACCATGNNNNNNNCAGTC
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:25454:1069 1:N:0:ACTGAT
TTCTCGAAATTTCTATCTGGCCCTCNNNNNNNCCCCT
+
6AAAAEEEEEEEEEAEAEEEEEEEE#######EEEEA
@NS500211:684:H2Y22BGXB:1:11101:14308:1070 1:N:0:ACTGAT
CTGTGCAGAACCTTTCAATTGTGTTNNNNNNNACAAG
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:23652:1072 1:N:0:ACTGAT
ATAAAGAAAGCCGAAGTCGTCGAGANNGNNNNTTTTC
+
AAAAAEEEEEEEA/EEEEAEEEEEE##E####EA/EE
@NS500211:684:H2Y22BGXB:1:11101:3921:1073 1:N:0:ACTGAT
TAGAAGAACAGCATAATATTGCTACCNAANNNGCAGA
+
AAAAAEEEEEEEEEEEEEEEEEEEEE#EE###EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6310:1073 1:N:0:ACTGAT
CAATAAAGAGTGTAAAATTGTGCTGANTGNNNAGTAC
[7m--More--(0%)[27m[K]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ more lys2-173R2_ME015_S15_R1_001.fastq [1P[1P[1P[1P[1@s[1@e[1@d[C[1@ [1@-[1@n[C[1@ [1@'[1@2[1@p[1@;[1@1[1@~[1@4[1@p[C[1@'[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C>test.txt
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ more test.txt 
@NS500211:684:H2Y22BGXB:1:11101:10169:1068 1:N:0:ACTGAT
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
@NS500211:684:H2Y22BGXB:1:11101:6442:1068 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:21573:1069 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:25454:1069 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:14308:1070 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:23652:1072 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:3921:1073 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:6310:1073 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:2159:1074 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:26460:1075 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:20187:1079 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:16682:1080 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:18479:1080 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:14528:1081 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:24593:1082 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:19501:1082 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:7549:1082 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:14477:1083 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:25481:1083 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:19204:1083 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:1893:1084 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:11898:1087 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:15251:1088 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:15366:1089 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:19399:1090 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:8846:1090 1:N:0:ACTGAT
@NS500211:684:H2Y22BGXB:1:11101:25400:1090 1:N:0:ACTGAA
@NS500211:684:H2Y22BGXB:1:11101:25531:1090 1:N:0:ACTTAT
@NS500211:684:H2Y22BGXB:1:11101:7363:1091 1:N:0:ACTGAT
[7m--More--(0%)[27m[K]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ more test.txt sed -n '2p;1~4p' lys2-173R2_ME015_S15_R1_001.fastq >test.txt[1P[1@0
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ sed -n '2p;0~4p' lys2-173R2_ME015_S15_R1_001.fastq >test.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmore test.txt [K
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
AAAAAEEAEEEEEEEEEEAEEAEEE#######EEEEE
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
6AAAAEEEEEEEEEAEAEEEEEEEE#######EEEEA
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
AAAAAEEEEEEEA/EEEEAEEEEEE##E####EA/EE
AAAAAEEEEEEEEEEEEEEEEEEEEE#EE###EEEEE
AAAAAEEEEEEEEEEEEEEEEEEEEE#EE###EEEEE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEE###EEEEE
AAAAAAEEEEEEEEEEEEEEEEEEEEEEE#EEEEEEE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
A6AAA6EEEEEEEEEEEA/EE/EAE/E/EEEEEEEAE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEA/EEEEEEE
AAAAAEEEEEEE6EEEEEEEEEEEEEEEEEEEEEEEE
AAAAAEEEAEEEEEEEEEEEEEAEEEEEEEEEEEEEE
AAAAAEAEEEEEEEEEEEEAEEEE<EEEEEEEEEEEE
AAAA/EAEEEEEEA/EEEEEEEAAEEE666EEAAAAA
AAAAAEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEE
AAA/AE6EEAAEEEAEE/EAEE<EAEE/AEEAEEEEE
AAAAAEEEEAEEEEEEEEEEEAEE/EE6EE6/EEEAE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
AAAAAEEEAEEEAEEEEEAEEEEEAEEEEEEEEEEEA
AAAAAEEEEEEEEAEEEEEEEEEEAEEEEEEEEEEEE
AAAAAEE/EAEEEEEEAEAEEEEEEEEEAEEEE/EEE
AAAAA/EE6E/AEAA//AA//EEEA/E/EAE//E/AE
AA//AEEA/EAEAEA/EEA/A/AEEA<AEEEEEEEEE
AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
[7m--More--(0%)[27m[K]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ more test.txt sed -n '2p;0~4p' lys2-173R2_ME015_S15_R1_001.fastq >test.txt[1P[1@2[1@w[1@q[1P[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ sed -n '2p;2~4p' lys2-173R2_ME015_S15_R1_001.fastq >test.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmore test.txt [K
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
GTAACCAGCTTCCTTAGCTAATTTGNNNNNNNCAGTT
TTTAGAATTTGATTGATTTACCATGNNNNNNNCAGTC
TTCTCGAAATTTCTATCTGGCCCTCNNNNNNNCCCCT
CTGTGCAGAACCTTTCAATTGTGTTNNNNNNNACAAG
ATAAAGAAAGCCGAAGTCGTCGAGANNGNNNNTTTTC
TAGAAGAACAGCATAATATTGCTACCNAANNNGCAGA
CAATAAAGAGTGTAAAATTGTGCTGANTGNNNAGTAC
TGTTCTCACTACTACAAGCAGAATCATTTNNNTACTG
TTTATATTGATCTATCAACTCCTTCTGTTNTAGATTC
CATCGACGGCCTTCCAGTTGGGAATATATTCAATTTC
AGTGGGTTAGAAAAATCGCCATTGCACATCTTTGATG
TATTTGATGGCAGGTCCGTCTTCAACTAACCCGACAG
AAGAAGAAAAAAATAAGACAAATTTTTTTAGAGCTGC
ATAAATCTAGCCCCGGAGGGCATCGTCCGACCGTATG
AAATTAGATAGAACCTTGAATCGTGTCAACTTTTCGC
TCTGGAACTTGCCATCATCATTCCCTAGAAACTGCCA
AGGTTGACATCGAAATATTGAACCAACTAGGTATAAA
AAAATGGAATCCCAACAATTACATAAAAATCTGAGAT
CCTATTTAGTCACCCGGACATCTATTGTTTGATGGTG
GCCTGCTAGTTGCATCTTTCTACCAAGATAACGGAAG
TTATACACCCCGCGGCTTATTCCCTGGAATTCCAGGG
TAAATATATGTTACCTAGATCTTTATCATTATTTAGT
AAGCAATGACATCCTTGTCCTGTTCAATTAATTCGGC
GGAACAACAGTTCTCTGTCTACAATAACAAGTTTTTT
CGTATTAAACTTGTTGAGATAGCCCTAAAGACCACCC
GCCAATAAAAACCACTGTTTTGCTCACTCATGTCAAC
ATGAATTCCTAATAACTACGTAAATTTTTAGCCTGTA
ATTTGATAATATTTATATTATGTCAGTTATTTTATAT
[7m--More--(0%)[27m[K]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ head -1 text.txt[K[K[K[K[K[Kst.r[Ktxt | wc
      1       1      38
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ calc
bash: calc: command not found
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ 38/2
bash: 38/2: No such file or directory
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ ls
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq[0m     [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  test.txt
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ cd ..
]0;amv69@login0b:~[amv69@login0b ~]$ mkdir splitFiles
]0;amv69@login0b:~[amv69@login0b ~]$ ls
[0m[01;34mfasta[0m   [34;42mLys2[0m      [01;34mminiconda3[0m  rnaSeq.py                    [01;34mspeedseq[0m    [01;35mtest.png[0m
[01;34mGithub[0m  [01;34mlys2Test[0m  [01;34mreads[0m       [01;31mroot_v6.18.00.source.tar.gz[0m  [01;34msplitFiles[0m
]0;amv69@login0b:~[amv69@login0b ~]$ mv Lys2/test.txt splitFiles/
]0;amv69@login0b:~[amv69@login0b ~]$ m[K [Kcp Lys2/lys2-173R2_ME015_S15_R1_001.fastq splitFiles/
]0;amv69@login0b:~[amv69@login0b ~]$ cd splitFiles/
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
[0m[01;32mlys2-173R2_ME015_S15_R1_001.fastq[0m  test.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed [K[K[K[Ksed -n '1{p;q"[K}' 1.txt[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmv lys2-173R2_ME015_S15_R1_001.fastq test.fas[K[K[K[K[K[K[K[Ksample.fasta[K[K[K[K[K[K[K[K[K[K[K[Klys2.fasta
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
[0m[01;32mlys2.fasta[0m  test.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '1{p;q}' lys2.fasta  >[K[K? [K[K> 1.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1.txt 
@NS500211:684:H2Y22BGXB:1:11101:10169:1068 1:N:0:ACTGAT
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1.txt sed -n '1{p;q}' lys2.fasta > 1.txt[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ktes[K[K[K test.txt > 1.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '1{p;q}' test.txt > 1.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat 1.txt [K
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1.txt sed -n '1{p;q}' test.txt > 1.txt0.txt[1@0
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '10{p;q}' test.txt > 10.txt[1P.txt[1P.txt1.txt7.txt2.txt9.txt[1P[1@7[1@2[1@9
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '1729{p;q}' test.txt > 1729.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ksed -n '1729{p;q}' test.txt > 1729.txt[C[1P.txt[1P.txt[1P.txt[1P.txt8.txt1.txt2.txt8.txt[1P[1P[1P[1P[1@8[1@1[1@2[1@8
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '8128{p;q}' test.txt > 8128.txt[1P.txt[1P.txt[1P.txt[1P.txt5.txt[1P[1P[1P[1P[1@5
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '5{p;q}' test.txt > 5.txt[1P.txt1.txt2.txt7.txt9.txt[1P[1@1[1@2[1@7[1@9
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '1279{p;q}' test.txt > 1279.txt[1P.txt[1P.txt[1P.txt[1P.txt1.txt6.txt3.txt4.txt[1P[1P[1P[1P[1@1[1@6[1@3[1@4
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ sed -n '1634{p;q}' test.txt > 1634.txt[1P.txt[1P.txt[1P.txt[1P.txt1.txt5.txt3.txt[C[1P[1P[1P[1P[1@1[1@5[1@3
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
10.txt  1279.txt  153.txt  1634.txt  1729.txt  1.txt  5.txt  8128.txt  [0m[01;32mlys2.fasta[0m  test.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1729.txt 
CTGTTGGTGGTTCATTTGATGATAAGGGAGGGTTCCA
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ wc 1279.txt 
 1  1 38 1279.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cut -c-19 1.[K[K[K[K[K[K[K[K[K[K[K[Kvi ../rnaSeq.py 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"../rnaSeq.py" 109L, 6354C[>c[2;1H[34m#awk command to only get chromosomes that appear on the genome file[m
[30m[43msubprocess[m.check_call([31m"for file in *.bedgraph; do echo $file && awk '$1 ~ /chr/' $file > ${file/.bedgraph//[4;1H_chr.bedgraph}; done"[m, shell=[36mTrue[m)

[34m#Sorts the bedgraph files to ensure bedGraphToBigWig works correctly[m
[30m[43msubprocess[m.check_call([31m"for file in *chr.bedgraph; do echo $file && LC_COLLATE=C sort -k1,1 -k2,2n -k3,3n --[8;1Hs  $file > ${file/.bedgraph/_sorted.bedgraph}; done"[m, shell=[36mTrue[m)

[34m#merge files so they can be converted to bigwig (There can't be overlap)[m
[30m[43msubprocess[m.check_call([31m"for file in *sorted.bedgraph; do echo $file && bedtools merge -i $file -c 4 -d 0 -oo[12;1H max > ${file/sorted.bedgraph/merged.bedgraph}; done"[m, shell=[36mTrue[m)

[34m#Sorts the bedgraph files to ensure bedGraphToBigWig works correctly[m
[30m[43msubprocess[m.check_call([31m"for file in *merged.bedgraph; do echo $file && LC_COLLATE=C sort -k1,1 -k2,2n -k3,33[16;1Hn -s  $file > ${file/.bedgraph/_sorted2.bedgraph}; done"[m, shell=[36mTrue[m)

[34m#Conversion to BigWIg[m
[30m[43msubprocess[m.check_call([31m"for file in *sorted2.bedgraph; do echo $file && bedGraphToBigWig $file /bgfs/ckaplaa[20;1Hn/Anand_seq/Genomes/Combined_yeast/Budding_Fission_new.genome $file.bw; done"[m, shell=[36mTrue[m)


[34m#Returns to the original working directory[m
os.chdir(wd)[30;1H[1m[34m~                                                                                                         [m[31;89H109,0-1[7CBot[29;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;1H[K[31;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[31;1H[K[31;1H[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ vi ../rnaSeq.py [4Pwc 1279.txt[C[K[K[K[K[K[K[K[K[K[K[K[Kfor file in *[K[K[K[K[K[K[K[K[K[K[K[K[Kmv test.txt test
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ for file in *.txt; do echo $file && cut-c 18[K9 $file > ${file/.txt/.trim}; done
10.txt
bash: cut-c: command not found
1279.txt
bash: cut-c: command not found
153.txt
bash: cut-c: command not found
1634.txt
bash: cut-c: command not found
1729.txt
bash: cut-c: command not found
1.txt
bash: cut-c: command not found
5.txt
bash: cut-c: command not found
8128.txt
bash: cut-c: command not found
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ for file in *.txt; do echo $file && cut-c 19 $file > ${file/.txt/.trim}; done[C -c 19 $file > ${file/.txt/.trim}; done [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

10.txt
1279.txt
153.txt
1634.txt
1729.txt
1.txt
5.txt
8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
10.trim  1279.trim  153.trim  1634.trim  1729.trim  1.trim  5.trim  8128.trim  [0m[01;32mlys2.fasta[0m
10.txt   1279.txt   153.txt   1634.txt   1729.txt   1.txt   5.txt   8128.txt   test
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 153.trim 
C
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 153.trim ls[Kfor file in *.txt; do echo $file && cut -c 19 $file > ${file/.txt/.trim}; done [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C019 $file > ${file/.txt/.trim}; donee[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-19 $file > ${file/.txt/.trim}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

10.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
1279.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
153.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
1634.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
1729.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
1.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
5.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
8128.txt
cut: fields and positions are numbered from 1
Try 'cut --help' for more information.
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ for file in *.txt; do echo $file && cut -c 0-19 $file > ${file/.txt/.trim}; donne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-19 $file > ${file/.txt/.trim}; done[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1-19 $file > ${file/.txt/.trim}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

10.txt
1279.txt
153.txt
1634.txt
1729.txt
1.txt
5.txt
8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.trim 
TGTTCTCACTACTACAAGC
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.txt 
TGTTCTCACTACTACAAGCAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.txt [1@rim[Cfor file in *.txt; do echo $file && cut -c 1-19 $file > ${file/.txt/.trim}; donne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C $file > ${file/.txt/.trim2}; don[1Pe[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C $file > ${file/.txt/.trim2}; done[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C $file > ${file/.txt/.trim2}; done [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2 $file > ${file/.txt/.trim2}; done [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0 $file > ${file/.txt/.trim2}; donee[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- $file > ${file/.txt/.trim2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C3 $file > ${file/.txt/.trim2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 $file > ${file/.txt/.trim2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

10.txt
1279.txt
153.txt
1634.txt
1729.txt
1.txt
5.txt
8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
10.trim   1279.trim   153.trim   1634.trim   1729.trim   1.trim   5.trim   8128.trim   [0m[01;32mlys2.fasta[0m
10.trim2  1279.trim2  153.trim2  1634.trim2  1729.trim2  1.trim2  5.trim2  8128.trim2  test
10.txt    1279.txt    153.txt    1634.txt    1729.txt    1.txt    5.txt    8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 153.trim
CATTTTCTCCGAAAAAAAC
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 153.trim2
CGACTCGTTATGAAACGT
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ wc -l c[K153.tt[Krim[1P 153.trim[1P 153.trim
 1  1 20 153.trim
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ wc  153.trimcat 153.trim2[Kls[Kfor file in *.txt; do echo $file && cut -c 20-38 $file > ${file/.txt/.trim2}; ddone[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat 10.txt [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@rim[Cfor file in *.txt; do echo $file && cut -c 1-19 $file > ${file/.txt/.trim}; donne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C $file > ${file/.txt/.trim}; done[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 $file > ${file/.txt/.trim}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

10.txt
1279.txt
153.txt
1634.txt
1729.txt
1.txt
5.txt
8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ for file in *.txt; do echo $file && cut -c 1-18 $file > ${file/.txt/.trim}; donne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwc  153.trim[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat 153.trim2[1Pwc  153.trimfor file in *.txt; do echo $file && cut -c 1-18 $file > ${file/.txt/.trim}; donne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwc  153.trim[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat 153.trim2[Kls[Kfor file in *.txt; do echo $file && cut -c 20-38 $file > ${file/.txt/.trim2}; ddone[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-38 $file > ${file/.txt/.trim2}; do[1Pne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C9-38 $file > ${file/.txt/.trim2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-38 $file > ${file/.txt/.trim2}; do[1Pne[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-38 $file > ${file/.txt/.trim2}; don[1Pe[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1-38 $file > ${file/.txt/.trim2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C9-38 $file > ${file/.txt/.trim2}; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

10.txt
1279.txt
153.txt
1634.txt
1729.txt
1.txt
5.txt
8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ wc 10.trim
 1  1 19 10.trim
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ wc 10.trim2
 1  1 20 10.trim2
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.trim
TGTTCTCACTACTACAAG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.trim2
CAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.txt
TGTTCTCACTACTACAAGCAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ wc 10.txt
 1  1 38 10.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
10.trim   1279.trim   153.trim   1634.trim   1729.trim   1.trim   5.trim   8128.trim   [0m[01;32mlys2.fasta[0m
10.trim2  1279.trim2  153.trim2  1634.trim2  1729.trim2  1.trim2  5.trim2  8128.trim2  test
10.txt    1279.txt    153.txt    1634.txt    1729.txt    1.txt    5.txt    8128.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.trim 10.tre[Kim2 > split1.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.txt
TGTTCTCACTACTACAAGCAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat split1.txt 
TGTTCTCACTACTACAAG
CAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat split1.txt [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvi split1.txt 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"split1.txt" 2L, 39C[>c[1;1HTGTTCTCACTACTACAAG
CAGAATCATTTNNNTACTG
[1m[34m~                                                                                                         [4;1H~                                                                                                         [5;1H~                                                                                                         [6;1H~                                                                                                         [7;1H~                                                                                                         [8;1H~                                                                                                         [9;1H~                                                                                                         [10;1H~                                                                                                         [11;1H~                                                                                                         [12;1H~                                                                                                         [13;1H~                                                                                                         [14;1H~                                                                                                         [15;1H~                                                                                                         [16;1H~                                                                                                         [17;1H~                                                                                                         [18;1H~                                                                                                         [19;1H~                                                                                                         [20;1H~                                                                                                         [21;1H~                                                                                                         [22;1H~                                                                                                         [23;1H~                                                                                                         [24;1H~                                                                                                         [25;1H~                                                                                                         [26;1H~                                                                                                         [27;1H~                                                                                                         [28;1H~                                                                                                         [29;1H~                                                                                                         [30;1H~                                                                                                         [m[31;89H1,1[11CAll[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;89H2[2;1H[?12l[?25h[?25l[31;1H[1m-- INSERT --[m[31;14H[K[31;89H2,1[11CAll[2;1H[?12l[?25h[?25l[1;19HCAGAATCATTTNNNTACTG
[1m[34m~                                                                                                         [m[31;89H1,19[1;19H[?12l[?25h[31;1H[K[1;18H[?25l[31;89H1,18[10CAll[1;18H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"split1.txt" 1L, 38C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ vi split1.txt [1@cat[C[C[C[C[C[C[C[C[C[C[C[C[5P10.txt
TGTTCTCACTACTACAAGCAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.txtvi split1.txt [1@cat[C[C[C[C[C[C[C[C[C[C[C[C
TGTTCTCACTACTACAAGCAGAATCATTTNNNTACTG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ diff 10.txt split1.txt 
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1.trim 5.trim2 > split1.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1.trim 5.trim2 > split1.txt[1P[1@1[1@0[C[C[C[C[C[C[C[1P[1@1[1@2[1@7[1@9[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P.txt2.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 10.trim 1279.trim2 > split2.txt[1P.txt3.txt[1P[1P[1P[1P[1@1[1@6[1@3[1@4[1P[1P[1@1[1@7[1@2[1@9
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat 1729.trim 1634.trim2 > split3.txt[1P.txt4.txt[1P[1P[1P[1P[1@1[1@5[1@3[1P[1P[1P[1P[1@8[1@1[1@2[1@8
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ ls
10.trim    1279.trim2  153.txt     1729.trim   1.trim2  5.txt       [0m[01;32mlys2.fasta[0m  split4.txt
10.trim2   1279.txt    1634.trim   1729.trim2  1.txt    8128.trim   split1.txt  test
10.txt     153.trim    1634.trim2  1729.txt    5.trim   8128.trim2  split2.txt
1279.trim  153.trim2   1634.txt    1.trim      5.trim2  8128.txt    split3.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat split1.txt 
TTAGTGTATAGAAATATA
GGCCCTCNNNNNNNCCCCT
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ c[Kvi split1.txt 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"split1.txt" 2L, 39C[>c[1;1HTTAGTGTATAGAAATATA
GGCCCTCNNNNNNNCCCCT
[1m[34m~                                                                                                         [4;1H~                                                                                                         [5;1H~                                                                                                         [6;1H~                                                                                                         [7;1H~                                                                                                         [8;1H~                                                                                                         [9;1H~                                                                                                         [10;1H~                                                                                                         [11;1H~                                                                                                         [12;1H~                                                                                                         [13;1H~                                                                                                         [14;1H~                                                                                                         [15;1H~                                                                                                         [16;1H~                                                                                                         [17;1H~                                                                                                         [18;1H~                                                                                                         [19;1H~                                                                                                         [20;1H~                                                                                                         [21;1H~                                                                                                         [22;1H~                                                                                                         [23;1H~                                                                                                         [24;1H~                                                                                                         [25;1H~                                                                                                         [26;1H~                                                                                                         [27;1H~                                                                                                         [28;1H~                                                                                                         [29;1H~                                                                                                         [30;1H~                                                                                                         [m[31;89H1,1[11CAll[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;89H2[2;1H[?12l[?25h[?25l[31;1H[1m-- INSERT --[m[31;14H[K[31;89H2,1[11CAll[2;1H[?12l[?25h[?25l[1;19HGGCCCTCNNNNNNNCCCCT
[1m[34m~                                                                                                         [m[31;89H1,19[1;19H[?12l[?25h[31;1H[K[1;18H[?25l[31;89H1,18[10CAll[1;18H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"split1.txt" 1L, 38C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ vi split2.txt 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"split2.txt" 2L, 39C[>c[1;1HTGTTCTCACTACTACAAG
TCCTTGGCAAATGCTTTCG
[1m[34m~                                                                                                         [4;1H~                                                                                                         [5;1H~                                                                                                         [6;1H~                                                                                                         [7;1H~                                                                                                         [8;1H~                                                                                                         [9;1H~                                                                                                         [10;1H~                                                                                                         [11;1H~                                                                                                         [12;1H~                                                                                                         [13;1H~                                                                                                         [14;1H~                                                                                                         [15;1H~                                                                                                         [16;1H~                                                                                                         [17;1H~                                                                                                         [18;1H~                                                                                                         [19;1H~                                                                                                         [20;1H~                                                                                                         [21;1H~                                                                                                         [22;1H~                                                                                                         [23;1H~                                                                                                         [24;1H~                                                                                                         [25;1H~                                                                                                         [26;1H~                                                                                                         [27;1H~                                                                                                         [28;1H~                                                                                                         [29;1H~                                                                                                         [30;1H~                                                                                                         [m[31;89H1,1[11CAll[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;1H[1m-- INSERT --[m[31;14H[K[31;89H1,1[11CAll[1;1H[?12l[?25h[?25l[31;89H2[2;1H[?12l[?25h[?25l[1;19HTCCTTGGCAAATGCTTTCG
[1m[34m~                                                                                                         [m[31;89H1,19[1;19H[?12l[?25h[31;1H[K[1;18H[?25l[31;89H1,18[10CAll[1;18H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"split2.txt" 1L, 38C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ v [Ki split3.txt 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"split3.txt" 2L, 39C[>c[1;1HCTGTTGGTGGTTCATTTG
CAAAACTTCGGTATAAAAC
[1m[34m~                                                                                                         [4;1H~                                                                                                         [5;1H~                                                                                                         [6;1H~                                                                                                         [7;1H~                                                                                                         [8;1H~                                                                                                         [9;1H~                                                                                                         [10;1H~                                                                                                         [11;1H~                                                                                                         [12;1H~                                                                                                         [13;1H~                                                                                                         [14;1H~                                                                                                         [15;1H~                                                                                                         [16;1H~                                                                                                         [17;1H~                                                                                                         [18;1H~                                                                                                         [19;1H~                                                                                                         [20;1H~                                                                                                         [21;1H~                                                                                                         [22;1H~                                                                                                         [23;1H~                                                                                                         [24;1H~                                                                                                         [25;1H~                                                                                                         [26;1H~                                                                                                         [27;1H~                                                                                                         [28;1H~                                                                                                         [29;1H~                                                                                                         [30;1H~                                                                                                         [m[31;89H1,1[11CAll[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;89H2[2;1H[?12l[?25h[?25l[31;1H[1m-- INSERT --[m[31;14H[K[31;89H2,1[11CAll[2;1H[?12l[?25h[?25l[1;19HCAAAACTTCGGTATAAAAC
[1m[34m~                                                                                                         [m[31;89H1,19[1;19H[?12l[?25h[31;1H[K[1;18H[?25l[31;89H1,18[10CAll[1;18H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"split3.txt" 1L, 38C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ vi split4.txt 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"split4.txt" 2L, 39C[>c[1;1HTATTCCAGGGCATTTGTT
CCGACTCGTTATGAAACGT
[1m[34m~                                                                                                         [4;1H~                                                                                                         [5;1H~                                                                                                         [6;1H~                                                                                                         [7;1H~                                                                                                         [8;1H~                                                                                                         [9;1H~                                                                                                         [10;1H~                                                                                                         [11;1H~                                                                                                         [12;1H~                                                                                                         [13;1H~                                                                                                         [14;1H~                                                                                                         [15;1H~                                                                                                         [16;1H~                                                                                                         [17;1H~                                                                                                         [18;1H~                                                                                                         [19;1H~                                                                                                         [20;1H~                                                                                                         [21;1H~                                                                                                         [22;1H~                                                                                                         [23;1H~                                                                                                         [24;1H~                                                                                                         [25;1H~                                                                                                         [26;1H~                                                                                                         [27;1H~                                                                                                         [28;1H~                                                                                                         [29;1H~                                                                                                         [30;1H~                                                                                                         [m[31;89H1,1[11CAll[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;89H2[2;1H[?12l[?25h[?25l[31;1H[1m-- INSERT --[m[31;14H[K[31;89H2,1[11CAll[2;1H[?12l[?25h[?25l[1;19HCCGACTCGTTATGAAACGT
[1m[34m~                                                                                                         [m[31;89H1,19[1;19H[?12l[?25h[31;1H[K[1;18H[?25l[31;89H1,18[10CAll[1;18H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"split4.txt" 1L, 38C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat spi[Klit1.txt 
TTAGTGTATAGAAATATAGGCCCTCNNNNNNNCCCCT
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat split2.txt 
TGTTCTCACTACTACAAGTCCTTGGCAAATGCTTTCG
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat s[lti[K[K[K[Kplit3.txt 
CTGTTGGTGGTTCATTTGCAAAACTTCGGTATAAAAC
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cd .[K[K[K[Kc[Kls ../Lys2/
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq[0m     [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cat split4.txt 
TATTCCAGGGCATTTGTTCCGACTCGTTATGAAACGT
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ TTAGTGTATAGAAATATAGGCCCTCNNNNNNNCCCCT[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls
10.trim    1279.trim2  153.txt     1729.trim   1.trim2  5.txt       [0m[01;32mlys2.fasta[0m  split4.txt
10.trim2   1279.txt    1634.trim   1729.trim2  1.txt    8128.trim   split1.txt  test
10.txt     153.trim    1634.trim2  1729.txt    5.trim   8128.trim2  split2.txt
1279.trim  153.trim2   1634.txt    1.trim      5.trim2  8128.txt    split3.txt
]0;amv69@login0b:~/splitFiles[amv69@login0b splitFiles]$ cd ../Lys2/
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ ls
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq[0m     [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ cp [K[K[Kcp lys2-117[K[K73R2_ME015_S15_R1_001.fastq ./test.fastq
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ vi test.fastq 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;31r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[31;1H"test.fastq" 77582312L, 2602752649C[>c[1;1H@NS500211:684:H2Y22BGXB:1:11101:10169:1068 1:N:0:ACTGAT
TTAGTGTATAGAAATATAGATTCCANNNNNNNATTCC
+
AAAAAEEAEEEEEEEEEEAEEAEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6442:1068 1:N:0:ACTGAT
GTAACCAGCTTCCTTAGCTAATTTGNNNNNNNCAGTT
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:21573:1069 1:N:0:ACTGAT
TTTAGAATTTGATTGATTTACCATGNNNNNNNCAGTC
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:25454:1069 1:N:0:ACTGAT
TTCTCGAAATTTCTATCTGGCCCTCNNNNNNNCCCCT
+
6AAAAEEEEEEEEEAEAEEEEEEEE#######EEEEA
@NS500211:684:H2Y22BGXB:1:11101:14308:1070 1:N:0:ACTGAT
CTGTGCAGAACCTTTCAATTGTGTTNNNNNNNACAAG
+
AAAAAEEEEEEEEEEEEEEEEEEEE#######EEEEE
@NS500211:684:H2Y22BGXB:1:11101:23652:1072 1:N:0:ACTGAT
ATAAAGAAAGCCGAAGTCGTCGAGANNGNNNNTTTTC
+
AAAAAEEEEEEEA/EEEEAEEEEEE##E####EA/EE
@NS500211:684:H2Y22BGXB:1:11101:3921:1073 1:N:0:ACTGAT
TAGAAGAACAGCATAATATTGCTACCNAANNNGCAGA
+
AAAAAEEEEEEEEEEEEEEEEEEEEE#EE###EEEEE
@NS500211:684:H2Y22BGXB:1:11101:6310:1073 1:N:0:ACTGAT
CAATAAAGAGTGTAAAATTGTGCTGANTGNNNAGTAC[31;89H1,1[11CTop[1;1H[?12l[?25h[?25l[31;89H2[2;1H[?12l[?25h[?25l[31;89H3[3;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[31;89H2[2;1H[?12l[?25h[?25l[31;91H2[2;2H[?12l[?25h[?25l[31;91H3[2;3H[?12l[?25h[?25l[31;91H4[2;4H[?12l[?25h[?25l[31;91H5[2;5H[?12l[?25h[?25l[31;91H6[2;6H[?12l[?25h[?25l[31;91H7[2;7H[?12l[?25h[?25l[31;91H8[2;8H[?12l[?25h[?25l[31;91H9[2;9H[?12l[?25h[?25l[31;91H10[2;10H[?12l[?25h[?25l[31;92H1[2;11H[?12l[?25h[?25l[31;92H2[2;12H[?12l[?25h[?25l[31;92H3[2;13H[?12l[?25h[?25l[31;92H4[2;14H[?12l[?25h[?25l[31;92H5[2;15H[?12l[?25h[?25l[31;92H6[2;16H[?12l[?25h[?25l[31;89H3,1 [3;1H[?12l[?25h[?25l[31;89H4,16[4;16H[?12l[?25h[?25l[31;89H5[5;16H[?12l[?25h[?25l[31;89H6[6;16H[?12l[?25h[?25l[31;89H7,1 [7;1H[?12l[?25h[?25l[31;89H8,16[8;16H[?12l[?25h[?25l[31;89H9[9;16H[?12l[?25h[?25l[31;89H10,16[10;16H[?12l[?25h[?25l[31;89H9,16 [9;16H[?12l[?25h[?25l[31;89H8[8;16H[?12l[?25h[?25l[31;89H7,1 [7;1H[?12l[?25h[?25l[31;89H6,16[6;16H[?12l[?25h[?25l[31;92H7[6;17H[?12l[?25h[?25l[31;92H8[6;18H[?12l[?25h[?25l[31;92H9[6;19H[?12l[?25h[?25l[31;91H20[6;20H[?12l[?25h[?25l[31;92H1[6;21H[?12l[?25h[?25l[31;92H2[6;22H[?12l[?25h[?25l[31;92H3[6;23H[?12l[?25h[?25l[31;92H4[6;24H[?12l[?25h[?25l[31;92H5[6;25H[?12l[?25h[?25l[31;92H6[6;26H[?12l[?25h[?25l[31;92H7[6;27H[?12l[?25h[?25l[31;92H8[6;28H[?12l[?25h[?25l[31;92H9[6;29H[?12l[?25h[?25l[31;91H30[6;30H[?12l[?25h[?25l[31;92H1[6;31H[?12l[?25h[?25l[31;92H2[6;32H[?12l[?25h[?25l[31;92H3[6;33H[?12l[?25h[?25l[31;92H4[6;34H[?12l[?25h[?25l[31;92H5[6;35H[?12l[?25h[?25l[31;92H6[6;36H[?12l[?25h[?25l[31;92H7[6;37H[?12l[?25h[?25l[31;1H[1m-- INSERT --[m[31;14H[K[31;89H6,37[10CTop[6;37H[?12l[?25h[?25l[31;92H8[6;38H[?12l[?25h[?25l[6;37H[K[31;92H7[6;37H[?12l[?25h[?25l[6;36H[K[31;92H6[6;36H[?12l[?25h[?25l[6;35H[K[31;92H5[6;35H[?12l[?25h[?25l[6;34H[K[31;92H4[6;34H[?12l[?25h[?25l[6;33H[K[31;92H3[6;33H[?12l[?25h[?25l[6;32H[K[31;92H2[6;32H[?12l[?25h[?25l[6;31H[K[31;92H1[6;31H[?12l[?25h[?25l[6;30H[K[31;92H0[6;30H[?12l[?25h[?25l[6;29H[K[31;91H29[6;29H[?12l[?25h[?25l[6;28H[K[31;92H8[6;28H[?12l[?25h[?25l[6;27H[K[31;92H7[6;27H[?12l[?25h[?25l[6;26H[K[31;92H6[6;26H[?12l[?25h[?25l[6;25H[K[31;92H5[6;25H[?12l[?25h[?25l[6;24H[K[31;92H4[6;24H[?12l[?25h[?25l[6;23H[K[31;92H3[6;23H[?12l[?25h[?25l[6;22H[K[31;92H2[6;22H[?12l[?25h[?25l[6;21H[K[31;92H1[6;21H[?12l[?25h[?25l[6;20H[K[31;92H0[6;20H[?12l[?25h[?25l[6;19H[K[31;91H19[6;19H[?12l[?25h[?25l[6;18H[K[31;92H8[6;18H[?12l[?25h[?25l[6;17H[K[31;92H7[6;17H[?12l[?25h[?25l[6;16H[K[31;92H6[6;16H[?12l[?25h[?25l[6;15H[K[31;92H5[6;15H[?12l[?25h[?25l[6;14H[K[31;92H4[6;14H[?12l[?25h[?25l[6;13H[K[31;92H3[6;13H[?12l[?25h[?25l[6;12H[K[31;92H2[6;12H[?12l[?25h[?25l[6;11H[K[31;92H1[6;11H[?12l[?25h[?25l[6;10H[K[31;92H0[6;10H[?12l[?25h[?25l[6;9H[K[31;91H9 [6;9H[?12l[?25h[?25l[6;8H[K[31;91H8[6;8H[?12l[?25h[?25l[6;7H[K[31;91H7[6;7H[?12l[?25h[?25l[6;6H[K[31;91H6[6;6H[?12l[?25h[?25l[6;5H[K[31;91H5[6;5H[?12l[?25h[?25l[6;4H[K[31;91H4[6;4H[?12l[?25h[?25l[6;3H[K[31;91H3[6;3H[?12l[?25h[?25l[6;2H[K[31;91H2[6;2H[?12l[?25h[?25l[6;1H[K[31;91H1[6;1H[?12l[?25h[?25lNNNNNCAGTT[31;92H1[6;11H[?12l[?25h[?25l[6;10H[K[31;92H0[6;10H[?12l[?25h[?25l[6;9H[K[31;91H9 [6;9H[?12l[?25h[?25l[6;8H[K[31;91H8[6;8H[?12l[?25h[?25l[6;7H[K[31;91H7[6;7H[?12l[?25h[?25l[6;6H[K[31;91H6[6;6H[?12l[?25h[?25l[6;5H[K[31;91H5[6;5H[?12l[?25h[?25l[6;4H[K[31;91H4[6;4H[?12l[?25h[?25l[6;3H[K[31;91H3[6;3H[?12l[?25h[?25l[6;2H[K[31;91H2[6;2H[?12l[?25h[?25l[6;1H[K[31;91H1[6;1H[?12l[?25h[?25lTTAGTGTATAGAAATATAGGCCCTCNNNNNNNCCCCT[31;91H38[6;38H[?12l[?25h[?25l[31;89H7,2 [7;2H[?12l[?25h[?25l[31;89H8,38[8;38H[?12l[?25h[?25l[31;89H9[9;38H[?12l[?25h[?25l[31;89H10,38[10;38H[?12l[?25h[?25l[10;37H[K[31;93H7[10;37H[?12l[?25h[?25l[10;36H[K[31;93H6[10;36H[?12l[?25h[?25l[10;35H[K[31;93H5[10;35H[?12l[?25h[?25l[10;34H[K[31;93H4[10;34H[?12l[?25h[?25l[10;33H[K[31;93H3[10;33H[?12l[?25h[?25l[10;32H[K[31;93H2[10;32H[?12l[?25h[?25l[10;31H[K[31;93H1[10;31H[?12l[?25h[?25l[10;30H[K[31;93H0[10;30H[?12l[?25h[?25l[10;29H[K[31;92H29[10;29H[?12l[?25h[?25l[10;28H[K[31;93H8[10;28H[?12l[?25h[?25l[10;27H[K[31;93H7[10;27H[?12l[?25h[?25l[10;26H[K[31;93H6[10;26H[?12l[?25h[?25l[10;25H[K[31;93H5[10;25H[?12l[?25h[?25l[10;24H[K[31;93H4[10;24H[?12l[?25h[?25l[10;23H[K[31;93H3[10;23H[?12l[?25h[?25l[10;22H[K[31;93H2[10;22H[?12l[?25h[?25l[10;21H[K[31;93H1[10;21H[?12l[?25h[?25l[10;20H[K[31;93H0[10;20H[?12l[?25h[?25l[10;19H[K[31;92H19[10;19H[?12l[?25h[?25l[10;18H[K[31;93H8[10;18H[?12l[?25h[?25l[10;17H[K[31;93H7[10;17H[?12l[?25h[?25l[10;16H[K[31;93H6[10;16H[?12l[?25h[?25l[10;15H[K[31;93H5[10;15H[?12l[?25h[?25l[10;14H[K[31;93H4[10;14H[?12l[?25h[?25l[10;13H[K[31;93H3[10;13H[?12l[?25h[?25l[10;12H[K[31;93H2[10;12H[?12l[?25h[?25l[10;11H[K[31;93H1[10;11H[?12l[?25h[?25l[10;10H[K[31;93H0[10;10H[?12l[?25h[?25l[10;9H[K[31;92H9 [10;9H[?12l[?25h[?25l[10;8H[K[31;92H8[10;8H[?12l[?25h[?25l[10;7H[K[31;92H7[10;7H[?12l[?25h[?25l[10;6H[K[31;92H6[10;6H[?12l[?25h[?25l[10;5H[K[31;92H5[10;5H[?12l[?25h[?25l[10;4H[K[31;92H4[10;4H[?12l[?25h[?25l[10;3H[K[31;92H3[10;3H[?12l[?25h[?25l[10;2H[K[31;92H2[10;2H[?12l[?25h[?25l[10;1H[K[31;92H1[10;1H[?12l[?25h[?25lTGTTCTCACTACTACAAGTCCTTGGCAAATGCTTTCG[31;92H38[10;38H[?12l[?25h[?25l[31;90H1,2 [11;2H[?12l[?25h[?25l[31;90H2,38[12;38H[?12l[?25h[?25l[31;90H3[13;38H[?12l[?25h[?25l[31;90H4[14;38H[?12l[?25h[?25l[14;37H[K[31;93H7[14;37H[?12l[?25h[?25l[14;36H[K[31;93H6[14;36H[?12l[?25h[?25l[14;35H[K[31;93H5[14;35H[?12l[?25h[?25l[14;34H[K[31;93H4[14;34H[?12l[?25h[?25l[14;33H[K[31;93H3[14;33H[?12l[?25h[?25l[14;32H[K[31;93H2[14;32H[?12l[?25h[?25l[14;31H[K[31;93H1[14;31H[?12l[?25h[?25l[14;30H[K[31;93H0[14;30H[?12l[?25h[?25l[14;29H[K[31;92H29[14;29H[?12l[?25h[?25l[14;28H[K[31;93H8[14;28H[?12l[?25h[?25l[14;27H[K[31;93H7[14;27H[?12l[?25h[?25l[14;26H[K[31;93H6[14;26H[?12l[?25h[?25l[14;25H[K[31;93H5[14;25H[?12l[?25h[?25l[14;24H[K[31;93H4[14;24H[?12l[?25h[?25l[14;23H[K[31;93H3[14;23H[?12l[?25h[?25l[14;22H[K[31;93H2[14;22H[?12l[?25h[?25l[14;21H[K[31;93H1[14;21H[?12l[?25h[?25l[14;20H[K[31;93H0[14;20H[?12l[?25h[?25l[14;19H[K[31;92H19[14;19H[?12l[?25h[?25l[14;18H[K[31;93H8[14;18H[?12l[?25h[?25l[14;17H[K[31;93H7[14;17H[?12l[?25h[?25l[14;16H[K[31;93H6[14;16H[?12l[?25h[?25l[14;15H[K[31;93H5[14;15H[?12l[?25h[?25l[14;14H[K[31;93H4[14;14H[?12l[?25h[?25l[14;13H[K[31;93H3[14;13H[?12l[?25h[?25l[14;12H[K[31;93H2[14;12H[?12l[?25h[?25l[14;11H[K[31;93H1[14;11H[?12l[?25h[?25l[14;10H[K[31;93H0[14;10H[?12l[?25h[?25l[14;9H[K[31;92H9 [14;9H[?12l[?25h[?25l[14;8H[K[31;92H8[14;8H[?12l[?25h[?25l[14;7H[K[31;92H7[14;7H[?12l[?25h[?25l[14;6H[K[31;92H6[14;6H[?12l[?25h[?25l[14;5H[K[31;92H5[14;5H[?12l[?25h[?25l[14;4H[K[31;92H4[14;4H[?12l[?25h[?25l[14;3H[K[31;92H3[14;3H[?12l[?25h[?25l[14;2H[K[31;92H2[14;2H[?12l[?25h[?25l[14;1H[K[31;92H1[14;1H[?12l[?25h[?25lCTGTTGGTGGTTCATTTGCAAAACTTCGGTATAAAAC[31;92H38[14;38H[?12l[?25h[?25l[31;90H5,2 [15;2H[?12l[?25h[?25l[31;90H6,38[16;38H[?12l[?25h[?25l[31;90H7[17;38H[?12l[?25h[?25l[31;90H8[18;38H[?12l[?25h[?25l[18;37H[K[31;93H7[18;37H[?12l[?25h[?25l[18;36H[K[31;93H6[18;36H[?12l[?25h[?25l[18;35H[K[31;93H5[18;35H[?12l[?25h[?25l[18;34H[K[31;93H4[18;34H[?12l[?25h[?25l[18;33H[K[31;93H3[18;33H[?12l[?25h[?25l[18;32H[K[31;93H2[18;32H[?12l[?25h[?25l[18;31H[K[31;93H1[18;31H[?12l[?25h[?25l[18;30H[K[31;93H0[18;30H[?12l[?25h[?25l[18;29H[K[31;92H29[18;29H[?12l[?25h[?25l[18;28H[K[31;93H8[18;28H[?12l[?25h[?25l[18;27H[K[31;93H7[18;27H[?12l[?25h[?25l[18;26H[K[31;93H6[18;26H[?12l[?25h[?25l[18;25H[K[31;93H5[18;25H[?12l[?25h[?25l[18;24H[K[31;93H4[18;24H[?12l[?25h[?25l[18;23H[K[31;93H3[18;23H[?12l[?25h[?25l[18;22H[K[31;93H2[18;22H[?12l[?25h[?25l[18;21H[K[31;93H1[18;21H[?12l[?25h[?25l[18;20H[K[31;93H0[18;20H[?12l[?25h[?25l[18;19H[K[31;92H19[18;19H[?12l[?25h[?25l[18;18H[K[31;93H8[18;18H[?12l[?25h[?25l[18;17H[K[31;93H7[18;17H[?12l[?25h[?25l[18;16H[K[31;93H6[18;16H[?12l[?25h[?25l[18;15H[K[31;93H5[18;15H[?12l[?25h[?25l[18;14H[K[31;93H4[18;14H[?12l[?25h[?25l[18;13H[K[31;93H3[18;13H[?12l[?25h[?25l[18;12H[K[31;93H2[18;12H[?12l[?25h[?25l[18;11H[K[31;93H1[18;11H[?12l[?25h[?25l[18;10H[K[31;93H0[18;10H[?12l[?25h[?25l[18;9H[K[31;92H9 [18;9H[?12l[?25h[?25l[18;8H[K[31;92H8[18;8H[?12l[?25h[?25l[18;7H[K[31;92H7[18;7H[?12l[?25h[?25l[18;6H[K[31;92H6[18;6H[?12l[?25h[?25l[18;5H[K[31;92H5[18;5H[?12l[?25h[?25l[18;4H[K[31;92H4[18;4H[?12l[?25h[?25l[18;3H[K[31;92H3[18;3H[?12l[?25h[?25l[18;2H[K[31;92H2[18;2H[?12l[?25h[?25l[18;1H[K[31;92H1[18;1H[?12l[?25h[?25lTATTCCAGGGCATTTGTTCCGACTCGTTATGAAACGT[31;92H38[18;38H[?12l[?25h[31;1H[K[18;37H[?25l[31;89H18,37[9CTop[18;37H[?12l[?25h[?25l[31;89H[K[31;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"test.fastq"^[  :wq
 77582312L, 2602752649C written
[?1l>[?12l[?25h[?1049l]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ ls
[0m[01;32malignment.sh[0m     chrII_lys_ty.fa.pac                   [01;32mlys2-173R2_ME015_S15_raw.bw[0m
chrII_est.txt    chrII_seq.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam[0m
chrII.fa         chrII_ty1.fa                          [01;32mlys2-173R2_ME015_S15.sorted.bam.bai[0m
chrII.fa.amb     [01;32mfragment_lengths.sh[0m                   [01;32mlys2-173R2_ME016_S16_R1_001.fastq.gz[0m
chrII.fa.ann     [01;32mfragmentSizes_input.png[0m               [01;32mlys2-173R2_ME016_S16_R2_001.fastq.gz[0m
chrII.fa.bwt     [01;32minput_adjusted_reads_per_million.sh[0m   [01;32mlys2-173R2_ME016_S16_raw.bw[0m
chrII.fa.pac     [01;32mlys2-128delta_ME013_S13_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam[0m
chrII.fa.sa      [01;32mlys2-128delta_ME014_S14_raw.bw[0m        [01;32mlys2-173R2_ME016_S16.sorted.bam.bai[0m
chrII_lys2.fa    [01;32mlys2-173R2_ME015_S15_R1_001.fastq[0m     [01;32mreadme.txt[0m
chrII_lys_ty.fa  [01;32mlys2-173R2_ME015_S15_R2_001.fastq.gz[0m  [01;32mtest.fastq[0m
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ speedseq
bash: speedseq: command not found
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ export PATH=$PATH:/[K~/speedseq/bin
]0;amv69@login0b:~/Lys2[amv69@login0b Lys2]$ speedseq [K[K[K[K[K[K[K[K[Kcd ..
]0;amv69@login0b:~[amv69@login0b ~]$ ls
[0m[01;34mfasta[0m   [34;42mLys2[0m      [01;34mminiconda3[0m  rnaSeq.py                    [01;34mspeedseq[0m    [01;35mtest.png[0m
[01;34mGithub[0m  [01;34mlys2Test[0m  [01;34mreads[0m       [01;31mroot_v6.18.00.source.tar.gz[0m  [01;34msplitFiles[0m
]0;amv69@login0b:~[amv69@login0b ~]$ ls L[Klys2Test/
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam                  lys_ty.fa.amb
lys2-173R2_ME015_S15_R1_001.fastq.gz.bam.bai              lys_ty.fa.ann
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam      lys_ty.fa.bwt
lys2-173R2_ME015_S15_R1_001.fastq.gz.discordants.bam.bai  lys_ty.fa.pac
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam        lys_ty.fa.sa
lys2-173R2_ME015_S15_R1_001.fastq.gz.splitters.bam.bai    new.fa
lys_ty.fa
]0;amv69@login0b:~[amv69@login0b ~]$ rm [K[K[Kmkdir t[K[K new [K[K[K[Klys@[K2Split
]0;amv69@login0b:~[amv69@login0b ~]$ cd lys2Split/
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ speedseq -i -r[KR "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/
alignment.sh                          input_adjusted_reads_per_million.sh
chrII_est.txt                         lys2-128delta_ME013_S13_raw.bw
chrII.fa                              lys2-128delta_ME014_S14_raw.bw
chrII.fa.amb                          lys2-173R2_ME015_S15_R1_001.fastq
chrII.fa.ann                          lys2-173R2_ME015_S15_R2_001.fastq.gz
chrII.fa.bwt                          lys2-173R2_ME015_S15_raw.bw
chrII.fa.pac                          lys2-173R2_ME015_S15.sorted.bam
chrII.fa.sa                           lys2-173R2_ME015_S15.sorted.bam.bai
chrII_lys2.fa                         lys2-173R2_ME016_S16_R1_001.fastq.gz
chrII_lys_ty.fa                       lys2-173R2_ME016_S16_R2_001.fastq.gz
chrII_lys_ty.fa.pac                   lys2-173R2_ME016_S16_raw.bw
chrII_seq.fa                          lys2-173R2_ME016_S16.sorted.bam
chrII_ty1.fa                          lys2-173R2_ME016_S16.sorted.bam.bai
fragment_lengths.sh                   readme.txt
fragmentSizes_input.png               test.fastq
[amv69@login0b lys2Split]$ speedseq -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa test.f as[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cf a[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K~/fastaa/[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[KLys2//fas[K[K[Ktest.fastq lys2-1[K[K[K[K[K[K~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz 
/ihome/ckaplan/amv69/speedseq/bin/speedseq: illegal option -- i

Program: speedseq
Version: 0.1.2
Author: Colby Chiang (cc2qe@virginia.edu)

usage:   speedseq <command> [options]

command: align    align FASTQ files with BWA-MEM
         var      call SNV and indel variants with FreeBayes
         somatic  call somatic SNV and indel variants in a tumor/normal pair with FreeBayes
         sv       call SVs with LUMPY
         realign  realign from a coordinate sorted BAM file

options: -h       show this message

]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ speedseq -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2//test.fastq ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Sourcing executables from /ihome/ckaplan/amv69/speedseq/bin/speedseq.config ...
Aligning...

        mkdir -p test.fastq.Wt5UqRIdz1iZ/full test.fastq.Wt5UqRIdz1iZ/spl test.fastq.Wt5UqRIdz1iZ/disc
        mkfifo test.fastq.Wt5UqRIdz1iZ/spl_pipe test.fastq.Wt5UqRIdz1iZ/disc_pipe

        /ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1  -R '@RG	ID:NA12878.S1	SM:NA12878	LB:lib1' /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/test.fastq /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz | \
            /ihome/ckaplan/amv69/speedseq//bin/samblaster  --addMateTags --maxSplitCount 2 --minNonOverlap 20 --splitterFile test.fastq.Wt5UqRIdz1iZ/spl_pipe --discordantFile test.fastq.Wt5UqRIdz1iZ/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 1 -m 18G --tmpdir=test.fastq.Wt5UqRIdz1iZ/full -o test.fastq.bam /dev/stdin

        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" test.fastq.Wt5UqRIdz1iZ/spl_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam -l 0 /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=test.fastq.Wt5UqRIdz1iZ/spl -o test.fastq.splitters.bam /dev/stdin
        gawk '{ if ($0~"^@") { print; next } else { $10="*"; $11="*"; print } }' OFS="	" test.fastq.Wt5UqRIdz1iZ/disc_pipe | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba view -S -f bam /dev/stdin | \
            /ihome/ckaplan/amv69/speedseq//bin/sambamba sort -t 4 -m 1G --tmpdir=test.fastq.Wt5UqRIdz1iZ/disc -o test.fastq.discordants.bam /dev/stdin
^Z
[1]+  Stopped                 speedseq align -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ bg
[1]+ speedseq align -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ jobs
[1]+  Running                 speedseq align -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ jobs
[1]+  Running                 speedseq align -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz &
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening test.fastq.Wt5UqRIdz1iZ/disc_pipe for write.
samblaster: Opening test.fastq.Wt5UqRIdz1iZ/spl_pipe for write.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6416, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (169.01, 76.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.444 CPU sec, 3.444 real sec
samblaster: Loaded 1 header sequence entries.
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6171, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.09, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.466 CPU sec, 3.466 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6528, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.68, 77.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.488 CPU sec, 3.488 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.96, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.579 CPU sec, 3.579 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6536, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.82, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.449 CPU sec, 3.449 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6482, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.35, 75.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.476 CPU sec, 3.476 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6410, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 222)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (171.76, 78.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 546)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.435 CPU sec, 3.435 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6521, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (170.97, 77.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.470 CPU sec, 3.470 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.54, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.436 CPU sec, 3.436 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6378, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.62, 76.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.496 CPU sec, 3.496 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6418, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (168.76, 77.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.527 CPU sec, 3.526 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6436, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.48, 77.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.594 CPU sec, 3.594 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (167.68, 74.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 514)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.504 CPU sec, 3.504 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.19, 76.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.449 CPU sec, 3.449 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6323, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (171.35, 77.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 534)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.448 CPU sec, 3.448 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.28, 74.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.498 CPU sec, 3.498 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6306, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (166.40, 74.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.460 CPU sec, 3.460 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6517, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (167.44, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.462 CPU sec, 3.462 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.77, 74.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.462 CPU sec, 3.462 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6547, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.76, 75.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.448 CPU sec, 3.448 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6259, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (166.53, 76.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.468 CPU sec, 3.469 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6498, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.87, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.490 CPU sec, 3.490 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.77, 76.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.509 CPU sec, 3.509 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.524 CPU sec, 3.524 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6432, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.48, 75.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.471 CPU sec, 3.471 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6265, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.95, 73.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.638 CPU sec, 3.638 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6344, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.87, 77.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.586 CPU sec, 3.586 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.77, 75.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.582 CPU sec, 3.581 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6392, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (167.62, 76.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.477 CPU sec, 3.477 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6447, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.87, 75.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.578 CPU sec, 3.578 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6396, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.80, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.582 CPU sec, 3.582 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (166.60, 74.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.604 CPU sec, 3.604 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6398, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.44, 77.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.527 CPU sec, 3.526 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6449, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.565 CPU sec, 3.565 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6360, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (166.31, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.563 CPU sec, 3.563 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.33, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.550 CPU sec, 3.550 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 6404, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 74.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.575 CPU sec, 3.575 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6464, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.35, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.516 CPU sec, 3.516 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6389, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.69, 76.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.471 CPU sec, 3.471 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.67, 78.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.528 CPU sec, 3.528 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6374, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.556 CPU sec, 3.556 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6437, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.79, 77.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.471 CPU sec, 3.471 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6383, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.74, 76.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.528 CPU sec, 3.528 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6414, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.83, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.539 CPU sec, 3.539 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (169.54, 76.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.485 CPU sec, 3.485 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6502, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 223)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 443)
[M::mem_pestat] mean and std.dev: (172.19, 79.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 553)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.512 CPU sec, 3.512 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6597, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.41, 76.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.612 CPU sec, 3.612 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6425, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (167.02, 74.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.524 CPU sec, 3.524 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6319, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.17, 76.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.585 CPU sec, 3.585 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6441, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 431)
[M::mem_pestat] mean and std.dev: (170.03, 78.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 537)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.534 CPU sec, 3.534 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.70, 77.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.565 CPU sec, 3.565 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6496, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 159, 221)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 437)
[M::mem_pestat] mean and std.dev: (171.43, 79.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 545)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.629 CPU sec, 3.629 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6479, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (169.90, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.518 CPU sec, 3.518 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6488, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 77.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.476 CPU sec, 3.475 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6393, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.07, 74.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.481 CPU sec, 3.481 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6240, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.02, 74.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.582 CPU sec, 3.582 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6515, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.66, 77.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.688 CPU sec, 3.688 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6509, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 415)
[M::mem_pestat] mean and std.dev: (166.16, 73.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 516)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.486 CPU sec, 3.486 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.46, 76.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.534 CPU sec, 3.534 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6280, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.85, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.461 CPU sec, 3.461 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6365, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (167.98, 75.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.531 CPU sec, 3.531 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.91, 76.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.506 CPU sec, 3.506 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6340, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.27, 75.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.526 CPU sec, 3.526 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6440, 5, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.99, 74.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.495 CPU sec, 3.495 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6483, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.02, 74.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.491 CPU sec, 3.491 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6509, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.56, 75.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.475 CPU sec, 3.475 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6378, 0, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 153, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.55, 75.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.564 CPU sec, 3.564 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6507, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.95, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.493 CPU sec, 3.493 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6346, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.87, 77.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.578 CPU sec, 3.578 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.80, 76.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.490 CPU sec, 3.490 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6427, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.32, 75.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.601 CPU sec, 3.601 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6491, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (167.66, 75.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.507 CPU sec, 3.507 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6245, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.48, 76.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.530 CPU sec, 3.530 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6489, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.95, 77.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.536 CPU sec, 3.536 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (167.75, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.524 CPU sec, 3.524 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6363, 1, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.55, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.550 CPU sec, 3.550 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6419, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.59, 75.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.458 CPU sec, 3.458 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6420, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (168.71, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.559 CPU sec, 3.559 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.08, 76.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.507 CPU sec, 3.507 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (167.45, 75.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.507 CPU sec, 3.507 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.68, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.523 CPU sec, 3.523 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6497, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.66, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.530 CPU sec, 3.530 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6308, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (170.19, 77.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.525 CPU sec, 3.524 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6337, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.68, 76.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.489 CPU sec, 3.489 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.72, 75.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.487 CPU sec, 3.487 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6338, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (169.93, 76.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.621 CPU sec, 3.621 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6385, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.602 CPU sec, 3.602 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (116, 159, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (170.96, 76.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.571 CPU sec, 3.571 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6216, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (167.90, 75.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.561 CPU sec, 3.561 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6355, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (170.27, 78.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.518 CPU sec, 3.518 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6552, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 420)
[M::mem_pestat] mean and std.dev: (166.83, 75.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.540 CPU sec, 3.540 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6349, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.09, 75.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.497 CPU sec, 3.497 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6403, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 414)
[M::mem_pestat] mean and std.dev: (165.66, 74.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 515)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.551 CPU sec, 3.551 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6472, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 411)
[M::mem_pestat] mean and std.dev: (165.73, 74.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 511)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.552 CPU sec, 3.552 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6415, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (168.97, 77.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.538 CPU sec, 3.538 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6302, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.94, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.609 CPU sec, 3.609 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6297, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.48, 77.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.631 CPU sec, 3.631 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6426, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (165.87, 74.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.525 CPU sec, 3.525 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.73, 76.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.581 CPU sec, 3.581 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6249, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (168.16, 75.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.580 CPU sec, 3.580 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6512, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 76.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.551 CPU sec, 3.551 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6506, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (167.04, 76.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.607 CPU sec, 3.607 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6470, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.54, 75.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.555 CPU sec, 3.555 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6297, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (169.26, 76.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.562 CPU sec, 3.562 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6364, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 160, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 434)
[M::mem_pestat] mean and std.dev: (171.78, 78.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 541)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.516 CPU sec, 3.516 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.09, 74.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.530 CPU sec, 3.530 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6456, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (167.72, 75.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.548 CPU sec, 3.548 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6331, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 158, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (170.93, 77.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 538)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.622 CPU sec, 3.622 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6434, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (168.98, 76.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.560 CPU sec, 3.560 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6480, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.88, 77.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.503 CPU sec, 3.502 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.94, 76.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.504 CPU sec, 3.504 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6247, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.30, 75.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.449 CPU sec, 3.449 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6253, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (169.42, 78.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 543)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.544 CPU sec, 3.544 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6488, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (170.05, 77.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.489 CPU sec, 3.489 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6351, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 158, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (170.72, 76.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.461 CPU sec, 3.461 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6447, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.30, 74.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.440 CPU sec, 3.439 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6375, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (169.28, 76.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.459 CPU sec, 3.459 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6392, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 425)
[M::mem_pestat] mean and std.dev: (169.16, 76.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 529)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.557 CPU sec, 3.557 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6459, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.25, 76.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.497 CPU sec, 3.497 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6446, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 157, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.51, 76.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.486 CPU sec, 3.486 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6383, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 428)
[M::mem_pestat] mean and std.dev: (169.17, 76.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 533)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.457 CPU sec, 3.457 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6382, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (169.72, 76.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 530)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.446 CPU sec, 3.446 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 6370, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.71, 75.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.443 CPU sec, 3.443 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6239, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 219)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)
[M::mem_pestat] mean and std.dev: (168.73, 76.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 540)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.477 CPU sec, 3.477 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6458, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (168.12, 75.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.474 CPU sec, 3.474 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6304, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 158, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 430)
[M::mem_pestat] mean and std.dev: (168.48, 75.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 536)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.441 CPU sec, 3.441 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6401, 2, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 413)
[M::mem_pestat] mean and std.dev: (166.76, 73.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 513)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.477 CPU sec, 3.477 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6428, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 427)
[M::mem_pestat] mean and std.dev: (169.24, 76.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 532)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.473 CPU sec, 3.472 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6373, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 421)
[M::mem_pestat] mean and std.dev: (166.67, 75.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 524)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.460 CPU sec, 3.460 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6365, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (167.61, 76.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.441 CPU sec, 3.441 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6499, 2, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 422)
[M::mem_pestat] mean and std.dev: (168.76, 76.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 525)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.439 CPU sec, 3.438 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6381, 3, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 155, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.40, 75.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.488 CPU sec, 3.488 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6341, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 156, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.88, 75.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.447 CPU sec, 3.447 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (168.14, 75.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 521)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.484 CPU sec, 3.484 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6474, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.27, 74.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.472 CPU sec, 3.472 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6466, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (110, 154, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 419)
[M::mem_pestat] mean and std.dev: (166.26, 75.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 522)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.531 CPU sec, 3.531 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6365, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 424)
[M::mem_pestat] mean and std.dev: (167.75, 77.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 528)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.517 CPU sec, 3.517 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 6409, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 157, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 423)
[M::mem_pestat] mean and std.dev: (168.40, 75.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 526)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.552 CPU sec, 3.552 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6367, 3, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 158, 217)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 429)
[M::mem_pestat] mean and std.dev: (169.44, 77.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 535)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.549 CPU sec, 3.549 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6478, 1, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 155, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 426)
[M::mem_pestat] mean and std.dev: (168.00, 78.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 531)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.551 CPU sec, 3.551 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6408, 0, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 157, 218)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 432)
[M::mem_pestat] mean and std.dev: (169.27, 77.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 539)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.555 CPU sec, 3.555 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 6332, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (111, 153, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 417)
[M::mem_pestat] mean and std.dev: (165.38, 74.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 519)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.577 CPU sec, 3.577 real sec
[M::main_mem] read 270272 sequences (10000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 6551, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (112, 154, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 418)
[M::mem_pestat] mean and std.dev: (166.65, 75.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 520)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 270272 reads in 3.519 CPU sec, 3.519 real sec
[M::main_mem] read 142260 sequences (5263620 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 3393, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (113, 155, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 416)
[M::mem_pestat] mean and std.dev: (167.49, 75.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 517)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 142260 reads in 1.926 CPU sec, 1.926 real sec
[main] Version: 0.7.10-r789
[main] CMD: /ihome/ckaplan/amv69/speedseq//bin/bwa memsamblaster: Output 15036 discordant read pairs to test.fastq.Wt5UqRIdz1iZ/disc_pipe
 -tsamblaster: Output 0 split reads to test.fastq.Wt5UqRIdz1iZ/spl_pipe
 1 -R @RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1samblaster: Marked 123657 of 19395578 (0.64%) read ids as duplicates /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/test.fastq /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz using 24448k memory in 20.183S
[main] Real time: 570.965 sec; CPU: 548.248 sec
 CPU seconds and 9M31S(571S) wall time.

        /ihome/ckaplan/amv69/speedseq//bin/sambamba index test.fastq.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index test.fastq.discordants.bam
            /ihome/ckaplan/amv69/speedseq//bin/sambamba index test.fastq.splitters.bam
Done
v
bash: v: command not found
[1]+  Done                    speedseq align -i -R "@RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1" ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ ls
test.fastq.bam      test.fastq.discordants.bam      test.fastq.splitters.bam
test.fastq.bam.bai  test.fastq.discordants.bam.bai  test.fastq.splitters.bam.bai
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ ls -hal
total 1.2G
drwxr-xr-x  2 amv69 ckaplan  248 Jul 24 09:22 [0m[01;34m.[0m
drwxr-xr-x 23 amv69 ckaplan 1001 Jul 24 09:08 [01;34m..[0m
-rw-r--r--  1 amv69 ckaplan 891M Jul 24 09:22 test.fastq.bam
-rw-r--r--  1 amv69 ckaplan 2.6K Jul 24 09:22 test.fastq.bam.bai
-rw-r--r--  1 amv69 ckaplan 724K Jul 24 09:20 test.fastq.discordants.bam
-rw-r--r--  1 amv69 ckaplan 1.9K Jul 24 09:22 test.fastq.discordants.bam.bai
-rw-r--r--  1 amv69 ckaplan  425 Jul 24 09:20 test.fastq.splitters.bam
-rw-r--r--  1 amv69 ckaplan   24 Jul 24 09:22 test.fastq.splitters.bam.bai
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ samtools view test.fastq.splitters.bam
bash: samtools: command not found
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ conda activate rnaseq
bash: conda: command not found
]0;amv69@login0b:~/lys2Split[amv69@login0b lys2Split]$ conda[K[K[K[K[Ksrun -n 1 -t 4:00:00 --pty bash
]0;amv69@login0b:~/lys2Split[?1034h[amv69@n419 lys2Split]$ conda activate rnaseq
bash: conda: command not found
]0;amv69@login0b:~/lys2Split[amv69@n419 lys2Split]$ conda activate rnaseq[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmodue[Kle load conda
[1;31mLmod has detected the following error: [0m The following module(s) are unknown: "conda"

Please check the spelling or version number. Also try "module spider ..."



]0;amv69@login0b:~/lys2Split[amv69@n419 lys2Split]$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
--2019-07-24 09:24:31--  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
Resolving repo.anaconda.com (repo.anaconda.com)... 104.16.130.3, 104.16.131.3, 2606:4700::6810:8203, ...
Connecting to repo.anaconda.com (repo.anaconda.com)|104.16.130.3|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 70348401 (67M) [application/x-sh]
Saving to: ‘Miniconda3-latest-Linux-x86_64.sh’

 0% [                                                                 ] 0           --.-K/s              23% [=============>                                                   ] 16,186,075  77.1MB/s             58% [=====================================>                           ] 41,196,251  98.2MB/s             100%[================================================================>] 70,348,401   112MB/s   in 0.6s   

2019-07-24 09:24:32 (112 MB/s) - ‘Miniconda3-latest-Linux-x86_64.sh’ saved [70348401/70348401]

]0;amv69@login0b:~/lys2Split[amv69@n419 lys2Split]$ sh Miniconda3-latest-Linux-x86_64.sh

Welcome to Miniconda3 4.6.14

In order to continue the installation process, please review the license
agreement.
Please, press ENTER to continue
>>> 
===================================
Miniconda End User License Agreement
===================================

Copyright 2015, Anaconda, Inc.

All rights reserved under the 3-clause BSD License:

Redistribution and use in source and binary forms, with or without modification, are permitted provided th
at the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this list of conditions and the
 following disclaimer.
  * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and 
the following disclaimer in the documentation and/or other materials provided with the distribution.
  * Neither the name of Anaconda, Inc. ("Anaconda, Inc.") nor the names of its contributors may be used to
 endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTIC
ULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ANACONDA, INC. BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENT
AL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
ORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISI
NG IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Notice of Third Party Software Licenses
=======================================

Miniconda contains open source software packages from third parties. These are available on an "as is" bas
[7m--More--[27mis and subject to their individual license agreements. These licenses are available in Anaconda Distributi
[7m--More--[27mon or at http://docs.anaconda.com/anaconda/pkg-docs. Any binary packages of these third party tools you ob
[7m--More--[27mtain via Anaconda Distribution are subject to their individual licenses as well as the Anaconda license. A
[7m--More--[27mnaconda, Inc. reserves the right to change which third party tools are provided in Miniconda.

Cryptography Notice
===================

This distribution includes cryptographic software. The country in which you currently reside may have rest
rictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFO
RE using any encryption software, please check your country's laws, regulations and policies concerning th
e import, possession, or use, and re-export of encryption software, to see if this is permitted. See the W
assenaar Arrangement http://www.wassenaar.org/ for more information.

Anaconda, Inc. has self-classified this software as Export Commodity Control Number (ECCN) 5D992b, which i
ncludes mass market information security software using or performing cryptographic functions with asymmet
ric algorithms. No license is required for export of this software to non-embargoed countries. In addition
, the Intel(TM) Math Kernel Library contained in Anaconda, Inc.'s software is classified by Intel(TM) as E
CCN 5D992b with no license required for export to non-embargoed countries.

The following packages are included in this distribution that relate to cryptography:

openssl
    The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured, an
d Open Source toolkit implementing the Transport Layer Security (TLS) and Secure Sockets Layer (SSL) proto
cols as well as a full-strength general purpose cryptography library.

pycrypto
    A collection of both secure hash functions (such as SHA256 and RIPEMD160), and various encryption algo
rithms (AES, DES, RSA, ElGamal, etc.).

pyopenssl
    A thin Python wrapper around (a subset of) the OpenSSL library.
[7m--More--[27m[K
kerberos (krb5, non-Windows platforms)
    A network authentication protocol designed to provide strong authentication for client/server applicat
ions by using secret-key cryptography.

cryptography
    A Python library which exposes cryptographic recipes and primitives.


Do you accept the license terms? [yes|no]
[no] >>>   yes

Miniconda3 will now be installed into this location:
/ihome/ckaplan/amv69/miniconda3

  - Press ENTER to confirm the location
  - Press CTRL-C to abort the installation
  - Or specify a different location below

[/ihome/ckaplan/amv69/miniconda3] >>> 
ERROR: File or directory already exists: '/ihome/ckaplan/amv69/miniconda3'
If you want to update an existing installation, use the -u option.
]0;amv69@login0b:~/lys2Split[amv69@n419 lys2Split]$ path[K[K[K[Kpath[K[K[K[Kexport PATH:$PATH:/[K[K[K[K[K[K[K[K="$PATH:/miniconda3/bin"~/miniconda3/bin"
]0;amv69@login0b:~/lys2Split[amv69@n419 lys2Split]$ ls ..
[0m[01;34mfasta[0m   [34;42mLys2[0m       [01;34mlys2Test[0m    [01;34mreads[0m      [01;31mroot_v6.18.00.source.tar.gz[0m  [01;34msplitFiles[0m
[01;34mGithub[0m  [01;34mlys2Split[0m  [01;34mminiconda3[0m  rnaSeq.py  [01;34mspeedseq[0m                     [01;35mtest.png[0m
]0;amv69@login0b:~/lys2Split[amv69@n419 lys2Split]$ ls mni[K[K[K[K[K[Kcd ..
]0;amv69@login0b:~[amv69@n419 ~]$ ls miniconda3/
[0m[01;34mbin[0m              [01;34mcondabin[0m    [01;34menvs[0m  [01;34minclude[0m  [01;34mlibexec[0m      [01;34mman[0m   [01;34mshare[0m  [01;34mssl[0m
[01;34mcompiler_compat[0m  [01;34mconda-meta[0m  [01;34metc[0m   [01;34mlib[0m      LICENSE.txt  [01;34mpkgs[0m  [01;34mshell[0m  [01;34mx86_64-conda_cos6-linux-gnu[0m
]0;amv69@login0b:~[amv69@n419 ~]$ ls miniconda3/[K[K[K[K[K[K[K[K[K[K[K[K[K[Kconda activate rns[Kaseq

CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
To initialize your shell, run

    $ conda init <SHELL_NAME>

Currently supported shells are:
  - bash
  - fish
  - tcsh
  - xonsh
  - zsh
  - powershell

See 'conda init --help' for more information and options.

IMPORTANT: You may need to close and restart your shell after running 'conda init'.


]0;amv69@login0b:~[amv69@n419 ~]$ conda init
no change     /ihome/ckaplan/amv69/miniconda3/condabin/conda
no change     /ihome/ckaplan/amv69/miniconda3/bin/conda
no change     /ihome/ckaplan/amv69/miniconda3/bin/conda-env
no change     /ihome/ckaplan/amv69/miniconda3/bin/activate
no change     /ihome/ckaplan/amv69/miniconda3/bin/deactivate
no change     /ihome/ckaplan/amv69/miniconda3/etc/profile.d/conda.sh
no change     /ihome/ckaplan/amv69/miniconda3/etc/fish/conf.d/conda.fish
no change     /ihome/ckaplan/amv69/miniconda3/shell/condabin/Conda.psm1
no change     /ihome/ckaplan/amv69/miniconda3/shell/condabin/conda-hook.ps1
no change     /ihome/ckaplan/amv69/miniconda3/lib/python3.7/site-packages/xontrib/conda.xsh
no change     /ihome/ckaplan/amv69/miniconda3/etc/profile.d/conda.csh
modified      /ihome/ckaplan/amv69/.bashrc

==> For changes to take effect, close and re-open your current shell. <==

]0;amv69@login0b:~[amv69@n419 ~]$ conda initactivate rnaseqinit[Kactivate rnaseq[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pls miniconda3/[9Pcd ..ls[C[C[Ccd[C[C[Cls miniconda3/conda activate rnaseqinit[K[Ksource .[K/.ab[K[Kbashrc
bash: /.bashrc: No such file or directory
]0;amv69@login0b:~[amv69@n419 ~]$ source /.bashrc~/.bashrc
]0;amv69@login0b:~(base) [amv69@n419 ~]$ source ~/.bashrc[1P/.bashrc[5Pconda initactivate rnaseq
]0;amv69@login0b:~(rnaseq) [amv69@n419 ~]$ ls
[0m[01;34mfasta[0m   [34;42mLys2[0m       [01;34mlys2Test[0m    [01;34mreads[0m      [01;31mroot_v6.18.00.source.tar.gz[0m  [01;34msplitFiles[0m
[01;34mGithub[0m  [01;34mlys2Split[0m  [01;34mminiconda3[0m  rnaSeq.py  [01;34mspeedseq[0m                     [01;35mtest.png[0m
]0;amv69@login0b:~(rnaseq) [amv69@n419 ~]$ cd lys2Split/
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ samtools view lys[K[K[Ktest.fastq.
test.fastq.bam                  test.fastq.discordants.bam      test.fastq.splitters.bam
test.fastq.bam.bai              test.fastq.discordants.bam.bai  test.fastq.splitters.bam.bai
(rnaseq) [amv69@n419 lys2Split]$ samtools view test.fastq.splitters.bam
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ samtools view test.fastq.splitters.bam-test.fastq.splitters.bamHtest.fastq.splitters.bam test.fastq.splitters.bam
@HD	VN:1.3	SO:coordinate
@SQ	SN:chrII	LN:813184
@RG	ID:NA12878.S1	LB:lib1	SM:NA12878
@PG	ID:bwa	PN:bwa	CL:/ihome/ckaplan/amv69/speedseq//bin/bwa mem -t 1 -R @RG\tID:NA12878.S1\tSM:NA12878\tLB:lib1 /ihome/ckaplan/amv69/Lys2/chrII.fa /ihome/ckaplan/amv69/Lys2/test.fastq /ihome/ckaplan/amv69/Lys2/lys2-173R2_ME015_S15_R2_001.fastq.gz	VN:0.7.10-r789
@PG	ID:SAMBLASTER	CL:samblaster -i stdin -o stdout --addMateTags -d test.fastq.Wt5UqRIdz1iZ/disc_pipe -s test.fastq.Wt5UqRIdz1iZ/spl_pipe --maxSplitCount 2 --maxUnmappedBases 50 --minIndelSize 50 --minNonOverlap 20	VN:0.1.22
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ samtools view -H test.fastq.splitters.bam[3Ptest.fastq.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[25Pcd lys2Split/ls[Kconda activate rnaseq[5Psource ~/.bashrc[1P/.bashrc~/.bashrc[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls
Miniconda3-latest-Linux-x86_64.sh  test.fastq.discordants.bam      test.fastq.splitters.bam.bai
test.fastq.bam                     test.fastq.discordants.bam.bai
test.fastq.bam.bai                 test.fastq.splitters.bam
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ c[Krm *
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ ls
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ cd ..
]0;amv69@login0b:~(rnaseq) [amv69@n419 ~]$ cd lys2Split/
]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ cd lys2Split/..[K[3Plsrm *[2Plssamtools view -H test.fastq.splitters.bam[3Ptest.fastq.splitters.bam[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[25Pcd lys2Split/ls[Kconda activate rnaseq[5Psource ~/.bashrc[1P/.bashrc[5Pconda initactivate rnaseq[7Pls miniconda3/[9Pcd ..ls[C[C[Cexport PATH="$PATH:~/miniconda3/bin"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csh Miniconda3-latest-Linux-x86_64.sh[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.shh[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmodule load conda[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cconda activate rnaseqsrun -n 1 -t 1:00:00 --pty bashls[Kexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls ..[Ksrun -n 1 -t 1:00:00 --pty bashexport PATH=~/speedseq/bin:PATHlog[Kvi ~/.bashrcls[Kexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvi[Klssource .bashrc[4Pvi[C[C[C[C[C[C[C[C/.bashrc[1P.bashrc[4@source[C[C[C[C[C[C[C[Cls[Kviexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kvi ~/.bashrclog[Kexport PATH=~/speedseq/bin:PATHsrun -n 1 -t 1:00:00 --pty bashls ..[Kexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Ksrun -n 1 -t 1:00:00 --pty bash[10Pconda activate rnaseq[4Pmodule load condawget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.shh[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[37Psh Miniconda3-latest-Linux-x86_64.sh
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexport PATH="$PATH:~/miniconda3/bin"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls ..[Kcd[C[C[Cls miniconda3/conda activate rnaseqinit[Ksource /.bashrc~/.bashrc[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ksppe[K[Keedseq align -i -c 10 -m 5 ~/[K/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys 2-1
lys2-128delta_ME013_S13_raw.bw        lys2-173R2_ME015_S15.sorted.bam.bai
lys2-128delta_ME014_S14_raw.bw        lys2-173R2_ME016_S16_R1_001.fastq.gz
lys2-173R2_ME015_S15_R1_001.fastq     lys2-173R2_ME016_S16_R2_001.fastq.gz
lys2-173R2_ME015_S15_R2_001.fastq.gz  lys2-173R2_ME016_S16_raw.bw
lys2-173R2_ME015_S15_raw.bw           lys2-173R2_ME016_S16.sorted.bam
lys2-173R2_ME015_S15.sorted.bam       lys2-173R2_ME016_S16.sorted.bam.bai
(rnaseq) [amv69@n419 lys2Split]$ speedseq align -i -c 10 -m 5 ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys22-173R2_ME015_S15_R2_001.fastq.gz 

usage:   speedseq align [options] <reference.fa> <in1.fq> [in2.fq]

positional args:
         reference.fa
                  fasta file (indexed with bwa)
         in1.fq   paired-end fastq file. if -p flag is used then expected to be
                    an interleaved paired-end fastq file, and in2.fq may be omitted.
                    (can be gzipped)
         in2.fq   paired-end fastq file. (can be gzipped)

alignment options:
         -o STR   output prefix [in1.fq]
         -R STR   read group header line such as "@RG\tID:id\tSM:samplename\tLB:lib" (required)
         -p       first fastq file consists of interleaved paired-end sequences
         -t INT   threads [1]
         -T DIR   temp directory [./output_prefix.XXXXXXXXXXXX]
         -I FLOAT[,FLOAT[,INT[,INT]]]
                  specify the mean, standard deviation (10% of the mean if absent), max
                    (4 sigma from the mean if absent) and min of the insert size distribution.
                    FR orientation only. [inferred]

samblaster options:
         -i       include duplicates in splitters and discordants
         -c INT   maximum number of split alignments for a read to be included in splitter file [2]
         -m INT   minimum non-overlapping base pairs between two alignments for a read to be included in splitter file [20]

sambamba options:
         -M       amount of memory in GB to be used for sorting [20]

global options:
         -K FILE  path to speedseq.config file (default: same directory as speedseq)
         -v       verbose
         -h       show this message

Error: no readgroup found. Please set a readgroup with the -R flag.

]0;amv69@login0b:~/lys2Split(rnaseq) [amv69@n419 lys2Split]$ speedseq align -i -c 10 -m 5 ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys22-173R2_ME015_S15_R2_001.fastq.gz [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C- ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CR ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/l[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2/[1@l[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C" ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C@ ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CR ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CG ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\ ~/Lys2/chrII.fa ~/Lys2/test.fastq ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ~/Lys2/chrII.fa ~/Lys2/test.fastq ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CI ~/Lys2/chrII.fa ~/Lys2/test.fastq [1@~[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CD ~/Lys2/chrII.fa ~/Lys2/test.fastq[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C: ~/Lys2/chrII.fa ~/Lys2/test.fast[1@q[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CN ~/Lys2/chrII.fa ~/Lys2/test.fas[1@t[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CA ~/Lys2/chrII.fa ~/Lys2/test.fa[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 ~/Lys2/chrII.fa ~/Lys2/test.f[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2 ~/Lys2/chrII.fa ~/Lys2/test.[1@f[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 ~/Lys2/chrII.fa ~/Lys2/test[1@.[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C7 ~/Lys2/chrII.fa ~/Lys2/tes[1@t[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 ~/Lys2/chrII.fa ~/Lys2/te[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C. ~/Lys2/chrII.fa ~/Lys2/t[1@e[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CS ~/Lys2/chrII.fa ~/Lys2/[1@t[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 ~/Lys2/chrII.fa ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\ ~/Lys2/chrII.fa ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ~/Lys2/chrII.fa ~/Ly[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CS ~/Lys2/chrII.fa ~/L[1@y[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CM ~/Lys2/chrII.fa ~/[1@L[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C: ~/Lys2/chrII.fa ~[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CN ~/Lys2/chrII.fa [1@~[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CA ~/Lys2/chrII.fa[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1 ~/Lys2/chrII.f[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2 ~/Lys2/chrII.[1@f[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 ~/Lys2/chrII[1@.[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C7 ~/Lys2/chrI[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C8 ~/Lys2/chr[C[1@I[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\ ~/Lys2/ch[1@r[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ~/Lys2/c[1@h[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CL ~/Lys2/[1@c[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CB ~/Lys2[1@/[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C: ~/Lys[1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C