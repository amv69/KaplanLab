umi_tools extract --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};
umi_tools extract --3prime --extract-method=string --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};


--bc-pattern='.+(?P<discard_1>AACTGTAGGCACCATCAAT){s<=2}(?P<umi_1>.{4})(?P<discard_2>.+)'

R1 5' : NNNN-ACAGGTTCAGAGTTCTACAGTCCGAC
R1 3' : GTTCAGAGTTCTACAGTCCGACGATC-NNNN

R2 3' : CAAGTCTCAAGATGTCAGGCTGCTAG-MMMM
R2 5' : MMMM-ACCTTAAGAGCCCACGGTTC


```
umi_tools extract --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};

umi_tools extract --3prime --extract-method=string --stdin=${f1} --read2-in=${f2} --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq} --log=${filename/.fastq/.txt};
```
This doesn't take into account the file names correctly but here the top line is what we were using to remove the sequence from the 5' end originally. I adapted the code to be ran again after the 5' end is removed, go back to the modified transcript and remove the sequence from the 3' end. So just to confirm, with this being run we don't want to remove the adapter from the 3' end first.

cutadapt --overlap 7  -a  N{4}TGGAATTCTCGGGTGCCAAG -A N{4}GATCGTCGGACTGTAGAACT -o ck03_r1.fastq -p ck03_r2.fastq ck03_S2_L003_R1_001.fastq ck03_S2_L003_R2_001.fastq

umi_tools extract --stdin=ck03_r1.fastq --read2-in=ck03_r2.fastq --bc-pattern=NNNN --bc-pattern2=NNNN --stdout=${filename/.fastq/_UMI.fastq} --read2-out=${filename2/.fastq/_UMI.fastq};
